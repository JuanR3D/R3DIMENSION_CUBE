2024-03-19 09:12:14,731 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2024-03-19 09:12:14,732 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a0
2024-03-19 09:12:14,733 [functions.py:log_start()] - Python version: 3.9
2024-03-19 09:12:14,939 [config.py:get_config_file_location()] - Passed config (-c): .
2024-03-19 09:12:14,941 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2024-03-19 09:12:14,960 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2024-03-19 09:12:15,125 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2024-03-19 09:12:15,125 [config.py:install_language()] - Using lang en
2024-03-19 09:12:15,161 [screen.py:__init__()] - Monitors: 1 using number: 0
2024-03-19 09:12:15,166 [screen.py:__init__()] - Wayland: False Display name: :0
2024-03-19 09:12:15,174 [screen.py:__init__()] - Screen resolution: 1024x600
2024-03-19 09:12:15,177 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2024-03-19 09:12:16,395 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2024-03-19 09:12:16,409 [screen.py:set_screenblanking_timeout()] - Using DPMS
2024-03-19 09:12:16,420 [screen.py:initial_connection()] - Default printer: None
2024-03-19 09:12:16,501 [screen.py:connect_printer()] - Connecting to printer: Printer
2024-03-19 09:12:16,502 [screen.py:_load_panel()] - Loading panel: splash_screen
2024-03-19 09:12:16,578 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-03-19 09:12:16,593 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-03-19 09:12:16,594 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:16,630 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2024-03-19 09:12:16,653 [KlippyWebsocket.py:connect()] - Starting websocket thread
2024-03-19 09:12:16,679 [_logging.py:info()] - Websocket connected
2024-03-19 09:12:16,680 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2024-03-19 09:12:16,981 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:17,003 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Unable to create log file at '/home/biqu/printer_data/logs/moonraker.log'. Make sure that the folder '/home/biqu/printer_data/logs' exists and Moonraker has Read/Write access to the folder. 

2024-03-19 09:12:17,017 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2024-03-19 09:12:17,037 [printer.py:configure_cameras()] - Cameras: []
2024-03-19 09:12:17,038 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': ["Unable to create log file at '/home/biqu/printer_data/logs/moonraker.log'. Make sure that the folder '/home/biqu/printer_data/logs' exists and Moonraker has Read/Write access to the folder. "], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-03-19 09:12:17,039 [screen.py:init_klipper()] - Klipper not connected
2024-03-19 09:12:20,377 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:20,415 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': ["Unable to create log file at '/home/biqu/printer_data/logs/moonraker.log'. Make sure that the folder '/home/biqu/printer_data/logs' exists and Moonraker has Read/Write access to the folder. "], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-03-19 09:12:20,418 [screen.py:init_klipper()] - Klipper not connected
2024-03-19 09:12:23,377 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:23,395 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ["Unable to create log file at '/home/biqu/printer_data/logs/moonraker.log'. Make sure that the folder '/home/biqu/printer_data/logs' exists and Moonraker has Read/Write access to the folder. "], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-03-19 09:12:23,395 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2024-03-19 09:12:23,416 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2024-03-19 09:12:23,504 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-03-19 09:12:23,504 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-03-19 09:12:23,505 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2024-03-19 09:12:23,505 [printer.py:reinit()] - # Extruders: 0
2024-03-19 09:12:23,505 [printer.py:reinit()] - # Temperature devices: 0
2024-03-19 09:12:23,506 [printer.py:reinit()] - # Fans: 0
2024-03-19 09:12:23,506 [printer.py:reinit()] - # Output pins: 0
2024-03-19 09:12:23,506 [printer.py:reinit()] - # Leds: 0
2024-03-19 09:12:23,506 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2024-03-19 09:12:23,528 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-03-19 09:12:23,530 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-03-19 09:12:23,760 [files.py:set_gcodes_path()] - Gcodes path: None
2024-03-19 09:12:23,761 [screen.py:init_klipper()] - Printer initialized
2024-03-19 09:12:23,761 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-03-19 09:12:23,762 [printer.py:change_state()] - Adding callback for state: error
2024-03-19 09:12:23,766 [screen.py:show_panel()] - Reinitializing panel
2024-03-19 09:12:23,830 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-03-19 09:12:10,297 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2024-03-19 09:12:10,298 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a0
2024-03-19 09:12:10,298 [functions.py:log_start()] - Python version: 3.9
2024-03-19 09:12:10,556 [config.py:get_config_file_location()] - Passed config (-c): .
2024-03-19 09:12:10,560 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2024-03-19 09:12:10,582 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2024-03-19 09:12:10,742 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2024-03-19 09:12:10,743 [config.py:install_language()] - Using lang en
2024-03-19 09:12:10,775 [screen.py:__init__()] - Monitors: 1 using number: 0
2024-03-19 09:12:10,778 [screen.py:__init__()] - Wayland: False Display name: :0
2024-03-19 09:12:10,784 [screen.py:__init__()] - Screen resolution: 1024x768
2024-03-19 09:12:10,788 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2024-03-19 09:12:11,671 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2024-03-19 09:12:11,689 [screen.py:set_screenblanking_timeout()] - Using DPMS
2024-03-19 09:12:11,727 [screen.py:initial_connection()] - Default printer: None
2024-03-19 09:12:11,833 [screen.py:connect_printer()] - Connecting to printer: Printer
2024-03-19 09:12:11,837 [screen.py:_load_panel()] - Loading panel: splash_screen
2024-03-19 09:12:12,025 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-03-19 09:12:12,056 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-03-19 09:12:12,057 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:12,131 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2024-03-19 09:12:12,165 [KlippyWebsocket.py:connect()] - Starting websocket thread
2024-03-19 09:12:12,233 [_logging.py:info()] - Websocket connected
2024-03-19 09:12:12,233 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2024-03-19 09:12:12,656 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:12,687 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2024-03-19 09:12:12,723 [printer.py:configure_cameras()] - Cameras: []
2024-03-19 09:12:12,724 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-03-19 09:12:12,725 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2024-03-19 09:12:12,759 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2024-03-19 09:12:12,803 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-03-19 09:12:12,804 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-03-19 09:12:12,804 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2024-03-19 09:12:12,805 [printer.py:reinit()] - # Extruders: 0
2024-03-19 09:12:12,805 [printer.py:reinit()] - # Temperature devices: 0
2024-03-19 09:12:12,806 [printer.py:reinit()] - # Fans: 0
2024-03-19 09:12:12,806 [printer.py:reinit()] - # Output pins: 0
2024-03-19 09:12:12,807 [printer.py:reinit()] - # Leds: 0
2024-03-19 09:12:12,807 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2024-03-19 09:12:12,845 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-03-19 09:12:12,857 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2024-03-19 09:12:13,059 [files.py:set_gcodes_path()] - Gcodes path: None
2024-03-19 09:12:13,060 [screen.py:init_klipper()] - Printer initialized
2024-03-19 09:12:13,060 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2024-03-19 09:12:13,064 [printer.py:change_state()] - Adding callback for state: error
2024-03-19 09:12:13,087 [screen.py:show_panel()] - Reinitializing panel
2024-03-19 09:12:13,175 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:53:26,905 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-01 18:53:26,906 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 18:53:26,908 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 18:53:26,909 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:53:26,913 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:53:27,007 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:53:29,961 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 18:53:29,980 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 18:53:29,997 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 18:53:29,998 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 18:53:29,998 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 18:53:30,019 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 18:53:30,069 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 18:53:30,069 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:53:30,070 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 18:53:30,070 [printer.py:reinit()] - # Extruders: 0
2025-04-01 18:53:30,071 [printer.py:reinit()] - # Temperature devices: 0
2025-04-01 18:53:30,071 [printer.py:reinit()] - # Fans: 0
2025-04-01 18:53:30,071 [printer.py:reinit()] - # Output pins: 0
2025-04-01 18:53:30,071 [printer.py:reinit()] - # Leds: 0
2025-04-01 18:53:30,071 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 18:53:30,101 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 18:53:30,108 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2025-04-01 18:53:30,327 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-01 18:53:30,327 [screen.py:init_klipper()] - Printer initialized
2025-04-01 18:53:30,328 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-01 18:53:30,328 [printer.py:change_state()] - Adding callback for state: error
2025-04-01 18:53:30,332 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:53:30,400 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:53:59,109 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-01 18:53:59,109 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 18:53:59,111 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 18:53:59,111 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:53:59,113 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:53:59,179 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:54:01,963 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 18:54:01,983 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 18:54:02,000 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 18:54:02,001 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 18:54:02,001 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 18:54:02,022 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 18:54:02,043 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 18:54:02,044 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:54:02,044 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 18:54:02,044 [printer.py:reinit()] - # Extruders: 0
2025-04-01 18:54:02,045 [printer.py:reinit()] - # Temperature devices: 0
2025-04-01 18:54:02,045 [printer.py:reinit()] - # Fans: 0
2025-04-01 18:54:02,045 [printer.py:reinit()] - # Output pins: 0
2025-04-01 18:54:02,045 [printer.py:reinit()] - # Leds: 0
2025-04-01 18:54:02,046 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 18:54:02,068 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 18:54:02,070 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2025-04-01 18:54:02,301 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-01 18:54:02,301 [screen.py:init_klipper()] - Printer initialized
2025-04-01 18:54:02,302 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-01 18:54:02,302 [printer.py:change_state()] - Adding callback for state: error
2025-04-01 18:54:02,306 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:54:02,371 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:54:23,400 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-01 18:54:23,401 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 18:54:23,403 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 18:54:23,403 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:54:23,407 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:54:23,531 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:54:26,961 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 18:54:26,979 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 18:54:26,996 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 18:54:26,997 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 18:54:26,997 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 18:54:27,018 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 18:54:27,168 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexz', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'PT1000', 'pullup_resistor': '2200', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'PT1000', 'sensor_pin': 'TH1', 'smooth_time': '2', 'pullup_resistor': '2200', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'PT1000', 'pullup_resistor': 2200.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexz', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'PT1000', 'pullup_resistor': 2200.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 18:54:27,170 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:54:27,171 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 18:54:27,172 [printer.py:reinit()] - # Extruders: 1
2025-04-01 18:54:27,172 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 18:54:27,172 [printer.py:reinit()] - # Fans: 0
2025-04-01 18:54:27,172 [printer.py:reinit()] - # Output pins: 0
2025-04-01 18:54:27,172 [printer.py:reinit()] - # Leds: 0
2025-04-01 18:54:27,173 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 18:54:27,195 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 18:54:27,198 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 18:54:27,473 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 18:54:27,473 [screen.py:init_klipper()] - Printer initialized
2025-04-01 18:54:27,474 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 18:54:27,474 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 18:54:27,478 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 18:54:27,483 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-01 18:54:27,714 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 18:54:27,733 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 18:54:27,751 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 18:54:27,807 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 18:54:27,809 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 18:54:27,827 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-01 18:54:27,828 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-01 18:54:28,422 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-01 18:54:28,423 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-01 18:54:28,436 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:54:28,439 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:54:28,513 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:54:32,962 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 18:54:33,046 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 18:54:33,048 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 18:54:33,076 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 18:55:46,004 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-01 18:55:46,005 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 18:55:46,008 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 18:55:46,009 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:55:46,015 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:55:46,109 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:55:48,963 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 18:55:48,982 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 18:55:48,999 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 18:55:48,999 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 18:55:49,000 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 18:55:49,020 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 18:55:49,222 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexz', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'PT1000', 'pullup_resistor': '2200', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'PT1000', 'sensor_pin': 'TH1', 'smooth_time': '2', 'pullup_resistor': '2200', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'PT1000', 'pullup_resistor': 2200.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexz', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'PT1000', 'pullup_resistor': 2200.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 18:55:49,225 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:55:49,226 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 18:55:49,226 [printer.py:reinit()] - # Extruders: 1
2025-04-01 18:55:49,226 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 18:55:49,226 [printer.py:reinit()] - # Fans: 0
2025-04-01 18:55:49,227 [printer.py:reinit()] - # Output pins: 0
2025-04-01 18:55:49,227 [printer.py:reinit()] - # Leds: 0
2025-04-01 18:55:49,227 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 18:55:49,250 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 18:55:49,252 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 18:55:49,519 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 18:55:49,520 [screen.py:init_klipper()] - Printer initialized
2025-04-01 18:55:49,520 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 18:55:49,521 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 18:55:49,524 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 18:55:49,529 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:55:49,645 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 18:55:49,655 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 18:55:49,664 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 18:55:49,713 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 18:55:49,716 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 18:55:49,754 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 18:55:49,757 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 18:55:49,778 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 18:55:51,475 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-01 18:55:51,476 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-01 18:55:51,490 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:55:51,496 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:55:51,611 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:56:40,822 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-01 18:56:40,823 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 18:56:40,824 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 18:56:40,825 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:56:40,829 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:56:40,913 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:56:43,961 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 18:56:43,980 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 18:56:43,998 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 18:56:43,998 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 18:56:43,999 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 18:56:44,023 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 18:56:44,278 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexz', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexz', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 18:56:44,280 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:56:44,282 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 18:56:44,282 [printer.py:reinit()] - # Extruders: 1
2025-04-01 18:56:44,282 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 18:56:44,283 [printer.py:reinit()] - # Fans: 0
2025-04-01 18:56:44,283 [printer.py:reinit()] - # Output pins: 0
2025-04-01 18:56:44,283 [printer.py:reinit()] - # Leds: 0
2025-04-01 18:56:44,284 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 18:56:44,320 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 18:56:44,323 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 18:56:44,566 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 18:56:44,567 [screen.py:init_klipper()] - Printer initialized
2025-04-01 18:56:44,567 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 18:56:44,568 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 18:56:44,570 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 18:56:44,576 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:56:44,692 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 18:56:44,703 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 18:56:44,712 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 18:56:44,759 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 18:56:44,761 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 18:56:44,805 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 18:56:44,807 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 18:56:44,828 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 18:57:07,439 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-01 18:57:07,440 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 18:57:07,442 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 18:57:07,443 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:57:07,450 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:57:07,569 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:57:10,960 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 18:57:10,978 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 18:57:10,995 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 18:57:10,996 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 18:57:10,996 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 18:57:11,017 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 18:57:11,110 [screen.py:init_klipper()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 18:57:11,111 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:57:11,112 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 18:57:11,112 [printer.py:reinit()] - # Extruders: 0
2025-04-01 18:57:11,112 [printer.py:reinit()] - # Temperature devices: 0
2025-04-01 18:57:11,112 [printer.py:reinit()] - # Fans: 0
2025-04-01 18:57:11,112 [printer.py:reinit()] - # Output pins: 0
2025-04-01 18:57:11,112 [printer.py:reinit()] - # Leds: 0
2025-04-01 18:57:11,113 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 18:57:11,136 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 18:57:11,138 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2025-04-01 18:57:11,367 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 18:57:11,368 [screen.py:init_klipper()] - Printer initialized
2025-04-01 18:57:11,369 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-01 18:57:11,369 [printer.py:change_state()] - Adding callback for state: error
2025-04-01 18:57:11,372 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:57:11,438 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:58:39,518 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-01 18:58:39,518 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 18:58:39,520 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 18:58:39,521 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:58:39,525 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:58:39,648 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 18:58:42,961 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 18:58:42,979 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 18:58:42,996 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 18:58:42,997 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 18:58:42,997 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 18:58:43,018 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 18:58:43,061 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexz', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexz', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 18:58:43,064 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 18:58:43,065 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 18:58:43,066 [printer.py:reinit()] - # Extruders: 1
2025-04-01 18:58:43,066 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 18:58:43,067 [printer.py:reinit()] - # Fans: 0
2025-04-01 18:58:43,067 [printer.py:reinit()] - # Output pins: 0
2025-04-01 18:58:43,067 [printer.py:reinit()] - # Leds: 0
2025-04-01 18:58:43,068 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 18:58:43,103 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 18:58:43,106 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 18:58:43,367 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 18:58:43,367 [screen.py:init_klipper()] - Printer initialized
2025-04-01 18:58:43,368 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 18:58:43,368 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 18:58:43,371 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 18:58:43,375 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 18:58:43,487 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 18:58:43,498 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 18:58:43,508 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 18:58:43,559 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 18:58:43,563 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 18:58:43,600 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 18:58:43,603 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 18:58:43,625 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 19:00:27,411 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-01 19:00:27,412 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 19:00:27,413 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 19:00:27,414 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:00:27,418 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 19:00:27,484 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 19:00:30,961 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:00:30,978 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 19:00:30,996 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 19:00:30,996 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 19:00:30,997 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 19:00:31,023 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 19:00:31,304 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 19:00:31,307 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:00:31,309 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 19:00:31,309 [printer.py:reinit()] - # Extruders: 1
2025-04-01 19:00:31,310 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 19:00:31,311 [printer.py:reinit()] - # Fans: 0
2025-04-01 19:00:31,312 [printer.py:reinit()] - # Output pins: 0
2025-04-01 19:00:31,314 [printer.py:reinit()] - # Leds: 0
2025-04-01 19:00:31,315 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 19:00:31,346 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 19:00:31,349 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 19:00:31,563 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 19:00:31,564 [screen.py:init_klipper()] - Printer initialized
2025-04-01 19:00:31,564 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 19:00:31,565 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 19:00:31,569 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 19:00:31,574 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 19:00:31,685 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 19:00:31,696 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 19:00:31,706 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 19:00:31,753 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 19:00:31,755 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:00:31,792 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 19:00:31,795 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 19:00:31,816 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 19:01:09,728 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-01 19:01:09,734 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-01 19:01:09,738 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-01 19:01:09,738 [prompts.py:set_button()] - Eje X 1 SELECT_X_AXIS_MOTOR primary
2025-04-01 19:01:09,742 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-01 19:01:09,743 [prompts.py:set_button()] - Eje Y 2 SELECT_Y_AXIS_MOTOR primary
2025-04-01 19:01:09,747 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-01 19:01:09,747 [prompts.py:set_button()] - Eje Z 3 SELECT_Z_AXIS_MOTOR primary
2025-04-01 19:01:09,751 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-01 19:01:09,751 [prompts.py:set_button()] - Cerrar esta pestaña 4 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-01 19:01:09,754 [prompts.py:decode()] - prompt_show
2025-04-01 19:01:09,754 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Eje X', 'response': 1, 'gcode': 'SELECT_X_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Y', 'response': 2, 'gcode': 'SELECT_Y_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Z', 'response': 3, 'gcode': 'SELECT_Z_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 4, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-01 19:01:09,816 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-01 19:01:09,817 [screen.py:wake_screen()] - Screen wake up
2025-04-01 19:01:14,201 [prompts.py:decode()] - prompt_end
2025-04-01 19:01:14,227 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-01 19:01:14,230 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-01 19:01:14,232 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-01 19:01:14,234 [prompts.py:decode()] - prompt_button_group_start
2025-04-01 19:01:14,235 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-01 19:01:14,238 [prompts.py:decode()] - prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary
2025-04-01 19:01:14,239 [prompts.py:set_button()] - Y0 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1  primary
2025-04-01 19:01:14,240 [prompts.py:decode()] - prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary
2025-04-01 19:01:14,241 [prompts.py:set_button()] - Y1 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1  secondary
2025-04-01 19:01:14,250 [prompts.py:decode()] - prompt_button_group_end
2025-04-01 19:01:14,251 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-01 19:01:14,254 [prompts.py:decode()] - prompt_button_group_start
2025-04-01 19:01:14,254 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-01 19:01:14,355 [prompts.py:decode()] - prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary
2025-04-01 19:01:14,355 [prompts.py:set_button()] - Y0 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1  primary
2025-04-01 19:01:14,357 [prompts.py:decode()] - prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary
2025-04-01 19:01:14,357 [prompts.py:set_button()] - Y1 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1  secondary
2025-04-01 19:01:14,358 [prompts.py:decode()] - prompt_button_group_end
2025-04-01 19:01:14,359 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-01 19:01:14,360 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-01 19:01:14,360 [prompts.py:set_button()] - Atras 5 MOVER_UN_SOLO_MOTOR info
2025-04-01 19:01:14,361 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-01 19:01:14,361 [prompts.py:set_button()] - Cerrar esta pestaña 6 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-01 19:01:14,362 [prompts.py:decode()] - prompt_show
2025-04-01 19:01:14,363 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Y0 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Y1 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Y0 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Y1 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Atras', 'response': 5, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 6, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-01 19:01:14,438 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-01 19:01:14,440 [screen.py:wake_screen()] - Screen wake up
2025-04-01 19:01:17,682 [prompts.py:decode()] - prompt_end
2025-04-01 19:01:17,691 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-01 19:05:07,076 [screen.py:show_popup_message()] - error: Endstop x still triggered after retract
2025-04-01 19:07:55,486 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-01 19:07:55,487 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 19:07:55,488 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 19:07:55,489 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:07:55,495 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 19:07:55,642 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 19:07:58,960 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:07:58,978 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 19:07:58,995 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 19:07:58,996 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 19:07:58,996 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 19:07:59,017 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 19:07:59,293 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 19:07:59,297 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:07:59,298 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 19:07:59,299 [printer.py:reinit()] - # Extruders: 1
2025-04-01 19:07:59,299 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 19:07:59,300 [printer.py:reinit()] - # Fans: 0
2025-04-01 19:07:59,300 [printer.py:reinit()] - # Output pins: 0
2025-04-01 19:07:59,301 [printer.py:reinit()] - # Leds: 0
2025-04-01 19:07:59,304 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 19:07:59,346 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 19:07:59,348 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 19:07:59,554 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 19:07:59,555 [screen.py:init_klipper()] - Printer initialized
2025-04-01 19:07:59,555 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 19:07:59,556 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 19:07:59,559 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 19:07:59,564 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 19:07:59,733 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 19:07:59,754 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 19:07:59,771 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 19:07:59,863 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 19:07:59,865 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:07:59,905 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 19:07:59,908 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 19:07:59,929 [screen.py:init_tempstore()] - Temperature store size: 1200
2024-03-19 09:12:10,768 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2024-03-19 09:12:10,769 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a0
2024-03-19 09:12:10,769 [functions.py:log_start()] - Python version: 3.9
2024-03-19 09:12:11,023 [config.py:get_config_file_location()] - Passed config (-c): .
2024-03-19 09:12:11,028 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2024-03-19 09:12:11,051 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2024-03-19 09:12:11,229 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2024-03-19 09:12:11,230 [config.py:install_language()] - Using lang en
2024-03-19 09:12:11,274 [screen.py:__init__()] - Monitors: 1 using number: 0
2024-03-19 09:12:11,283 [screen.py:__init__()] - Wayland: False Display name: :0
2024-03-19 09:12:11,293 [screen.py:__init__()] - Screen resolution: 1024x768
2024-03-19 09:12:11,299 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2024-03-19 09:12:12,402 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2024-03-19 09:12:12,430 [screen.py:set_screenblanking_timeout()] - Using DPMS
2024-03-19 09:12:12,454 [screen.py:initial_connection()] - Default printer: None
2024-03-19 09:12:12,561 [screen.py:connect_printer()] - Connecting to printer: Printer
2024-03-19 09:12:12,564 [screen.py:_load_panel()] - Loading panel: splash_screen
2024-03-19 09:12:12,720 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2024-03-19 09:12:12,747 [KlippyWebsocket.py:connect()] - Attempting to connect
2024-03-19 09:12:12,748 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:12,796 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2024-03-19 09:12:12,820 [KlippyWebsocket.py:connect()] - Starting websocket thread
2024-03-19 09:12:12,842 [_logging.py:info()] - Websocket connected
2024-03-19 09:12:12,843 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2024-03-19 09:12:13,217 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2024-03-19 09:12:13,251 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2024-03-19 09:12:13,284 [printer.py:configure_cameras()] - Cameras: []
2024-03-19 09:12:13,288 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2024-03-19 09:12:13,289 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2024-03-19 09:12:13,404 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2024-03-19 09:12:13,446 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2024-03-19 09:12:13,451 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2024-03-19 09:12:13,452 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2024-03-19 09:12:13,452 [printer.py:reinit()] - # Extruders: 1
2024-03-19 09:12:13,453 [printer.py:reinit()] - # Temperature devices: 1
2024-03-19 09:12:13,454 [printer.py:reinit()] - # Fans: 0
2024-03-19 09:12:13,455 [printer.py:reinit()] - # Output pins: 0
2024-03-19 09:12:13,466 [printer.py:reinit()] - # Leds: 0
2024-03-19 09:12:13,467 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2024-03-19 09:12:13,497 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2024-03-19 09:12:13,500 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2024-03-19 09:12:13,730 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2024-03-19 09:12:13,731 [screen.py:init_klipper()] - Printer initialized
2024-03-19 09:12:13,731 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2024-03-19 09:12:13,732 [printer.py:change_state()] - Adding callback for state: startup
2024-03-19 09:12:13,945 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2024-03-19 09:12:13,945 [printer.py:change_state()] - Adding callback for state: ready
2024-03-19 09:12:13,947 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2024-03-19 09:12:13,958 [screen.py:_load_panel()] - Loading panel: main_menu
2024-03-19 09:12:14,144 [main_menu.py:__init__()] - ### Making MainMenu
2024-03-19 09:12:14,161 [main_menu.py:add_device()] - Adding device: extruder
2024-03-19 09:12:14,177 [main_menu.py:add_device()] - Adding device: heater_bed
2024-03-19 09:12:14,258 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2024-03-19 09:12:14,261 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2024-03-19 09:12:14,305 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2024-03-19 09:12:14,306 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2024-03-19 09:12:19,399 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2024-03-19 09:12:19,470 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2024-03-19 09:12:19,475 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2024-03-19 09:12:19,509 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 19:15:37,706 [screen.py:show_popup_message()] - error: // Unknown command:"MOVE"
2025-04-01 19:17:13,225 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-01 19:17:13,226 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a0
2025-04-01 19:17:13,226 [functions.py:log_start()] - Python version: 3.9
2025-04-01 19:17:13,597 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-01 19:17:13,600 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-01 19:17:13,619 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-01 19:17:13,794 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-01 19:17:13,795 [config.py:install_language()] - Using lang en
2025-04-01 19:17:13,855 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-01 19:17:13,862 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-01 19:17:13,884 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-01 19:17:13,889 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-01 19:17:15,399 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-01 19:17:15,433 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-01 19:17:15,464 [screen.py:initial_connection()] - Default printer: None
2025-04-01 19:17:15,592 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-01 19:17:15,594 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-01 19:17:15,695 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 19:17:15,722 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-01 19:17:15,723 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:17:15,767 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-01 19:17:15,796 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-01 19:17:15,822 [_logging.py:info()] - Websocket connected
2025-04-01 19:17:15,822 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-01 19:17:16,216 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:17:16,247 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 19:17:16,275 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 19:17:16,276 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 19:17:16,277 [screen.py:init_klipper()] - Klipper not connected
2025-04-01 19:17:19,361 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:17:19,389 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 19:17:19,390 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 19:17:19,413 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 19:17:19,456 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 19:17:19,459 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:17:19,460 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2
2025-04-01 19:17:19,461 [printer.py:reinit()] - # Extruders: 1
2025-04-01 19:17:19,461 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 19:17:19,462 [printer.py:reinit()] - # Fans: 0
2025-04-01 19:17:19,462 [printer.py:reinit()] - # Output pins: 0
2025-04-01 19:17:19,463 [printer.py:reinit()] - # Leds: 0
2025-04-01 19:17:19,464 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 19:17:19,518 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 19:17:19,523 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 19:17:19,776 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 19:17:19,776 [screen.py:init_klipper()] - Printer initialized
2025-04-01 19:17:19,777 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 19:17:19,777 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 19:17:19,781 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 19:17:19,786 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-01 19:17:19,923 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 19:17:19,936 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 19:17:19,952 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 19:17:20,012 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 19:17:20,015 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:17:20,036 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-01 19:17:20,038 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-01 19:17:25,359 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:17:25,402 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 19:17:25,410 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 19:17:25,449 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 19:17:12,036 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-01 19:17:12,037 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-01 19:17:12,037 [functions.py:log_start()] - Python version: 3.9
2025-04-01 19:17:12,318 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-01 19:17:12,324 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-01 19:17:12,344 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-01 19:17:12,525 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-01 19:17:12,526 [config.py:install_language()] - Using lang en
2025-04-01 19:17:12,561 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-01 19:17:12,565 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-01 19:17:12,571 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-01 19:17:12,575 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-01 19:17:13,448 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-01 19:17:13,462 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-01 19:17:13,472 [screen.py:initial_connection()] - Default printer: None
2025-04-01 19:17:13,554 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-01 19:17:13,554 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-01 19:17:13,645 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 19:17:13,670 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-01 19:17:13,671 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:17:13,766 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-01 19:17:13,790 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-01 19:17:13,814 [_logging.py:info()] - Websocket connected
2025-04-01 19:17:13,815 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-01 19:17:14,161 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:17:14,187 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 19:17:14,212 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 19:17:14,213 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 19:17:14,214 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 19:17:14,248 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 19:17:14,330 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 19:17:14,334 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:17:14,335 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d
2025-04-01 19:17:14,336 [printer.py:reinit()] - # Extruders: 1
2025-04-01 19:17:14,336 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 19:17:14,337 [printer.py:reinit()] - # Fans: 0
2025-04-01 19:17:14,337 [printer.py:reinit()] - # Output pins: 0
2025-04-01 19:17:14,337 [printer.py:reinit()] - # Leds: 0
2025-04-01 19:17:14,338 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 19:17:14,385 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 19:17:14,388 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 19:17:14,611 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 19:17:14,612 [screen.py:init_klipper()] - Printer initialized
2025-04-01 19:17:14,613 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 19:17:14,632 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 19:17:14,652 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 19:17:14,675 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-01 19:17:14,869 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 19:17:14,894 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 19:17:14,911 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 19:17:14,986 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 19:17:14,989 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:17:15,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-01 19:17:15,014 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-01 19:17:20,177 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:17:20,258 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 19:17:20,264 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 19:17:20,297 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 19:17:11,960 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-01 19:17:11,962 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-01 19:17:11,962 [functions.py:log_start()] - Python version: 3.9
2025-04-01 19:17:12,200 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-01 19:17:12,206 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-01 19:17:12,225 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-01 19:17:12,393 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-01 19:17:12,394 [config.py:install_language()] - Using lang en
2025-04-01 19:17:12,425 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-01 19:17:12,428 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-01 19:17:12,434 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-01 19:17:12,437 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-01 19:17:13,351 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-01 19:17:13,365 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-01 19:17:13,375 [screen.py:initial_connection()] - Default printer: None
2025-04-01 19:17:13,453 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-01 19:17:13,454 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-01 19:17:13,544 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 19:17:13,568 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-01 19:17:13,568 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:17:13,617 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-01 19:17:13,701 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-01 19:17:13,733 [_logging.py:info()] - Websocket connected
2025-04-01 19:17:13,734 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-01 19:17:14,096 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:17:14,122 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 19:17:14,148 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 19:17:14,149 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 19:17:14,149 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 19:17:14,179 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 19:17:14,327 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'cartesian', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 19:17:14,331 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:17:14,332 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d
2025-04-01 19:17:14,332 [printer.py:reinit()] - # Extruders: 1
2025-04-01 19:17:14,333 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 19:17:14,333 [printer.py:reinit()] - # Fans: 0
2025-04-01 19:17:14,334 [printer.py:reinit()] - # Output pins: 0
2025-04-01 19:17:14,334 [printer.py:reinit()] - # Leds: 0
2025-04-01 19:17:14,335 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 19:17:14,372 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 19:17:14,375 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 19:17:14,623 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 19:17:14,623 [screen.py:init_klipper()] - Printer initialized
2025-04-01 19:17:14,624 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 19:17:14,625 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 19:17:14,693 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 19:17:14,702 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-01 19:17:14,911 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 19:17:14,926 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 19:17:14,939 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 19:17:15,001 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 19:17:15,004 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:17:15,027 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-01 19:17:15,029 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-01 19:17:20,217 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:17:20,300 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 19:17:20,305 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 19:17:20,330 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-01 19:18:06,713 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-01 19:18:06,713 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-01 19:18:06,715 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-01 19:18:06,715 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:18:06,720 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 19:18:06,785 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-01 19:18:10,215 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-01 19:18:10,235 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-01 19:18:10,253 [printer.py:configure_cameras()] - Cameras: []
2025-04-01 19:18:10,253 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-01 19:18:10,254 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-01 19:18:10,275 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-01 19:18:10,493 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-01 19:18:10,497 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-01 19:18:10,498 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d
2025-04-01 19:18:10,498 [printer.py:reinit()] - # Extruders: 1
2025-04-01 19:18:10,499 [printer.py:reinit()] - # Temperature devices: 1
2025-04-01 19:18:10,499 [printer.py:reinit()] - # Fans: 0
2025-04-01 19:18:10,500 [printer.py:reinit()] - # Output pins: 0
2025-04-01 19:18:10,500 [printer.py:reinit()] - # Leds: 0
2025-04-01 19:18:10,501 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-01 19:18:10,536 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-01 19:18:10,538 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-01 19:18:10,805 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-01 19:18:10,806 [screen.py:init_klipper()] - Printer initialized
2025-04-01 19:18:10,806 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-01 19:18:10,807 [printer.py:change_state()] - Adding callback for state: ready
2025-04-01 19:18:10,809 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-01 19:18:10,815 [screen.py:show_panel()] - Reinitializing panel
2025-04-01 19:18:10,927 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-01 19:18:10,938 [main_menu.py:add_device()] - Adding device: extruder
2025-04-01 19:18:10,947 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-01 19:18:11,010 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-01 19:18:11,013 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-01 19:18:11,050 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-01 19:18:11,052 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-01 19:18:11,075 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:14:12,505 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 07:14:12,506 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 07:14:12,507 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 07:14:12,507 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:14:12,511 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:14:12,577 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:14:15,401 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:14:15,426 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:14:15,448 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:14:15,449 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:14:15,450 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:14:15,471 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:14:15,504 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': '!M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': '!M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': '!M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': '!M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:14:15,508 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:14:15,509 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d
2025-04-02 07:14:15,509 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:14:15,509 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:14:15,509 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:14:15,509 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:14:15,510 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:14:15,510 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:14:15,535 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:14:15,538 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:14:15,761 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:14:15,761 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:14:15,762 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:14:15,762 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:14:15,765 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:14:15,770 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:14:15,882 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:14:15,893 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:14:15,902 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:14:15,951 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:14:15,953 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:14:15,989 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:14:15,992 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:14:16,060 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:17:13,577 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-02 07:17:13,578 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-02 07:17:13,578 [functions.py:log_start()] - Python version: 3.9
2025-04-02 07:17:13,825 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-02 07:17:13,828 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-02 07:17:13,849 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-02 07:17:14,004 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-02 07:17:14,005 [config.py:install_language()] - Using lang en
2025-04-02 07:17:14,041 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-02 07:17:14,047 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-02 07:17:14,057 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-02 07:17:14,067 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-02 07:17:15,147 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-02 07:17:15,182 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-02 07:17:15,209 [screen.py:initial_connection()] - Default printer: None
2025-04-02 07:17:15,301 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-02 07:17:15,303 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-02 07:17:15,392 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:17:15,417 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-02 07:17:15,417 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:17:15,456 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-02 07:17:15,479 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-02 07:17:15,508 [_logging.py:info()] - Websocket connected
2025-04-02 07:17:15,508 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-02 07:17:15,880 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:17:15,902 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:17:15,924 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:17:15,925 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:17:15,926 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:17:15,959 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-02 07:17:19,361 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:17:19,386 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:17:19,411 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:17:19,411 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:17:19,412 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:17:19,434 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:17:19,620 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': '!M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': '!M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': '!M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': '!M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:17:19,623 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:17:19,624 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d
2025-04-02 07:17:19,625 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:17:19,626 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:17:19,626 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:17:19,627 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:17:19,627 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:17:19,627 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:17:19,659 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:17:19,661 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:17:19,875 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:17:19,875 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:17:19,876 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:17:19,876 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:17:19,880 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:17:19,885 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-02 07:17:20,006 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:17:20,017 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:17:20,027 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:17:20,075 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:17:20,077 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:17:20,111 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:17:20,113 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:17:20,133 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:25:46,203 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 07:25:46,204 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 07:25:46,205 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 07:25:46,205 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:25:46,210 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:25:46,276 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:25:49,667 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:25:49,685 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:25:49,702 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:25:49,703 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:25:49,703 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:25:49,724 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:25:49,781 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:25:49,785 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:25:49,786 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d
2025-04-02 07:25:49,786 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:25:49,787 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:25:49,787 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:25:49,787 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:25:49,788 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:25:49,788 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:25:49,822 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:25:49,825 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:25:50,042 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:25:50,042 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:25:50,043 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:25:50,043 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:25:50,046 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:25:50,051 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:25:50,164 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:25:50,175 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:25:50,185 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:25:50,232 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:25:50,234 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:25:50,269 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:25:50,272 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:25:50,320 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:25:52,246 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 07:25:52,247 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 07:25:52,248 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 07:25:52,249 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:25:52,253 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:25:52,338 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:25:55,666 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:25:55,684 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:25:55,702 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:25:55,702 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:25:55,703 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:25:55,724 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:25:55,754 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:25:55,757 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:25:55,758 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 07:25:55,758 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:25:55,759 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:25:55,759 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:25:55,759 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:25:55,759 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:25:55,760 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:25:55,784 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:25:55,786 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:25:56,077 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:25:56,077 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:25:56,078 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:25:56,078 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:25:56,080 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:25:56,086 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:25:56,198 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:25:56,209 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:25:56,218 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:25:56,271 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:25:56,273 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:25:56,308 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:25:56,311 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:25:56,337 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:31:57,689 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 07:31:57,690 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 07:31:57,692 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 07:31:57,693 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:31:57,697 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:31:57,763 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:32:00,669 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:32:00,687 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:32:00,704 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:32:00,705 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:32:00,705 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:32:00,726 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:32:00,756 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': '!M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': '!M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': '!M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': '!M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:32:00,759 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:32:00,760 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 07:32:00,761 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:32:00,761 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:32:00,761 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:32:00,761 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:32:00,761 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:32:00,762 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:32:00,787 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:32:00,790 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:32:01,014 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:32:01,014 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:32:01,015 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:32:01,015 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:32:01,021 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:32:01,026 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:32:01,138 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:32:01,149 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:32:01,159 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:32:01,206 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:32:01,208 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:32:01,245 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:32:01,248 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:32:01,306 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:33:32,750 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 07:33:32,751 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 07:33:32,752 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 07:33:32,753 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:33:32,757 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:33:32,843 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:33:35,669 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:33:35,687 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:33:35,704 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:33:35,705 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:33:35,705 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:33:35,735 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:33:35,776 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': '!M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': '!M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': '!M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': '!M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:33:35,780 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:33:35,781 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 07:33:35,781 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:33:35,782 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:33:35,782 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:33:35,782 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:33:35,782 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:33:35,782 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:33:35,807 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:33:35,809 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:33:36,084 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:33:36,084 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:33:36,085 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:33:36,085 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:33:36,087 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:33:36,093 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:33:36,210 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:33:36,221 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:33:36,230 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:33:36,284 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:33:36,286 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:33:36,325 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:33:36,327 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:33:36,347 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:36:30,401 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 07:36:30,402 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 07:36:30,403 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 07:36:30,403 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:36:30,408 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:36:30,487 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:36:33,667 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:36:33,689 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:36:33,709 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:36:33,710 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:36:33,711 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:36:33,732 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:36:33,763 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': '!M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': '!M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': '!M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': '!M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:36:33,767 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:36:33,768 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 07:36:33,768 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:36:33,769 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:36:33,769 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:36:33,769 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:36:33,769 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:36:33,769 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:36:33,793 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:36:33,796 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:36:34,073 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:36:34,074 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:36:34,075 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-02 07:36:34,075 [printer.py:change_state()] - Adding callback for state: startup
2025-04-02 07:36:34,258 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-02 07:36:34,259 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:36:34,261 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:36:34,266 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:36:34,378 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:36:34,390 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:36:34,400 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:36:34,448 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:36:34,449 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:36:34,488 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:36:34,490 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:36:34,512 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:40:13,889 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 07:40:13,890 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 07:40:13,891 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 07:40:13,892 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:40:13,896 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:40:13,990 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:40:17,666 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:40:17,685 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:40:17,703 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:40:17,703 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:40:17,704 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:40:17,740 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:40:17,996 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:40:18,000 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:40:18,001 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 07:40:18,001 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:40:18,001 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:40:18,001 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:40:18,002 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:40:18,002 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:40:18,002 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:40:18,027 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:40:18,029 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:40:18,245 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:40:18,246 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:40:18,246 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:40:18,247 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:40:18,250 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:40:18,255 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 07:40:18,376 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:40:18,387 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:40:18,396 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:40:18,444 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:40:18,446 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:40:18,487 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:40:18,515 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:40:18,572 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 07:40:20,673 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:40:20,704 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:40:20,705 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:40:20,745 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:40:21,009 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:40:21,016 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:40:21,020 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 07:40:21,020 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:40:21,021 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:40:21,021 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:40:21,021 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:40:21,022 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:40:21,022 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:40:21,062 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:40:21,066 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:40:21,293 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:40:21,293 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:40:23,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:28,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:33,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:38,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:43,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:48,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:53,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:55,955 [screen.py:show_popup_message()] - error: Error on 'set_dual_carriage carriage_1=primary': missing CARRIAGE
2025-04-02 07:40:56,032 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:40:58,679 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:03,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:06,846 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:08,667 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:13,676 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:15,029 [screen.py:show_popup_message()] - error: Error on 'set_dual_carriage carriage=carriage_1 mode=primary': unable to parse carriage_1
2025-04-02 07:41:15,108 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:18,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:23,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:25,840 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:28,680 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:33,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:38,668 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:43,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:48,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:51,101 [screen.py:show_popup_message()] - error: Move out of range: 10.000 300.000 310.000 [0.000]
2025-04-02 07:41:51,169 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:52,871 [screen.py:show_popup_message()] - error: Move out of range: 10.000 300.000 310.000 [0.000]
2025-04-02 07:41:52,912 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:53,100 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:53,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:58,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:58,938 [screen.py:show_popup_message()] - error: Move out of range: -10.000 300.000 310.000 [0.000]
2025-04-02 07:41:59,001 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:41:59,222 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:03,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:08,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:09,845 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:13,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:18,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:23,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:28,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:33,680 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:38,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:43,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:48,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:53,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:42:58,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:03,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:08,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:13,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:18,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:23,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:28,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:33,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:38,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:43,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:48,678 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:53,681 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:43:58,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:03,667 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:08,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:13,667 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:18,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:23,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:28,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:33,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:38,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:43,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:48,667 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:53,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:44:58,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:03,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:08,673 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:13,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:18,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:23,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:28,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:33,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:38,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:43,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:48,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:53,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:45:58,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:03,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:08,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:13,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:18,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:23,668 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:28,679 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:33,667 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:38,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:43,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:48,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:53,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:46:58,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:03,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:08,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:13,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:18,668 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:23,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:28,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:33,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:38,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:43,675 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:48,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:53,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:47:58,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:03,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:08,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:13,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:18,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:23,667 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:28,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:33,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:38,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:43,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:48,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:53,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:48:58,684 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:03,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:08,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:13,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:18,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:23,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:28,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:33,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:38,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:43,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:48,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:53,668 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:49:58,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:03,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:08,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:13,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:18,674 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:23,678 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:28,669 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:33,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:38,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:43,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:48,668 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:53,673 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:50:58,667 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:51:03,672 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:51:08,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:51:13,670 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:51:18,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:51:23,671 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 07:17:12,418 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-02 07:17:12,420 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-02 07:17:12,421 [functions.py:log_start()] - Python version: 3.9
2025-04-02 07:17:12,664 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-02 07:17:12,669 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-02 07:17:12,701 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-02 07:17:12,871 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-02 07:17:12,872 [config.py:install_language()] - Using lang en
2025-04-02 07:17:12,907 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-02 07:17:12,911 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-02 07:17:12,918 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-02 07:17:12,920 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-02 07:17:13,709 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-02 07:17:13,724 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-02 07:17:13,734 [screen.py:initial_connection()] - Default printer: None
2025-04-02 07:17:13,813 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-02 07:17:13,814 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-02 07:17:13,903 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 07:17:13,925 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-02 07:17:13,926 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:17:13,965 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-02 07:17:13,986 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-02 07:17:14,010 [_logging.py:info()] - Websocket connected
2025-04-02 07:17:14,010 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-02 07:17:14,369 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 07:17:14,392 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 07:17:14,427 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 07:17:14,427 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 07:17:14,428 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 07:17:14,498 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 07:17:14,755 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 07:17:14,759 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 07:17:14,760 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 07:17:14,761 [printer.py:reinit()] - # Extruders: 1
2025-04-02 07:17:14,761 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 07:17:14,762 [printer.py:reinit()] - # Fans: 0
2025-04-02 07:17:14,762 [printer.py:reinit()] - # Output pins: 0
2025-04-02 07:17:14,763 [printer.py:reinit()] - # Leds: 0
2025-04-02 07:17:14,763 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 07:17:14,807 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 07:17:14,810 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 07:17:14,985 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 07:17:14,985 [screen.py:init_klipper()] - Printer initialized
2025-04-02 07:17:14,986 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 07:17:14,987 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 07:17:15,011 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 07:17:15,025 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-02 07:17:15,205 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 07:17:15,222 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 07:17:15,238 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 07:17:15,302 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 07:17:15,304 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 07:17:15,343 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 07:17:15,347 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 07:17:15,373 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 08:03:42,648 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 08:03:42,649 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 08:03:42,650 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 08:03:42,651 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:03:42,655 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:03:42,734 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 08:03:45,873 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:03:45,895 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 08:03:45,915 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 08:03:45,916 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:03:45,916 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 08:03:45,970 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 08:03:46,001 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.779', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 59.779, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 08:03:46,004 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:03:46,005 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 08:03:46,006 [printer.py:reinit()] - # Extruders: 1
2025-04-02 08:03:46,006 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 08:03:46,006 [printer.py:reinit()] - # Fans: 0
2025-04-02 08:03:46,006 [printer.py:reinit()] - # Output pins: 0
2025-04-02 08:03:46,006 [printer.py:reinit()] - # Leds: 0
2025-04-02 08:03:46,006 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 08:03:46,032 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 08:03:46,035 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 08:03:46,312 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 08:03:46,312 [screen.py:init_klipper()] - Printer initialized
2025-04-02 08:03:46,313 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-02 08:03:46,313 [printer.py:change_state()] - Adding callback for state: startup
2025-04-02 08:03:46,497 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-02 08:03:46,497 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 08:03:46,499 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 08:03:46,504 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:03:46,615 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 08:03:46,626 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 08:03:46,635 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 08:03:46,683 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 08:03:46,684 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:03:46,722 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 08:03:46,724 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 08:03:46,745 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 08:04:01,966 [screen.py:show_popup_message()] - error: // Unknown command:"SET_KINEMATIC_POSITON"
2025-04-02 08:13:01,504 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 08:13:01,505 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 08:13:01,507 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 08:13:01,507 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:13:01,511 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:13:01,577 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 08:13:04,871 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:13:04,889 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 08:13:04,906 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 08:13:04,907 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:13:04,907 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 08:13:04,928 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 08:13:05,112 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '59.8949', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '59.9108', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '30', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '30', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 59.8949, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 30.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 30.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 59.9108, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 08:13:05,116 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:13:05,117 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 08:13:05,117 [printer.py:reinit()] - # Extruders: 1
2025-04-02 08:13:05,118 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 08:13:05,118 [printer.py:reinit()] - # Fans: 0
2025-04-02 08:13:05,119 [printer.py:reinit()] - # Output pins: 0
2025-04-02 08:13:05,119 [printer.py:reinit()] - # Leds: 0
2025-04-02 08:13:05,120 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 08:13:05,157 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 08:13:05,160 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 08:13:05,418 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 08:13:05,419 [screen.py:init_klipper()] - Printer initialized
2025-04-02 08:13:05,419 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 08:13:05,420 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 08:13:05,423 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 08:13:05,428 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:13:05,540 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 08:13:05,551 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 08:13:05,560 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 08:13:05,613 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 08:13:05,615 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:13:05,654 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 08:13:05,657 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 08:13:05,681 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 08:17:27,755 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 08:17:27,756 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 08:17:27,758 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 08:17:27,758 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:17:27,762 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:17:27,829 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 08:17:30,872 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:17:30,890 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 08:17:30,907 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 08:17:30,908 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:17:30,909 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 08:17:30,929 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 08:17:31,050 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '30', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '30', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '30', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '30', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 30.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 30.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 30.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 30.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 08:17:31,054 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:17:31,055 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 08:17:31,055 [printer.py:reinit()] - # Extruders: 1
2025-04-02 08:17:31,056 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 08:17:31,056 [printer.py:reinit()] - # Fans: 0
2025-04-02 08:17:31,056 [printer.py:reinit()] - # Output pins: 0
2025-04-02 08:17:31,056 [printer.py:reinit()] - # Leds: 0
2025-04-02 08:17:31,056 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 08:17:31,080 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 08:17:31,083 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 08:17:31,369 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 08:17:31,369 [screen.py:init_klipper()] - Printer initialized
2025-04-02 08:17:31,370 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 08:17:31,370 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 08:17:31,378 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 08:17:31,383 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:17:31,495 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 08:17:31,506 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 08:17:31,516 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 08:17:31,568 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 08:17:31,570 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:17:31,618 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 08:17:31,620 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 08:17:31,641 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 08:19:12,656 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 08:19:12,656 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 08:19:12,658 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 08:19:12,659 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:19:12,663 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:19:12,754 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 08:19:15,871 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:19:15,889 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 08:19:15,907 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 08:19:15,907 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:19:15,908 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 08:19:15,929 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 08:19:15,992 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '48', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '48', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '48', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '48', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '4', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 48.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 48.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 48.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 4.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 48.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 08:19:15,996 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:19:15,997 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 08:19:15,997 [printer.py:reinit()] - # Extruders: 1
2025-04-02 08:19:15,997 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 08:19:15,998 [printer.py:reinit()] - # Fans: 0
2025-04-02 08:19:15,998 [printer.py:reinit()] - # Output pins: 0
2025-04-02 08:19:15,998 [printer.py:reinit()] - # Leds: 0
2025-04-02 08:19:15,998 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 08:19:16,022 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 08:19:16,024 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 08:19:16,299 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 08:19:16,300 [screen.py:init_klipper()] - Printer initialized
2025-04-02 08:19:16,300 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 08:19:16,300 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 08:19:16,313 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 08:19:16,318 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:19:16,430 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 08:19:16,441 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 08:19:16,450 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 08:19:16,505 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 08:19:16,507 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:19:16,557 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 08:19:16,563 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 08:19:16,583 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 08:23:05,522 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 08:23:05,522 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 08:23:05,524 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 08:23:05,525 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:23:05,529 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:23:05,595 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 08:23:08,872 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:23:08,891 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 08:23:08,910 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 08:23:08,911 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:23:08,912 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 08:23:08,932 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 08:23:09,155 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 08:23:09,159 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:23:09,160 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 08:23:09,161 [printer.py:reinit()] - # Extruders: 1
2025-04-02 08:23:09,161 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 08:23:09,161 [printer.py:reinit()] - # Fans: 0
2025-04-02 08:23:09,162 [printer.py:reinit()] - # Output pins: 0
2025-04-02 08:23:09,162 [printer.py:reinit()] - # Leds: 0
2025-04-02 08:23:09,162 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 08:23:09,198 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 08:23:09,200 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 08:23:09,462 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 08:23:09,462 [screen.py:init_klipper()] - Printer initialized
2025-04-02 08:23:09,463 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 08:23:09,463 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 08:23:09,467 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 08:23:09,472 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 08:23:09,582 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 08:23:09,593 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 08:23:09,603 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 08:23:09,652 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 08:23:09,655 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:23:09,696 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 08:23:09,699 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 08:23:09,728 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 08:28:10,234 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:28:10,238 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-02 08:28:10,243 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-02 08:28:10,243 [prompts.py:set_button()] - Eje X 1 SELECT_X_AXIS_MOTOR primary
2025-04-02 08:28:10,247 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-02 08:28:10,247 [prompts.py:set_button()] - Eje Y 2 SELECT_Y_AXIS_MOTOR primary
2025-04-02 08:28:10,252 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-02 08:28:10,252 [prompts.py:set_button()] - Eje Z 3 SELECT_Z_AXIS_MOTOR primary
2025-04-02 08:28:10,256 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:28:10,257 [prompts.py:set_button()] - Cerrar esta pestaña 4 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:28:10,260 [prompts.py:decode()] - prompt_show
2025-04-02 08:28:10,261 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Eje X', 'response': 1, 'gcode': 'SELECT_X_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Y', 'response': 2, 'gcode': 'SELECT_Y_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Z', 'response': 3, 'gcode': 'SELECT_Z_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 4, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:28:10,325 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:28:10,327 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:28:12,293 [prompts.py:decode()] - prompt_end
2025-04-02 08:28:12,319 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:28:12,328 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:28:12,333 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:28:12,335 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:12,336 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:12,338 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:28:12,339 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:28:12,342 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:28:12,343 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:28:12,345 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:12,346 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:12,505 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:12,506 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:12,507 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:28:12,508 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:28:12,508 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:28:12,509 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:28:12,510 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:12,510 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:12,511 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:12,511 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:12,512 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:28:12,513 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:28:12,513 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:28:12,514 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:28:12,515 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:12,515 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:12,516 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:12,516 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:12,517 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:28:12,518 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:28:12,519 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:28:12,519 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:28:12,520 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:12,521 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:12,521 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:28:12,522 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:28:12,523 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:28:12,523 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:28:12,525 [prompts.py:decode()] - prompt_show
2025-04-02 08:28:12,526 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:28:12,611 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:28:12,613 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:28:17,809 [prompts.py:decode()] - prompt_end
2025-04-02 08:28:17,833 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:28:17,844 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:28:17,846 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:28:17,848 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:17,849 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:17,853 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:28:17,854 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:28:17,858 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:28:17,859 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:28:18,000 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:18,001 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:18,002 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:18,002 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:18,003 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:28:18,004 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:28:18,004 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:28:18,005 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:28:18,006 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:18,006 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:18,007 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:18,007 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:18,008 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:28:18,009 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:28:18,010 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:28:18,010 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:28:18,011 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:18,011 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:18,012 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:18,013 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:18,013 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:28:18,014 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:28:18,015 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:28:18,016 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:28:18,016 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:18,017 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:18,018 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:28:18,018 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:28:18,019 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:28:18,019 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:28:18,020 [prompts.py:decode()] - prompt_show
2025-04-02 08:28:18,021 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:28:18,091 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:28:18,092 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:28:20,414 [prompts.py:decode()] - prompt_end
2025-04-02 08:28:20,426 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:28:20,433 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:28:20,434 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:28:20,436 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:20,437 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:20,528 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:28:20,528 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:28:20,530 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:28:20,530 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:28:20,531 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:20,532 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:20,532 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:20,533 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:20,533 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:28:20,534 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:28:20,535 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:28:20,535 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:28:20,536 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:20,537 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:20,537 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:20,538 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:20,539 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:28:20,539 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:28:20,540 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:28:20,540 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:28:20,541 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:20,542 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:20,542 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:20,543 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:20,544 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:28:20,544 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:28:20,545 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:28:20,545 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:28:20,546 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:20,547 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:20,547 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:28:20,548 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:28:20,548 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:28:20,549 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:28:20,550 [prompts.py:decode()] - prompt_show
2025-04-02 08:28:20,550 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:28:20,624 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:28:20,625 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:28:25,960 [prompts.py:decode()] - prompt_end
2025-04-02 08:28:25,973 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:28:25,977 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:28:25,978 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:28:25,979 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:25,979 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:25,987 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:28:25,988 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:28:26,081 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:28:26,081 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:28:26,083 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:26,083 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:26,084 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:26,085 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:26,086 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:28:26,086 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:28:26,087 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:28:26,087 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:28:26,088 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:26,089 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:26,089 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:26,090 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:26,090 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:28:26,091 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:28:26,092 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:28:26,092 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:28:26,093 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:26,093 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:26,094 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:26,094 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:26,095 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:28:26,096 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:28:26,096 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:28:26,097 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:28:26,098 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:26,098 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:26,099 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:28:26,099 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:28:26,100 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:28:26,101 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:28:26,102 [prompts.py:decode()] - prompt_show
2025-04-02 08:28:26,102 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:28:26,176 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:28:26,176 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:28:31,302 [prompts.py:decode()] - prompt_end
2025-04-02 08:28:31,314 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:28:31,322 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:28:31,323 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:28:31,324 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:31,325 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:31,328 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:28:31,329 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:28:31,431 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:28:31,431 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:28:31,432 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:31,433 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:31,434 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:31,434 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:31,435 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:28:31,436 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:28:31,437 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:28:31,437 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:28:31,438 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:31,438 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:31,439 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:31,440 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:31,440 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:28:31,441 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:28:31,442 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:28:31,442 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:28:31,443 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:31,443 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:31,444 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:31,445 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:31,445 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:28:31,446 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:28:31,447 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:28:31,447 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:28:31,448 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:31,448 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:31,449 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:28:31,450 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:28:31,451 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:28:31,451 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:28:31,452 [prompts.py:decode()] - prompt_show
2025-04-02 08:28:31,453 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:28:31,535 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:28:31,536 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:28:34,263 [prompts.py:decode()] - prompt_end
2025-04-02 08:28:34,288 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:28:34,291 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:28:34,295 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:28:34,296 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:34,297 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:34,306 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:28:34,307 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:28:34,315 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:28:34,316 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:28:34,318 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:34,319 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:34,320 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:34,320 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:34,424 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:28:34,425 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:28:34,426 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:28:34,427 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:28:34,428 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:34,428 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:34,429 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:34,430 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:34,431 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:28:34,431 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:28:34,432 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:28:34,433 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:28:34,434 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:34,434 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:34,436 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:28:34,436 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:28:34,437 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:28:34,438 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:28:34,439 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:28:34,439 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:28:34,440 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:28:34,440 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:28:34,441 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:28:34,441 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:28:34,442 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:28:34,442 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:28:34,444 [prompts.py:decode()] - prompt_show
2025-04-02 08:28:34,445 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:28:34,513 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:28:34,514 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:29:02,782 [prompts.py:decode()] - prompt_end
2025-04-02 08:29:02,806 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:29:02,816 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:29:02,820 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:29:02,822 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:02,823 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:02,825 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:29:02,825 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:29:02,830 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:29:02,831 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:29:02,999 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:02,999 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:03,000 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:03,001 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:03,001 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:29:03,002 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:29:03,003 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:29:03,003 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:29:03,004 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:03,005 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:03,006 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:03,006 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:03,007 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:29:03,007 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:29:03,008 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:29:03,009 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:29:03,009 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:03,010 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:03,011 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:03,011 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:03,012 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:29:03,013 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:29:03,014 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:29:03,014 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:29:03,015 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:03,015 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:03,016 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:29:03,017 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:29:03,017 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:29:03,018 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:29:03,019 [prompts.py:decode()] - prompt_show
2025-04-02 08:29:03,019 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:29:03,091 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:29:03,091 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:29:27,158 [prompts.py:decode()] - prompt_end
2025-04-02 08:29:27,178 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:29:39,045 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:29:39,051 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-02 08:29:39,057 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-02 08:29:39,058 [prompts.py:set_button()] - Eje X 1 SELECT_X_AXIS_MOTOR primary
2025-04-02 08:29:39,065 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-02 08:29:39,065 [prompts.py:set_button()] - Eje Y 2 SELECT_Y_AXIS_MOTOR primary
2025-04-02 08:29:39,072 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-02 08:29:39,073 [prompts.py:set_button()] - Eje Z 3 SELECT_Z_AXIS_MOTOR primary
2025-04-02 08:29:39,076 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:29:39,077 [prompts.py:set_button()] - Cerrar esta pestaña 4 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:29:39,080 [prompts.py:decode()] - prompt_show
2025-04-02 08:29:39,080 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Eje X', 'response': 1, 'gcode': 'SELECT_X_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Y', 'response': 2, 'gcode': 'SELECT_Y_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Z', 'response': 3, 'gcode': 'SELECT_Z_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 4, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:29:39,137 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:29:39,138 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:29:41,251 [prompts.py:decode()] - prompt_end
2025-04-02 08:29:41,276 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:29:41,280 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:29:41,281 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:29:41,283 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:41,283 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:41,285 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:29:41,285 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:29:41,286 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:29:41,287 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:29:41,295 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:41,295 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:41,297 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:41,297 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:41,402 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:29:41,402 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:29:41,404 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:29:41,404 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:29:41,405 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:41,405 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:41,406 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:41,407 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:41,407 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:29:41,408 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:29:41,408 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:29:41,409 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:29:41,410 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:41,410 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:41,411 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:41,411 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:41,412 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:29:41,413 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:29:41,413 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:29:41,414 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:29:41,414 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:41,415 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:41,416 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:29:41,416 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:29:41,417 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:29:41,418 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:29:41,419 [prompts.py:decode()] - prompt_show
2025-04-02 08:29:41,419 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:29:41,492 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:29:41,493 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:29:51,484 [prompts.py:decode()] - prompt_end
2025-04-02 08:29:51,497 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:29:51,501 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:29:51,502 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:29:51,503 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:51,504 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:51,510 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:29:51,511 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:29:51,515 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:29:51,516 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:29:51,615 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:51,616 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:51,617 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:51,618 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:51,618 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:29:51,619 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:29:51,620 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:29:51,620 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:29:51,621 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:51,622 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:51,622 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:51,623 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:51,623 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:29:51,624 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:29:51,624 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:29:51,625 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:29:51,626 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:51,626 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:51,627 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:29:51,627 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:29:51,628 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:29:51,629 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:29:51,629 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:29:51,630 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:29:51,630 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:29:51,631 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:29:51,634 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:29:51,635 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:29:51,636 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:29:51,636 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:29:51,637 [prompts.py:decode()] - prompt_show
2025-04-02 08:29:51,638 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:29:51,706 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:29:51,708 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:30:06,495 [prompts.py:decode()] - prompt_end
2025-04-02 08:30:06,508 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:30:06,515 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:30:06,519 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:30:06,520 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:06,521 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:06,523 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:30:06,524 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:30:06,619 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:30:06,620 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:30:06,621 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:06,621 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:06,622 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:06,623 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:06,624 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:30:06,624 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:30:06,625 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:30:06,625 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:30:06,626 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:06,627 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:06,628 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:06,628 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:06,629 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:30:06,629 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:30:06,630 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:30:06,630 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:30:06,631 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:06,632 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:06,632 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:06,633 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:06,633 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:30:06,634 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:30:06,634 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:30:06,635 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:30:06,636 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:06,636 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:06,637 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:30:06,637 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:30:06,638 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:30:06,639 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:30:06,640 [prompts.py:decode()] - prompt_show
2025-04-02 08:30:06,640 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:30:06,713 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:30:06,714 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:30:15,941 [prompts.py:decode()] - prompt_end
2025-04-02 08:30:15,953 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:30:15,958 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:30:15,959 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:30:15,960 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:15,961 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:15,968 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:30:15,969 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:30:16,063 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:30:16,063 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:30:16,065 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:16,065 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:16,066 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:16,066 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:16,068 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:30:16,068 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:30:16,069 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:30:16,069 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:30:16,070 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:16,071 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:16,071 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:16,072 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:16,073 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:30:16,073 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:30:16,074 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:30:16,074 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:30:16,075 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:16,075 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:16,076 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:30:16,077 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:30:16,077 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:30:16,078 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:30:16,079 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:30:16,079 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:30:16,080 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:30:16,081 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:30:16,081 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:30:16,082 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:30:16,083 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:30:16,083 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:30:16,084 [prompts.py:decode()] - prompt_show
2025-04-02 08:30:16,085 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:30:16,159 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:30:16,160 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:30:32,213 [prompts.py:decode()] - prompt_end
2025-04-02 08:30:32,230 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:30:32,235 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:30:32,239 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-02 08:30:32,248 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-02 08:30:32,249 [prompts.py:set_button()] - Eje X 1 SELECT_X_AXIS_MOTOR primary
2025-04-02 08:30:32,250 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-02 08:30:32,251 [prompts.py:set_button()] - Eje Y 2 SELECT_Y_AXIS_MOTOR primary
2025-04-02 08:30:32,252 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-02 08:30:32,253 [prompts.py:set_button()] - Eje Z 3 SELECT_Z_AXIS_MOTOR primary
2025-04-02 08:30:32,410 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:30:32,411 [prompts.py:set_button()] - Cerrar esta pestaña 4 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:30:32,412 [prompts.py:decode()] - prompt_show
2025-04-02 08:30:32,413 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Eje X', 'response': 1, 'gcode': 'SELECT_X_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Y', 'response': 2, 'gcode': 'SELECT_Y_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Z', 'response': 3, 'gcode': 'SELECT_Z_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 4, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:30:32,472 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:30:32,473 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:31:04,068 [prompts.py:decode()] - prompt_end
2025-04-02 08:31:04,088 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:31:04,096 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:31:04,098 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:31:04,104 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:04,105 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:04,108 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:31:04,109 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:31:04,111 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:31:04,112 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:31:04,292 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:04,292 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:04,293 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:04,294 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:04,295 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:31:04,296 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:31:04,297 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:31:04,297 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:31:04,298 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:04,298 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:04,299 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:04,300 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:04,301 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:31:04,301 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:31:04,302 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:31:04,302 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:31:04,303 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:04,304 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:04,304 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:04,305 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:04,306 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:31:04,306 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:31:04,307 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:31:04,308 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:31:04,308 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:04,309 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:04,309 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:31:04,310 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:31:04,310 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:31:04,311 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:31:04,312 [prompts.py:decode()] - prompt_show
2025-04-02 08:31:04,313 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:31:04,382 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:31:04,383 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:31:21,245 [prompts.py:decode()] - prompt_end
2025-04-02 08:31:21,257 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:31:21,261 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:31:21,262 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-02 08:31:21,264 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-02 08:31:21,264 [prompts.py:set_button()] - Eje X 1 SELECT_X_AXIS_MOTOR primary
2025-04-02 08:31:21,270 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-02 08:31:21,271 [prompts.py:set_button()] - Eje Y 2 SELECT_Y_AXIS_MOTOR primary
2025-04-02 08:31:21,272 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-02 08:31:21,272 [prompts.py:set_button()] - Eje Z 3 SELECT_Z_AXIS_MOTOR primary
2025-04-02 08:31:21,362 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:31:21,363 [prompts.py:set_button()] - Cerrar esta pestaña 4 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:31:21,364 [prompts.py:decode()] - prompt_show
2025-04-02 08:31:21,365 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Eje X', 'response': 1, 'gcode': 'SELECT_X_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Y', 'response': 2, 'gcode': 'SELECT_Y_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Z', 'response': 3, 'gcode': 'SELECT_Z_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 4, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:31:21,419 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:31:21,420 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:31:25,086 [prompts.py:decode()] - prompt_end
2025-04-02 08:31:25,098 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:31:25,100 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:31:25,103 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:31:25,109 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:25,110 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:25,111 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:31:25,112 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:31:25,209 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:31:25,210 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:31:25,211 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:25,212 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:25,212 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:25,213 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:25,214 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:31:25,214 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:31:25,215 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:31:25,216 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:31:25,216 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:25,217 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:25,217 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:25,218 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:25,219 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:31:25,219 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:31:25,220 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:31:25,220 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:31:25,221 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:25,222 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:25,223 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:25,223 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:25,224 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:31:25,224 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:31:25,225 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:31:25,226 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:31:25,226 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:25,227 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:25,228 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:31:25,228 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:31:25,229 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:31:25,229 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:31:25,230 [prompts.py:decode()] - prompt_show
2025-04-02 08:31:25,231 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:31:25,300 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:31:25,301 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:31:33,472 [prompts.py:decode()] - prompt_end
2025-04-02 08:31:33,492 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:31:33,506 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:31:33,508 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:31:33,509 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:33,510 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:33,511 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:31:33,512 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:31:33,513 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:31:33,514 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:31:33,518 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:33,519 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:33,520 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:33,521 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:33,666 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:31:33,667 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:31:33,668 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:31:33,668 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:31:33,669 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:33,670 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:33,671 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:33,671 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:33,672 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:31:33,672 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:31:33,673 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:31:33,674 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:31:33,675 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:33,675 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:33,676 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:33,676 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:33,677 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:31:33,678 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:31:33,679 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:31:33,679 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:31:33,680 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:33,680 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:33,681 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:31:33,682 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:31:33,682 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:31:33,683 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:31:33,684 [prompts.py:decode()] - prompt_show
2025-04-02 08:31:33,685 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:31:33,765 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:31:33,766 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:31:49,674 [prompts.py:decode()] - prompt_end
2025-04-02 08:31:49,694 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:31:49,702 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:31:49,704 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:31:49,709 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:49,710 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:49,711 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:31:49,711 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:31:49,713 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:31:49,713 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:31:49,716 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:49,717 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:49,821 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:49,822 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:49,823 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:31:49,823 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:31:49,824 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:31:49,825 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:31:49,825 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:49,826 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:49,826 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:49,827 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:49,827 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:31:49,828 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:31:49,829 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:31:49,829 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:31:49,830 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:49,830 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:49,831 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:31:49,831 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:31:49,832 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:31:49,833 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:31:49,833 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:31:49,834 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:31:49,835 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:31:49,835 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:31:49,836 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:31:49,836 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:31:49,837 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:31:49,837 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:31:49,838 [prompts.py:decode()] - prompt_show
2025-04-02 08:31:49,839 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:31:49,913 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:31:49,914 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:32:31,708 [prompts.py:decode()] - prompt_end
2025-04-02 08:32:31,718 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:32:31,723 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:32:31,724 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:32:31,826 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:31,826 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:31,827 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:32:31,828 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:32:31,829 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:32:31,829 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:32:31,830 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:31,830 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:31,831 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:31,832 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:31,832 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:32:31,833 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:32:31,834 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:32:31,834 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:32:31,835 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:31,836 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:31,837 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:31,837 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:31,838 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:32:31,838 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:32:31,839 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:32:31,840 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:32:31,841 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:31,841 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:31,842 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:31,842 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:31,843 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:32:31,844 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:32:31,844 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:32:31,845 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:32:31,846 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:31,846 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:31,847 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:32:31,847 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:32:31,848 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:32:31,849 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:32:31,849 [prompts.py:decode()] - prompt_show
2025-04-02 08:32:31,850 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:32:31,926 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:32:31,927 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:32:38,878 [prompts.py:decode()] - prompt_end
2025-04-02 08:32:38,899 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:32:38,901 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:32:38,902 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:32:38,904 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:38,905 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:39,015 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:32:39,015 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:32:39,017 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:32:39,017 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:32:39,018 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:39,018 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:39,019 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:39,020 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:39,021 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:32:39,021 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:32:39,022 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:32:39,022 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:32:39,023 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:39,024 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:39,025 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:39,025 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:39,026 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:32:39,026 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:32:39,027 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:32:39,028 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:32:39,028 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:39,029 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:39,030 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:39,030 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:39,031 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:32:39,031 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:32:39,032 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:32:39,033 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:32:39,033 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:39,034 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:39,035 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:32:39,035 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:32:39,036 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:32:39,036 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:32:39,037 [prompts.py:decode()] - prompt_show
2025-04-02 08:32:39,038 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:32:39,115 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:32:39,116 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:32:46,879 [prompts.py:decode()] - prompt_end
2025-04-02 08:32:46,891 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:32:46,893 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:32:46,894 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:32:46,899 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:46,900 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:46,996 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:32:46,997 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:32:46,998 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:32:46,999 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:32:46,999 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:47,000 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:47,001 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:47,001 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:47,002 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:32:47,002 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:32:47,003 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:32:47,003 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:32:47,004 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:47,005 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:47,005 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:47,006 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:47,006 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:32:47,007 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:32:47,008 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:32:47,008 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:32:47,009 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:47,009 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:47,010 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:32:47,011 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:32:47,011 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:32:47,012 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:32:47,013 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:32:47,013 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:32:47,014 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:32:47,014 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:32:47,015 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:32:47,016 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:32:47,016 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:32:47,017 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:32:47,017 [prompts.py:decode()] - prompt_show
2025-04-02 08:32:47,018 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:32:47,115 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:32:47,117 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:33:04,704 [prompts.py:decode()] - prompt_end
2025-04-02 08:33:04,724 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:33:04,733 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:33:04,735 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:33:04,736 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:04,737 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:04,738 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:33:04,739 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:33:04,918 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:33:04,919 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:33:04,920 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:04,920 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:04,921 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:04,921 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:04,922 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:33:04,922 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:33:04,923 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:33:04,924 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:33:04,925 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:04,925 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:04,926 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:04,926 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:04,927 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:33:04,927 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:33:04,928 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:33:04,929 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:33:04,930 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:04,930 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:04,931 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:04,931 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:04,932 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:33:04,933 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:33:04,933 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:33:04,934 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:33:04,935 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:04,935 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:04,936 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:33:04,936 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:33:04,937 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:33:04,938 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:33:04,938 [prompts.py:decode()] - prompt_show
2025-04-02 08:33:04,939 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:33:05,013 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:33:05,014 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:33:13,666 [prompts.py:decode()] - prompt_end
2025-04-02 08:33:13,688 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:33:13,700 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:33:13,702 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:33:13,704 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:13,706 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:13,708 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:33:13,708 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:33:13,814 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:33:13,815 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:33:13,816 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:13,817 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:13,817 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:13,818 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:13,819 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:33:13,819 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:33:13,820 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:33:13,820 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:33:13,821 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:13,821 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:13,822 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:13,823 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:13,823 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:33:13,824 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:33:13,825 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:33:13,825 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:33:13,826 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:13,826 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:13,828 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:33:13,828 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:33:13,829 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:33:13,829 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:33:13,830 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:33:13,830 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:33:13,831 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:33:13,832 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:33:13,832 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:33:13,833 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:33:13,834 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:33:13,834 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:33:13,838 [prompts.py:decode()] - prompt_show
2025-04-02 08:33:13,838 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:33:13,911 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:33:13,912 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:33:41,070 [prompts.py:decode()] - prompt_end
2025-04-02 08:33:41,078 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:17:12,715 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-02 08:17:12,716 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-02 08:17:12,717 [functions.py:log_start()] - Python version: 3.9
2025-04-02 08:17:12,962 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-02 08:17:12,963 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-02 08:17:12,984 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-02 08:17:13,128 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-02 08:17:13,129 [config.py:install_language()] - Using lang en
2025-04-02 08:17:13,164 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-02 08:17:13,169 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-02 08:17:13,176 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-02 08:17:13,179 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-02 08:17:14,244 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-02 08:17:14,271 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-02 08:17:14,291 [screen.py:initial_connection()] - Default printer: None
2025-04-02 08:17:14,394 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-02 08:17:14,397 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-02 08:17:14,492 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 08:17:14,517 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-02 08:17:14,518 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:17:14,564 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-02 08:17:14,592 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-02 08:17:14,620 [_logging.py:info()] - Websocket connected
2025-04-02 08:17:14,621 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-02 08:17:14,637 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:17:14,667 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 08:17:14,717 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 08:17:14,718 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:17:14,719 [screen.py:init_klipper()] - Klipper not connected
2025-04-02 08:17:18,217 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:17:18,256 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:17:18,257 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 08:17:18,306 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 08:17:18,376 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 08:17:18,379 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:17:18,380 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 08:17:18,380 [printer.py:reinit()] - # Extruders: 1
2025-04-02 08:17:18,381 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 08:17:18,381 [printer.py:reinit()] - # Fans: 0
2025-04-02 08:17:18,381 [printer.py:reinit()] - # Output pins: 0
2025-04-02 08:17:18,382 [printer.py:reinit()] - # Leds: 0
2025-04-02 08:17:18,382 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 08:17:18,456 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 08:17:18,459 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 08:17:18,673 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 08:17:18,674 [screen.py:init_klipper()] - Printer initialized
2025-04-02 08:17:18,674 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-02 08:17:18,675 [printer.py:change_state()] - Adding callback for state: startup
2025-04-02 08:17:19,107 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-02 08:17:19,108 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 08:17:19,110 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 08:17:19,115 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-02 08:17:19,252 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 08:17:19,263 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 08:17:19,273 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 08:17:19,321 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 08:17:19,323 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:17:19,341 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-02 08:17:19,342 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-02 08:17:24,204 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:17:24,238 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 08:17:24,241 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 08:17:24,262 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 08:45:25,218 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:45:25,223 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-02 08:45:25,228 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-02 08:45:25,229 [prompts.py:set_button()] - Eje X 1 SELECT_X_AXIS_MOTOR primary
2025-04-02 08:45:25,233 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-02 08:45:25,233 [prompts.py:set_button()] - Eje Y 2 SELECT_Y_AXIS_MOTOR primary
2025-04-02 08:45:25,237 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-02 08:45:25,237 [prompts.py:set_button()] - Eje Z 3 SELECT_Z_AXIS_MOTOR primary
2025-04-02 08:45:25,243 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:45:25,243 [prompts.py:set_button()] - Cerrar esta pestaña 4 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:45:25,245 [prompts.py:decode()] - prompt_show
2025-04-02 08:45:25,246 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Eje X', 'response': 1, 'gcode': 'SELECT_X_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Y', 'response': 2, 'gcode': 'SELECT_Y_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Z', 'response': 3, 'gcode': 'SELECT_Z_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 4, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:45:25,306 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:45:25,306 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:45:27,333 [prompts.py:decode()] - prompt_end
2025-04-02 08:45:27,353 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:45:27,363 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:45:27,365 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:45:27,366 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:27,367 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:27,368 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:45:27,369 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:45:27,532 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:45:27,533 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:45:27,535 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:27,535 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:27,536 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:27,537 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:27,539 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:45:27,539 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:45:27,541 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:45:27,542 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:45:27,545 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:27,546 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:27,546 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:27,547 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:27,548 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:45:27,548 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:45:27,549 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:45:27,549 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:45:27,550 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:27,550 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:27,551 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:27,551 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:27,552 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:45:27,553 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:45:27,554 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:45:27,554 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:45:27,555 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:27,555 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:27,556 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:45:27,557 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:45:27,557 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:45:27,558 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:45:27,559 [prompts.py:decode()] - prompt_show
2025-04-02 08:45:27,559 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:45:27,644 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:45:27,645 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:45:30,443 [prompts.py:decode()] - prompt_end
2025-04-02 08:45:30,460 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:45:30,465 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:45:30,467 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:45:30,469 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:30,470 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:30,604 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:45:30,604 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:45:30,605 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:45:30,606 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:45:30,607 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:30,607 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:30,608 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:30,608 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:30,609 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:45:30,609 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:45:30,610 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:45:30,611 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:45:30,611 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:30,612 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:30,612 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:30,613 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:30,614 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:45:30,614 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:45:30,615 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:45:30,615 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:45:30,616 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:30,617 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:30,618 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:30,618 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:30,619 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:45:30,619 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:45:30,620 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:45:30,621 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:45:30,621 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:30,622 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:30,623 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:45:30,623 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:45:30,624 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:45:30,624 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:45:30,627 [prompts.py:decode()] - prompt_show
2025-04-02 08:45:30,628 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:45:30,700 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:45:30,701 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:45:32,107 [prompts.py:decode()] - prompt_end
2025-04-02 08:45:32,118 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:45:32,120 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:45:32,121 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:45:32,209 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:32,209 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:32,210 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:45:32,211 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:45:32,212 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:45:32,212 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:45:32,213 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:32,214 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:32,214 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:32,215 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:32,216 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:45:32,216 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:45:32,217 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:45:32,217 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:45:32,218 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:32,219 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:32,219 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:32,220 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:32,221 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:45:32,221 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:45:32,222 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:45:32,222 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:45:32,223 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:32,224 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:32,224 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:32,225 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:32,226 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:45:32,226 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:45:32,227 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:45:32,227 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:45:32,229 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:32,229 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:32,230 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:45:32,231 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:45:32,232 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:45:32,232 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:45:32,233 [prompts.py:decode()] - prompt_show
2025-04-02 08:45:32,233 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:45:32,309 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:45:32,310 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:45:33,810 [prompts.py:decode()] - prompt_end
2025-04-02 08:45:33,828 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:45:33,834 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:45:33,837 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:45:33,844 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:33,845 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:33,933 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:45:33,933 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:45:33,934 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:45:33,935 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:45:33,936 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:33,936 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:33,937 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:33,938 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:33,938 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:45:33,939 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:45:33,940 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:45:33,940 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:45:33,941 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:33,941 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:33,942 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:33,942 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:33,943 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:45:33,944 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:45:33,945 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:45:33,945 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:45:33,946 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:33,946 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:33,947 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:33,948 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:33,948 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:45:33,949 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:45:33,950 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:45:33,950 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:45:33,952 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:33,953 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:33,953 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:45:33,954 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:45:33,955 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:45:33,955 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:45:33,956 [prompts.py:decode()] - prompt_show
2025-04-02 08:45:33,957 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:45:34,029 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:45:34,030 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:45:36,384 [prompts.py:decode()] - prompt_end
2025-04-02 08:45:36,411 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:45:36,421 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:45:36,423 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:45:36,425 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:36,425 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:36,427 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:45:36,428 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:45:36,430 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:45:36,431 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:45:36,531 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:36,532 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:36,533 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:36,533 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:36,534 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:45:36,534 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:45:36,535 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:45:36,536 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:45:36,537 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:36,537 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:36,538 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:36,538 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:36,539 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:45:36,539 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:45:36,540 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:45:36,541 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:45:36,542 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:36,542 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:36,543 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:36,544 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:36,544 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:45:36,545 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:45:36,546 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:45:36,546 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:45:36,547 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:36,547 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:36,548 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:45:36,549 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:45:36,550 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:45:36,550 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:45:36,551 [prompts.py:decode()] - prompt_show
2025-04-02 08:45:36,552 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:45:36,623 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:45:36,624 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:45:38,881 [prompts.py:decode()] - prompt_end
2025-04-02 08:45:38,892 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:45:38,895 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:45:38,897 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-02 08:45:38,905 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:38,906 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:38,917 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-02 08:45:38,918 [prompts.py:set_button()] - Z1 ↑ 1  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1  primary
2025-04-02 08:45:38,919 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-02 08:45:38,920 [prompts.py:set_button()] - Z2 ↑ 2  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1  secondary
2025-04-02 08:45:39,000 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:39,000 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:39,002 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:39,002 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:39,003 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-02 08:45:39,003 [prompts.py:set_button()] - Z1 ↓ 3  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1  primary
2025-04-02 08:45:39,004 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-02 08:45:39,005 [prompts.py:set_button()] - Z2 ↓ 4  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1  secondary
2025-04-02 08:45:39,005 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:39,006 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:39,006 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:39,007 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:39,008 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-02 08:45:39,008 [prompts.py:set_button()] - Z0 ↑ 5  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1  info
2025-04-02 08:45:39,009 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-02 08:45:39,009 [prompts.py:set_button()] - Z3 ↑ 6  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1  error
2025-04-02 08:45:39,010 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:39,011 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:39,011 [prompts.py:decode()] - prompt_button_group_start
2025-04-02 08:45:39,012 [prompts.py:decode()] - Unknown option prompt_button_group_start
2025-04-02 08:45:39,013 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-02 08:45:39,013 [prompts.py:set_button()] - Z0 ↓ 7  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1  info
2025-04-02 08:45:39,014 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-02 08:45:39,014 [prompts.py:set_button()] - Z3 ↓ 8  ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1  error
2025-04-02 08:45:39,015 [prompts.py:decode()] - prompt_button_group_end
2025-04-02 08:45:39,016 [prompts.py:decode()] - Unknown option prompt_button_group_end
2025-04-02 08:45:39,016 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-02 08:45:39,017 [prompts.py:set_button()] - Atras 9 MOVER_UN_SOLO_MOTOR info
2025-04-02 08:45:39,018 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:45:39,018 [prompts.py:set_button()] - Cerrar esta pestaña 10 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:45:39,019 [prompts.py:decode()] - prompt_show
2025-04-02 08:45:39,020 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Z1 ↑', 'response': 1, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↑', 'response': 2, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 ', 'style': 'dialog-secondary'}, {'name': 'Z1 ↓', 'response': 3, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 ', 'style': 'dialog-primary'}, {'name': 'Z2 ↓', 'response': 4, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 ', 'style': 'dialog-secondary'}, {'name': 'Z0 ↑', 'response': 5, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↑', 'response': 6, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 ', 'style': 'dialog-error'}, {'name': 'Z0 ↓', 'response': 7, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 ', 'style': 'dialog-info'}, {'name': 'Z3 ↓', 'response': 8, 'gcode': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 ', 'style': 'dialog-error'}, {'name': 'Atras', 'response': 9, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 10, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:45:39,094 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:45:39,094 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:46:14,822 [prompts.py:decode()] - prompt_end
2025-04-02 08:46:14,829 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:50:26,055 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-02 08:50:26,062 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-02 08:50:26,068 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-02 08:50:26,069 [prompts.py:set_button()] - Eje X 1 SELECT_X_AXIS_MOTOR primary
2025-04-02 08:50:26,075 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-02 08:50:26,075 [prompts.py:set_button()] - Eje Y 2 SELECT_Y_AXIS_MOTOR primary
2025-04-02 08:50:26,080 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-02 08:50:26,081 [prompts.py:set_button()] - Eje Z 3 SELECT_Z_AXIS_MOTOR primary
2025-04-02 08:50:26,085 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-02 08:50:26,086 [prompts.py:set_button()] - Cerrar esta pestaña 4 RESPOND TYPE=command MSG="action:prompt_end" error
2025-04-02 08:50:26,089 [prompts.py:decode()] - prompt_show
2025-04-02 08:50:26,090 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Eje X', 'response': 1, 'gcode': 'SELECT_X_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Y', 'response': 2, 'gcode': 'SELECT_Y_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Eje Z', 'response': 3, 'gcode': 'SELECT_Z_AXIS_MOTOR', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 4, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-02 08:50:26,176 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=768)
2025-04-02 08:50:26,177 [screen.py:wake_screen()] - Screen wake up
2025-04-02 08:50:29,811 [prompts.py:decode()] - prompt_end
2025-04-02 08:50:29,819 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-02 08:17:12,691 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-02 08:17:12,692 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-02 08:17:12,693 [functions.py:log_start()] - Python version: 3.9
2025-04-02 08:17:12,920 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-02 08:17:12,922 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-02 08:17:12,948 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-02 08:17:13,115 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-02 08:17:13,115 [config.py:install_language()] - Using lang en
2025-04-02 08:17:13,146 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-02 08:17:13,149 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-02 08:17:13,154 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-02 08:17:13,157 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-02 08:17:14,051 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-02 08:17:14,080 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-02 08:17:14,107 [screen.py:initial_connection()] - Default printer: None
2025-04-02 08:17:14,199 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-02 08:17:14,200 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-02 08:17:14,292 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 08:17:14,316 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-02 08:17:14,316 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:17:14,354 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-02 08:17:14,378 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-02 08:17:14,412 [_logging.py:info()] - Websocket connected
2025-04-02 08:17:14,413 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-02 08:17:14,788 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 08:17:14,817 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 08:17:14,857 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 08:17:14,858 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 08:17:14,859 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 08:17:14,894 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 08:17:15,144 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 08:17:15,148 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 08:17:15,149 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 08:17:15,150 [printer.py:reinit()] - # Extruders: 1
2025-04-02 08:17:15,151 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 08:17:15,152 [printer.py:reinit()] - # Fans: 0
2025-04-02 08:17:15,152 [printer.py:reinit()] - # Output pins: 0
2025-04-02 08:17:15,155 [printer.py:reinit()] - # Leds: 0
2025-04-02 08:17:15,156 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 08:17:15,196 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 08:17:15,202 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 08:17:15,398 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 08:17:15,398 [screen.py:init_klipper()] - Printer initialized
2025-04-02 08:17:15,399 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 08:17:15,399 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 08:17:15,417 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 08:17:15,423 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-02 08:17:15,558 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 08:17:15,571 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 08:17:15,582 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 08:17:15,694 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 08:17:15,703 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 08:17:15,738 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 08:17:15,741 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 08:17:15,764 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 12:14:24,914 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 12:14:24,915 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 12:14:24,916 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 12:14:24,917 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:14:24,921 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 12:14:24,987 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 12:14:28,639 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:14:28,658 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 12:14:28,675 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 12:14:28,676 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:14:28,676 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 12:14:28,697 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 12:14:28,783 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X400 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y420 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X400 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y420 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 12:14:28,787 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:14:28,788 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 12:14:28,788 [printer.py:reinit()] - # Extruders: 1
2025-04-02 12:14:28,789 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 12:14:28,789 [printer.py:reinit()] - # Fans: 0
2025-04-02 12:14:28,790 [printer.py:reinit()] - # Output pins: 0
2025-04-02 12:14:28,790 [printer.py:reinit()] - # Leds: 0
2025-04-02 12:14:28,790 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 12:14:28,822 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 12:14:28,824 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 12:14:29,029 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 12:14:29,030 [screen.py:init_klipper()] - Printer initialized
2025-04-02 12:14:29,031 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 12:14:29,031 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 12:14:29,034 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 12:14:29,039 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 12:14:29,151 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 12:14:29,163 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 12:14:29,172 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 12:14:29,220 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 12:14:29,222 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:14:29,258 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 12:14:29,261 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 12:14:29,282 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 12:14:31,653 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:14:31,686 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:14:31,687 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 12:14:31,720 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 12:14:31,791 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '1000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X400 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y420 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X400 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y420 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 12:14:31,798 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:14:31,802 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 12:14:31,803 [printer.py:reinit()] - # Extruders: 1
2025-04-02 12:14:31,803 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 12:14:31,804 [printer.py:reinit()] - # Fans: 0
2025-04-02 12:14:31,804 [printer.py:reinit()] - # Output pins: 0
2025-04-02 12:14:31,805 [printer.py:reinit()] - # Leds: 0
2025-04-02 12:14:31,805 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 12:14:31,868 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 12:14:31,872 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 12:14:32,074 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 12:14:32,074 [screen.py:init_klipper()] - Printer initialized
2025-04-02 12:14:34,649 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:14:39,645 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:14:44,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:14:49,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:14:54,644 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:14:59,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:04,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:09,650 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:14,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:19,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:24,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:29,641 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:34,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:39,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:44,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:49,641 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:54,643 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:15:59,639 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:04,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:09,641 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:14,640 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:15,837 [screen.py:show_popup_message()] - error: // Unknown command:"TEST_Y_ACCELERACION"
2025-04-02 12:16:15,914 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:19,641 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:24,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:25,820 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:29,650 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:34,643 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:39,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:44,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:49,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:54,643 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:16:59,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:04,641 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:09,643 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:14,643 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:19,643 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:24,641 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:29,642 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:34,640 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:39,658 [heatergraph.py:get_max_length()] - ['extruder', 'heater_bed']
2025-04-02 12:17:41,409 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 12:17:41,410 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 12:17:41,412 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 12:17:41,412 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:17:41,416 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 12:17:41,499 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 12:17:44,639 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:44,657 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 12:17:44,675 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 12:17:44,675 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:17:44,676 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 12:17:44,696 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 12:17:44,774 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X400 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y420 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X400 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y420 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 12:17:44,777 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:17:44,778 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 12:17:44,779 [printer.py:reinit()] - # Extruders: 1
2025-04-02 12:17:44,779 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 12:17:44,779 [printer.py:reinit()] - # Fans: 0
2025-04-02 12:17:44,779 [printer.py:reinit()] - # Output pins: 0
2025-04-02 12:17:44,780 [printer.py:reinit()] - # Leds: 0
2025-04-02 12:17:44,780 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 12:17:44,804 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 12:17:44,806 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 12:17:45,093 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 12:17:45,094 [screen.py:init_klipper()] - Printer initialized
2025-04-02 12:17:45,094 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 12:17:45,095 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 12:17:45,098 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 12:17:45,107 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 12:17:45,219 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 12:17:45,230 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 12:17:45,239 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 12:17:45,295 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 12:17:45,298 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:17:45,339 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 12:17:45,342 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 12:17:45,365 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 12:20:31,700 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-02 12:20:31,700 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-02 12:20:31,708 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-02 12:20:31,708 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:20:31,715 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 12:20:31,809 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 12:20:34,642 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:20:34,664 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 12:20:34,684 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 12:20:34,684 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:20:34,685 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 12:20:34,705 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 12:20:34,735 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 12:20:34,739 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:20:34,740 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 12:20:34,740 [printer.py:reinit()] - # Extruders: 1
2025-04-02 12:20:34,741 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 12:20:34,741 [printer.py:reinit()] - # Fans: 0
2025-04-02 12:20:34,741 [printer.py:reinit()] - # Output pins: 0
2025-04-02 12:20:34,741 [printer.py:reinit()] - # Leds: 0
2025-04-02 12:20:34,741 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 12:20:34,766 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 12:20:34,768 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 12:20:35,047 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 12:20:35,048 [screen.py:init_klipper()] - Printer initialized
2025-04-02 12:20:35,048 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 12:20:35,049 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 12:20:35,051 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 12:20:35,056 [screen.py:show_panel()] - Reinitializing panel
2025-04-02 12:20:35,170 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 12:20:35,182 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 12:20:35,191 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 12:20:35,244 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 12:20:35,246 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:20:35,284 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 12:20:35,286 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 12:20:35,306 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 12:17:13,326 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-02 12:17:13,327 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-02 12:17:13,328 [functions.py:log_start()] - Python version: 3.9
2025-04-02 12:17:13,609 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-02 12:17:13,610 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-02 12:17:13,634 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-02 12:17:13,794 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-02 12:17:13,795 [config.py:install_language()] - Using lang en
2025-04-02 12:17:13,830 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-02 12:17:13,836 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-02 12:17:13,843 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-02 12:17:13,846 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-02 12:17:14,884 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-02 12:17:14,912 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-02 12:17:14,935 [screen.py:initial_connection()] - Default printer: None
2025-04-02 12:17:15,062 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-02 12:17:15,064 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-02 12:17:15,169 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 12:17:15,193 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-02 12:17:15,193 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:15,234 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-02 12:17:15,257 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-02 12:17:15,279 [_logging.py:info()] - Websocket connected
2025-04-02 12:17:15,280 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-02 12:17:15,287 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:15,307 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 12:17:15,329 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 12:17:15,330 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:17:15,331 [screen.py:init_klipper()] - Klipper not connected
2025-04-02 12:17:18,214 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:18,254 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:17:18,255 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 12:17:18,284 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 12:17:18,320 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 12:17:18,324 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:17:18,325 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 12:17:18,326 [printer.py:reinit()] - # Extruders: 1
2025-04-02 12:17:18,326 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 12:17:18,326 [printer.py:reinit()] - # Fans: 0
2025-04-02 12:17:18,327 [printer.py:reinit()] - # Output pins: 0
2025-04-02 12:17:18,327 [printer.py:reinit()] - # Leds: 0
2025-04-02 12:17:18,327 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 12:17:18,392 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 12:17:18,395 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 12:17:18,634 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 12:17:18,635 [screen.py:init_klipper()] - Printer initialized
2025-04-02 12:17:18,635 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-02 12:17:18,636 [printer.py:change_state()] - Adding callback for state: startup
2025-04-02 12:17:19,075 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-02 12:17:19,075 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 12:17:19,077 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 12:17:19,083 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-02 12:17:19,206 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 12:17:19,222 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 12:17:19,231 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 12:17:19,280 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 12:17:19,282 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:17:19,300 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-02 12:17:19,301 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-02 12:17:24,196 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:17:24,231 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 12:17:24,234 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 12:17:24,254 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 12:17:12,477 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-02 12:17:12,478 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-02 12:17:12,479 [functions.py:log_start()] - Python version: 3.9
2025-04-02 12:17:12,750 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-02 12:17:12,755 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-02 12:17:12,780 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-02 12:17:12,984 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-02 12:17:12,985 [config.py:install_language()] - Using lang en
2025-04-02 12:17:13,022 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-02 12:17:13,029 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-02 12:17:13,038 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-02 12:17:13,042 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-02 12:17:14,072 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-02 12:17:14,104 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-02 12:17:14,127 [screen.py:initial_connection()] - Default printer: None
2025-04-02 12:17:14,245 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-02 12:17:14,246 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-02 12:17:14,340 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 12:17:14,369 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-02 12:17:14,370 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:14,425 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-02 12:17:14,521 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-02 12:17:14,576 [_logging.py:info()] - Websocket connected
2025-04-02 12:17:14,577 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-02 12:17:14,954 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:14,982 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 12:17:15,009 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 12:17:15,010 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:17:15,010 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 12:17:15,040 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 12:17:15,146 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 12:17:15,149 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:17:15,150 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 12:17:15,151 [printer.py:reinit()] - # Extruders: 1
2025-04-02 12:17:15,151 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 12:17:15,152 [printer.py:reinit()] - # Fans: 0
2025-04-02 12:17:15,152 [printer.py:reinit()] - # Output pins: 0
2025-04-02 12:17:15,153 [printer.py:reinit()] - # Leds: 0
2025-04-02 12:17:15,153 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 12:17:15,185 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 12:17:15,188 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 12:17:15,466 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 12:17:15,466 [screen.py:init_klipper()] - Printer initialized
2025-04-02 12:17:15,467 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 12:17:15,467 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 12:17:15,486 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 12:17:15,492 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-02 12:17:15,629 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 12:17:15,644 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 12:17:15,656 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 12:17:15,716 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 12:17:15,718 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:17:15,738 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-02 12:17:15,739 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-02 12:17:21,398 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:17:21,457 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 12:17:21,462 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 12:17:21,495 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-02 12:17:12,151 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-02 12:17:12,152 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-02 12:17:12,153 [functions.py:log_start()] - Python version: 3.9
2025-04-02 12:17:12,435 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-02 12:17:12,440 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-02 12:17:12,475 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-02 12:17:12,656 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-02 12:17:12,657 [config.py:install_language()] - Using lang en
2025-04-02 12:17:12,690 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-02 12:17:12,694 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-02 12:17:12,699 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-02 12:17:12,704 [KlippyGtk.py:__init__()] - Font size: 23.8 (medium)
2025-04-02 12:17:13,676 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-02 12:17:13,694 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-02 12:17:13,707 [screen.py:initial_connection()] - Default printer: None
2025-04-02 12:17:13,795 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-02 12:17:13,796 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-02 12:17:13,888 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-02 12:17:13,917 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-02 12:17:13,918 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:13,992 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-02 12:17:14,023 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-02 12:17:14,059 [_logging.py:info()] - Websocket connected
2025-04-02 12:17:14,060 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-02 12:17:14,434 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-02 12:17:14,465 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-02 12:17:14,489 [printer.py:configure_cameras()] - Cameras: []
2025-04-02 12:17:14,490 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-02 12:17:14,491 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-02 12:17:14,521 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-02 12:17:14,702 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-02 12:17:14,706 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-02 12:17:14,707 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-02 12:17:14,708 [printer.py:reinit()] - # Extruders: 1
2025-04-02 12:17:14,708 [printer.py:reinit()] - # Temperature devices: 1
2025-04-02 12:17:14,709 [printer.py:reinit()] - # Fans: 0
2025-04-02 12:17:14,709 [printer.py:reinit()] - # Output pins: 0
2025-04-02 12:17:14,710 [printer.py:reinit()] - # Leds: 0
2025-04-02 12:17:14,710 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-02 12:17:14,767 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-02 12:17:14,771 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-02 12:17:14,984 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-02 12:17:14,988 [screen.py:init_klipper()] - Printer initialized
2025-04-02 12:17:14,988 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-02 12:17:14,989 [printer.py:change_state()] - Adding callback for state: ready
2025-04-02 12:17:15,065 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-02 12:17:15,077 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-02 12:17:15,262 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-02 12:17:15,278 [main_menu.py:add_device()] - Adding device: extruder
2025-04-02 12:17:15,293 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-02 12:17:15,360 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-02 12:17:15,363 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:17:15,392 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-02 12:17:15,393 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-02 12:17:20,469 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-02 12:17:20,552 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-02 12:17:20,558 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-02 12:17:20,599 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-04 12:24:42,987 [screen.py:show_screensaver()] - Showing Screensaver
2025-04-04 12:17:13,927 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-04 12:17:13,928 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-04 12:17:13,928 [functions.py:log_start()] - Python version: 3.9
2025-04-04 12:17:14,215 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-04 12:17:14,217 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-04 12:17:14,241 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-04 12:17:14,393 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-04 12:17:14,394 [config.py:install_language()] - Using lang en
2025-04-04 12:17:14,429 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-04 12:17:14,440 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-04 12:17:14,449 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-04 12:17:14,453 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-04 12:17:15,507 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-04 12:17:15,526 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-04 12:17:15,539 [screen.py:initial_connection()] - Default printer: None
2025-04-04 12:17:15,631 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-04 12:17:15,632 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-04 12:17:15,721 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-04 12:17:15,743 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-04 12:17:15,743 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:15,784 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-04 12:17:15,807 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-04 12:17:15,829 [_logging.py:info()] - Websocket connected
2025-04-04 12:17:15,830 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-04 12:17:16,178 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:16,202 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-04 12:17:16,224 [printer.py:configure_cameras()] - Cameras: []
2025-04-04 12:17:16,225 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-04 12:17:16,226 [screen.py:init_klipper()] - Klipper not connected
2025-04-04 12:17:19,213 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:19,231 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-04 12:17:19,232 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-04 12:17:19,254 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-04 12:17:19,287 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-04 12:17:19,290 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-04 12:17:19,291 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-04 12:17:19,292 [printer.py:reinit()] - # Extruders: 1
2025-04-04 12:17:19,292 [printer.py:reinit()] - # Temperature devices: 1
2025-04-04 12:17:19,292 [printer.py:reinit()] - # Fans: 0
2025-04-04 12:17:19,293 [printer.py:reinit()] - # Output pins: 0
2025-04-04 12:17:19,293 [printer.py:reinit()] - # Leds: 0
2025-04-04 12:17:19,293 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-04 12:17:19,328 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-04 12:17:19,331 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-04 12:17:19,611 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-04 12:17:19,611 [screen.py:init_klipper()] - Printer initialized
2025-04-04 12:17:19,612 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-04 12:17:19,612 [printer.py:change_state()] - Adding callback for state: ready
2025-04-04 12:17:19,615 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-04 12:17:19,620 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-04 12:17:19,749 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-04 12:17:19,761 [main_menu.py:add_device()] - Adding device: extruder
2025-04-04 12:17:19,770 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-04 12:17:19,824 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-04 12:17:19,826 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-04 12:17:19,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-04 12:17:19,844 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-04 12:17:25,209 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-04 12:17:25,280 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-04 12:17:25,285 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-04 12:17:25,323 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-04 12:17:44,036 [screen.py:_load_panel()] - Loading panel: move
2025-04-04 12:17:44,180 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-04 12:17:44,991 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-04 12:17:45,022 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-04 12:17:12,909 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-04 12:17:12,910 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-04 12:17:12,911 [functions.py:log_start()] - Python version: 3.9
2025-04-04 12:17:13,188 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-04 12:17:13,199 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-04 12:17:13,221 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-04 12:17:13,445 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-04 12:17:13,446 [config.py:install_language()] - Using lang en
2025-04-04 12:17:13,478 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-04 12:17:13,483 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-04 12:17:13,489 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-04 12:17:13,491 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-04 12:17:14,587 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-04 12:17:14,616 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-04 12:17:14,639 [screen.py:initial_connection()] - Default printer: None
2025-04-04 12:17:14,743 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-04 12:17:14,746 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-04 12:17:14,881 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-04 12:17:14,913 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-04 12:17:14,914 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:14,996 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-04 12:17:15,045 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-04 12:17:15,121 [_logging.py:info()] - Websocket connected
2025-04-04 12:17:15,121 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-04 12:17:15,572 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:15,604 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-04 12:17:15,641 [printer.py:configure_cameras()] - Cameras: []
2025-04-04 12:17:15,644 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-04 12:17:15,645 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-04 12:17:15,687 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-04 12:17:19,035 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:19,053 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-04 12:17:19,070 [printer.py:configure_cameras()] - Cameras: []
2025-04-04 12:17:19,071 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-04 12:17:19,072 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-04 12:17:19,092 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-04 12:17:19,182 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-04 12:17:19,185 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-04 12:17:19,187 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-04 12:17:19,187 [printer.py:reinit()] - # Extruders: 1
2025-04-04 12:17:19,187 [printer.py:reinit()] - # Temperature devices: 1
2025-04-04 12:17:19,187 [printer.py:reinit()] - # Fans: 0
2025-04-04 12:17:19,187 [printer.py:reinit()] - # Output pins: 0
2025-04-04 12:17:19,188 [printer.py:reinit()] - # Leds: 0
2025-04-04 12:17:19,188 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-04 12:17:19,226 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-04 12:17:19,229 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-04 12:17:19,449 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-04 12:17:19,450 [screen.py:init_klipper()] - Printer initialized
2025-04-04 12:17:19,451 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-04 12:17:19,451 [printer.py:change_state()] - Adding callback for state: ready
2025-04-04 12:17:19,454 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-04 12:17:19,459 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-04 12:17:19,583 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-04 12:17:19,595 [main_menu.py:add_device()] - Adding device: extruder
2025-04-04 12:17:19,605 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-04 12:17:19,654 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-04 12:17:19,656 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-04 12:17:19,689 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-04 12:17:19,692 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-04 12:17:19,712 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-04 12:17:22,037 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:22,058 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-04 12:17:22,059 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-04 12:17:22,086 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-04 12:17:22,195 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-04 12:17:22,199 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-04 12:17:22,202 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-04 12:17:22,202 [printer.py:reinit()] - # Extruders: 1
2025-04-04 12:17:22,203 [printer.py:reinit()] - # Temperature devices: 1
2025-04-04 12:17:22,203 [printer.py:reinit()] - # Fans: 0
2025-04-04 12:17:22,204 [printer.py:reinit()] - # Output pins: 0
2025-04-04 12:17:22,204 [printer.py:reinit()] - # Leds: 0
2025-04-04 12:17:22,204 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-04 12:17:22,233 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-04 12:17:22,236 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-04 12:17:22,519 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-04 12:17:22,519 [screen.py:init_klipper()] - Printer initialized
2025-04-04 12:17:13,229 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-04 12:17:13,231 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-04 12:17:13,231 [functions.py:log_start()] - Python version: 3.9
2025-04-04 12:17:13,533 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-04 12:17:13,534 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-04 12:17:13,575 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-04 12:17:13,840 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-04 12:17:13,841 [config.py:install_language()] - Using lang en
2025-04-04 12:17:13,876 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-04 12:17:13,882 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-04 12:17:13,890 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-04 12:17:13,894 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-04 12:17:14,965 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-04 12:17:14,997 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-04 12:17:15,045 [screen.py:initial_connection()] - Default printer: None
2025-04-04 12:17:15,160 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-04 12:17:15,161 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-04 12:17:15,264 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-04 12:17:15,286 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-04 12:17:15,287 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:15,330 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-04 12:17:15,358 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-04 12:17:15,385 [_logging.py:info()] - Websocket connected
2025-04-04 12:17:15,386 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-04 12:17:15,782 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-04 12:17:15,802 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-04 12:17:15,822 [printer.py:configure_cameras()] - Cameras: []
2025-04-04 12:17:15,823 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-04 12:17:15,823 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-04 12:17:15,847 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-04 12:17:15,883 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-04 12:17:15,886 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-04 12:17:15,887 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-04 12:17:15,888 [printer.py:reinit()] - # Extruders: 1
2025-04-04 12:17:15,888 [printer.py:reinit()] - # Temperature devices: 1
2025-04-04 12:17:15,888 [printer.py:reinit()] - # Fans: 0
2025-04-04 12:17:15,889 [printer.py:reinit()] - # Output pins: 0
2025-04-04 12:17:15,889 [printer.py:reinit()] - # Leds: 0
2025-04-04 12:17:15,889 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-04 12:17:15,919 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-04 12:17:15,922 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-04 12:17:16,204 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-04 12:17:16,204 [screen.py:init_klipper()] - Printer initialized
2025-04-04 12:17:16,205 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-04 12:17:16,205 [printer.py:change_state()] - Adding callback for state: startup
2025-04-04 12:17:16,383 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-04 12:17:16,384 [printer.py:change_state()] - Adding callback for state: ready
2025-04-04 12:17:16,385 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-04 12:17:16,393 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-04 12:17:16,531 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-04 12:17:16,544 [main_menu.py:add_device()] - Adding device: extruder
2025-04-04 12:17:16,555 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-04 12:17:16,608 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-04 12:17:16,610 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-04 12:17:16,631 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-04 12:17:16,632 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-04 12:17:21,067 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-04-04 12:17:21,067 [screen.py:_go_to_submenu()] - #### Menu __main
2025-04-04 12:17:21,076 [screen.py:_load_panel()] - Loading panel: menu
2025-04-04 12:17:21,520 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-04-04 12:17:21,529 [menu.py:arrangeMenuItems()] - X > more bedlevel
2025-04-04 12:17:21,536 [menu.py:arrangeMenuItems()] - X > more bedmesh
2025-04-04 12:17:21,555 [menu.py:arrangeMenuItems()] - X > more fan
2025-04-04 12:17:21,562 [menu.py:arrangeMenuItems()] - X > more led
2025-04-04 12:17:21,578 [menu.py:arrangeMenuItems()] - X > more pins
2025-04-04 12:17:21,585 [menu.py:arrangeMenuItems()] - X > more power
2025-04-04 12:17:21,592 [menu.py:arrangeMenuItems()] - X > more camera
2025-04-04 12:17:21,605 [menu.py:arrangeMenuItems()] - X > more input_shaper
2025-04-04 12:17:21,624 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-04-04 12:17:22,087 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-04 12:17:22,130 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-04 12:17:22,131 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-04 12:17:22,161 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-04 12:17:22,836 [screen.py:_load_panel()] - Loading panel: settings
2025-04-04 12:17:23,151 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > settings
2025-04-07 14:44:35,553 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 14:44:35,554 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-07 14:44:35,554 [functions.py:log_start()] - Python version: 3.9
2025-04-07 14:44:35,697 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 14:44:35,700 [config.py:__init__()] - Config path location: /home/biqu/KlipperScreen/ks_includes/defaults.conf
2025-04-07 14:44:35,715 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 14:44:35,836 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-07 14:44:35,837 [config.py:install_language()] - Using lang en
2025-04-07 14:44:35,861 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 14:44:35,864 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 14:44:35,869 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 14:44:35,872 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-07 14:44:36,366 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-07 14:44:36,379 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-07 14:44:36,388 [screen.py:initial_connection()] - Default printer: None
2025-04-07 14:44:36,464 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 14:44:36,465 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 14:44:36,535 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 14:44:36,549 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 14:44:36,549 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 14:44:36,576 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-07 14:44:36,595 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 14:44:36,609 [_logging.py:info()] - Websocket connected
2025-04-07 14:44:36,610 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 14:44:36,861 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 14:44:36,880 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 14:44:36,898 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 14:44:36,899 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 14:44:36,899 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 14:44:36,920 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-07 14:44:37,131 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-07 14:44:37,134 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 14:44:37,135 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 14:44:37,136 [printer.py:reinit()] - # Extruders: 1
2025-04-07 14:44:37,136 [printer.py:reinit()] - # Temperature devices: 1
2025-04-07 14:44:37,136 [printer.py:reinit()] - # Fans: 0
2025-04-07 14:44:37,136 [printer.py:reinit()] - # Output pins: 0
2025-04-07 14:44:37,136 [printer.py:reinit()] - # Leds: 0
2025-04-07 14:44:37,137 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-07 14:44:37,163 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 14:44:37,166 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-07 14:44:37,456 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 14:44:37,456 [screen.py:init_klipper()] - Printer initialized
2025-04-07 14:44:37,457 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-07 14:44:37,457 [printer.py:change_state()] - Adding callback for state: ready
2025-04-07 14:44:37,461 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-07 14:44:37,467 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-07 14:44:37,587 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-07 14:44:37,598 [main_menu.py:add_device()] - Adding device: extruder
2025-04-07 14:44:37,608 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-07 14:44:37,659 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 14:44:37,662 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-07 14:44:37,697 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 14:44:37,700 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-07 14:44:37,720 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 14:45:38,619 [main_menu.py:toggle_visibility()] - Graph show False: heater_bed
2025-04-07 14:45:38,622 [config.py:save_user_config_options()] - Creating a new config file in /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 14:45:42,967 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-04-07 14:45:42,968 [screen.py:_go_to_submenu()] - #### Menu __main
2025-04-07 14:45:42,985 [screen.py:_load_panel()] - Loading panel: menu
2025-04-07 14:45:43,441 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-04-07 14:45:43,449 [menu.py:arrangeMenuItems()] - X > more bedlevel
2025-04-07 14:45:43,454 [menu.py:arrangeMenuItems()] - X > more bedmesh
2025-04-07 14:45:43,471 [menu.py:arrangeMenuItems()] - X > more fan
2025-04-07 14:45:43,477 [menu.py:arrangeMenuItems()] - X > more led
2025-04-07 14:45:43,488 [menu.py:arrangeMenuItems()] - X > more pins
2025-04-07 14:45:43,495 [menu.py:arrangeMenuItems()] - X > more power
2025-04-07 14:45:43,501 [menu.py:arrangeMenuItems()] - X > more camera
2025-04-07 14:45:43,511 [menu.py:arrangeMenuItems()] - X > more input_shaper
2025-04-07 14:45:43,528 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-04-07 14:45:47,022 [screen.py:_load_panel()] - Loading panel: shutdown
2025-04-07 14:45:47,097 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > shutdown
2025-04-07 14:50:32,531 [KlippyWebsocket.py:emergency_stop()] - Sending printer.emergency_stop
2025-04-07 14:50:32,534 [KlippyWebsocket.py:emergency_stop()] - Sending printer.emergency_stop
2025-04-07 14:50:32,773 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-07 14:50:32,773 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-07 14:50:32,783 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 14:50:32,786 [screen.py:show_panel()] - Reinitializing panel
2025-04-07 14:50:32,852 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 14:53:57,592 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 14:53:57,593 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-07 14:53:57,594 [functions.py:log_start()] - Python version: 3.9
2025-04-07 14:53:57,740 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 14:53:57,741 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 14:53:57,759 [config.py:log_config()] -  ===== Config File =====

=======================
2025-04-07 14:53:57,763 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-07 14:53:57,764 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 14:53:57,886 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-07 14:53:57,886 [config.py:install_language()] - Using lang en
2025-04-07 14:53:57,909 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 14:53:57,912 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 14:53:57,917 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 14:53:57,920 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-07 14:53:58,397 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-07 14:53:58,410 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-07 14:53:58,420 [screen.py:initial_connection()] - Default printer: None
2025-04-07 14:53:58,497 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 14:53:58,498 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 14:53:58,567 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 14:53:58,581 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 14:53:58,581 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 14:53:58,615 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-07 14:53:58,637 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 14:53:58,651 [_logging.py:info()] - Websocket connected
2025-04-07 14:53:58,652 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 14:53:58,904 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 14:53:58,923 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 14:53:58,941 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 14:53:58,941 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 14:53:58,942 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 14:53:58,963 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-07 14:53:59,187 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-07 14:53:59,190 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 14:53:59,192 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 14:53:59,192 [printer.py:reinit()] - # Extruders: 1
2025-04-07 14:53:59,192 [printer.py:reinit()] - # Temperature devices: 1
2025-04-07 14:53:59,192 [printer.py:reinit()] - # Fans: 0
2025-04-07 14:53:59,192 [printer.py:reinit()] - # Output pins: 0
2025-04-07 14:53:59,193 [printer.py:reinit()] - # Leds: 0
2025-04-07 14:53:59,193 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-07 14:53:59,219 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 14:53:59,222 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-07 14:53:59,510 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 14:53:59,510 [screen.py:init_klipper()] - Printer initialized
2025-04-07 14:53:59,511 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-04-07 14:53:59,511 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-07 14:53:59,523 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 14:53:59,525 [screen.py:show_panel()] - Reinitializing panel
2025-04-07 14:53:59,589 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:01:29,121 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 15:01:29,122 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-07 15:01:29,122 [functions.py:log_start()] - Python version: 3.9
2025-04-07 15:01:29,264 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 15:01:29,266 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 15:01:29,284 [config.py:log_config()] -  ===== Config File =====

=======================
2025-04-07 15:01:29,288 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-07 15:01:29,289 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 15:01:29,411 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-07 15:01:29,411 [config.py:install_language()] - Using lang en
2025-04-07 15:01:29,435 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 15:01:29,438 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 15:01:29,443 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 15:01:29,446 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-07 15:01:29,922 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-07 15:01:29,935 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-07 15:01:29,946 [screen.py:initial_connection()] - Default printer: None
2025-04-07 15:01:30,022 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 15:01:30,023 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 15:01:30,092 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:01:30,106 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 15:01:30,106 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:01:30,134 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-07 15:01:30,155 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 15:01:30,168 [_logging.py:info()] - Websocket connected
2025-04-07 15:01:30,169 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 15:01:30,417 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:01:30,435 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 15:01:30,454 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:01:30,455 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:01:30,455 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 15:01:30,477 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-07 15:01:30,656 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-07 15:01:30,659 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 15:01:30,660 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:01:30,661 [printer.py:reinit()] - # Extruders: 1
2025-04-07 15:01:30,661 [printer.py:reinit()] - # Temperature devices: 1
2025-04-07 15:01:30,661 [printer.py:reinit()] - # Fans: 0
2025-04-07 15:01:30,661 [printer.py:reinit()] - # Output pins: 0
2025-04-07 15:01:30,662 [printer.py:reinit()] - # Leds: 0
2025-04-07 15:01:30,662 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-07 15:01:30,688 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:01:30,691 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-07 15:01:30,980 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:01:30,981 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:01:30,981 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2025-04-07 15:01:30,982 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-07 15:01:30,989 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 15:01:30,991 [screen.py:show_panel()] - Reinitializing panel
2025-04-07 15:01:31,056 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:02:20,910 [KlippyWebsocket.py:connect()] - Already connected
2025-04-07 15:02:23,971 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:02:24,007 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 15:02:24,040 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:02:24,041 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:02:24,042 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 15:02:24,087 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-07 15:02:24,334 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-07 15:02:24,337 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 15:02:24,338 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:02:24,339 [printer.py:reinit()] - # Extruders: 1
2025-04-07 15:02:24,339 [printer.py:reinit()] - # Temperature devices: 1
2025-04-07 15:02:24,339 [printer.py:reinit()] - # Fans: 0
2025-04-07 15:02:24,339 [printer.py:reinit()] - # Output pins: 0
2025-04-07 15:02:24,339 [printer.py:reinit()] - # Leds: 0
2025-04-07 15:02:24,340 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-07 15:02:24,364 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:02:24,367 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-07 15:02:24,630 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:02:24,631 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:02:25,278 [screen.py:_load_panel()] - Loading panel: shutdown
2025-04-07 15:02:25,307 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > shutdown
2025-04-07 15:02:29,446 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-07 15:02:29,460 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:03:17,996 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-07 15:03:17,997 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-07 15:03:17,999 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-07 15:03:18,000 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 15:03:18,003 [screen.py:show_panel()] - Reinitializing panel
2025-04-07 15:03:18,123 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:03:20,967 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:03:20,985 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 15:03:21,002 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:03:21,003 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:03:21,004 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 15:03:21,024 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-07 15:03:21,056 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-07 15:03:21,060 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 15:03:21,061 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:03:21,061 [printer.py:reinit()] - # Extruders: 1
2025-04-07 15:03:21,062 [printer.py:reinit()] - # Temperature devices: 1
2025-04-07 15:03:21,062 [printer.py:reinit()] - # Fans: 0
2025-04-07 15:03:21,062 [printer.py:reinit()] - # Output pins: 0
2025-04-07 15:03:21,062 [printer.py:reinit()] - # Leds: 0
2025-04-07 15:03:21,062 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-07 15:03:21,087 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:03:21,089 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-07 15:03:21,313 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:03:21,314 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:03:21,314 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-07 15:03:21,315 [printer.py:change_state()] - Adding callback for state: ready
2025-04-07 15:03:21,316 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-07 15:03:21,322 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-07 15:03:21,442 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-07 15:03:21,453 [main_menu.py:add_device()] - Adding device: extruder
2025-04-07 15:03:21,463 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-07 15:03:21,512 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:03:21,514 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-07 15:03:21,553 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:03:21,572 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-07 15:03:21,637 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:03:45,231 [heatergraph.py:event_cb()] - Graph area: 206.9188232421875 78.79501342773438
2025-04-07 15:03:47,783 [screen.py:_load_panel()] - Loading panel: print
2025-04-07 15:03:47,849 [print.py:__init__()] - Thumbsize: 142.75862068965517
2025-04-07 15:03:47,853 [print.py:__init__()] - thumbs
2025-04-07 15:03:47,863 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2025-04-07 15:03:47,886 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2025-04-07 15:03:47,901 [print.py:load_files()] - Loaded in 0.004 seconds
2025-04-07 15:03:50,078 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-07 15:03:50,136 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:04:27,695 [heatergraph.py:event_cb()] - Graph area: 268.9027404785156 105.74114990234375
2025-04-07 15:04:29,593 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2025-04-07 15:04:31,501 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-07 15:04:31,535 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:05:12,537 [screen.py:_load_panel()] - Loading panel: move
2025-04-07 15:05:12,675 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-07 15:05:13,589 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-07 15:05:13,632 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:08:13,161 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 15:08:13,162 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-07 15:08:13,163 [functions.py:log_start()] - Python version: 3.9
2025-04-07 15:08:13,426 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 15:08:13,427 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 15:08:13,461 [config.py:log_config()] -  ===== Config File =====

=======================
2025-04-07 15:08:13,465 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-07 15:08:13,467 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 15:08:13,625 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-07 15:08:13,626 [config.py:install_language()] - Using lang en
2025-04-07 15:08:13,664 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 15:08:13,670 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 15:08:13,681 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 15:08:13,685 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-07 15:08:14,660 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-07 15:08:14,690 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-07 15:08:14,715 [screen.py:initial_connection()] - Default printer: None
2025-04-07 15:08:14,817 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 15:08:14,819 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 15:08:14,925 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:08:14,955 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 15:08:14,955 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:08:15,002 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-07 15:08:15,040 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 15:08:15,088 [_logging.py:info()] - Websocket connected
2025-04-07 15:08:15,089 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 15:08:15,460 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:08:15,483 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 15:08:15,506 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:08:15,507 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:08:15,507 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 15:08:15,541 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-07 15:08:18,317 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:08:18,351 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 15:08:18,372 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:08:18,373 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:08:18,374 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 15:08:18,398 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-07 15:08:18,604 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-07 15:08:18,608 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 15:08:18,609 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:08:18,609 [printer.py:reinit()] - # Extruders: 1
2025-04-07 15:08:18,610 [printer.py:reinit()] - # Temperature devices: 1
2025-04-07 15:08:18,610 [printer.py:reinit()] - # Fans: 0
2025-04-07 15:08:18,610 [printer.py:reinit()] - # Output pins: 0
2025-04-07 15:08:18,611 [printer.py:reinit()] - # Leds: 0
2025-04-07 15:08:18,611 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-07 15:08:18,642 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:08:18,646 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-07 15:08:18,922 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:08:18,922 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:08:18,923 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-07 15:08:18,923 [printer.py:change_state()] - Adding callback for state: ready
2025-04-07 15:08:18,934 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-07 15:08:18,939 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-07 15:08:19,073 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-07 15:08:19,089 [main_menu.py:add_device()] - Adding device: extruder
2025-04-07 15:08:19,100 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-07 15:08:19,153 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:08:19,156 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-07 15:08:19,175 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-07 15:08:19,177 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-07 15:08:24,309 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-07 15:08:24,345 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:08:24,350 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-07 15:08:24,373 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:08:30,528 [heatergraph.py:event_cb()] - Graph area: 231.912353515625 59.756988525390625
2025-04-07 15:08:34,287 [heatergraph.py:event_cb()] - Graph area: 250.90740966796875 100.761962890625
2025-04-07 15:08:37,618 [screen.py:_load_panel()] - Loading panel: print
2025-04-07 15:08:37,658 [print.py:__init__()] - Thumbsize: 142.75862068965517
2025-04-07 15:08:37,662 [print.py:__init__()] - thumbs
2025-04-07 15:08:37,674 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2025-04-07 15:08:37,700 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2025-04-07 15:08:37,716 [print.py:load_files()] - Loaded in 0.004 seconds
2025-04-07 15:08:41,150 [print.py:_refresh_files()] - Refreshing
2025-04-07 15:08:41,161 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2025-04-07 15:08:41,744 [print.py:load_files()] - Loaded in 0.004 seconds
2025-04-07 15:08:42,655 [print.py:_refresh_files()] - Refreshing
2025-04-07 15:08:42,668 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2025-04-07 15:08:42,717 [print.py:load_files()] - Loaded in 0.005 seconds
2025-04-07 15:08:43,478 [print.py:_refresh_files()] - Refreshing
2025-04-07 15:08:43,482 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2025-04-07 15:08:43,513 [print.py:load_files()] - Loaded in 0.004 seconds
2025-04-07 15:08:44,349 [print.py:_refresh_files()] - Refreshing
2025-04-07 15:08:44,354 [KlippyWebsocket.py:get_dir_info()] - Sending server.files.get_directory  gcodes
2025-04-07 15:08:44,384 [print.py:load_files()] - Loaded in 0.004 seconds
2025-04-07 15:08:46,510 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-07 15:08:46,543 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:10:12,599 [screen.py:_load_panel()] - Loading panel: move
2025-04-07 15:10:12,721 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-07 15:10:13,565 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-07 15:10:13,595 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:11:34,054 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 15:11:34,055 [functions.py:log_start()] - KlipperScreen Version: v0.3.9-50-gdaed9a09
2025-04-07 15:11:34,056 [functions.py:log_start()] - Python version: 3.9
2025-04-07 15:11:34,313 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 15:11:34,314 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 15:11:34,341 [config.py:log_config()] -  ===== Config File =====

=======================
2025-04-07 15:11:34,346 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-07 15:11:34,352 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 15:11:34,507 [config.py:create_translations()] - Selected lang: None OS lang: en_US
2025-04-07 15:11:34,508 [config.py:install_language()] - Using lang en
2025-04-07 15:11:34,540 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 15:11:34,544 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 15:11:34,552 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 15:11:34,556 [KlippyGtk.py:__init__()] - Font size: 20.7 (medium)
2025-04-07 15:11:35,606 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2025-04-07 15:11:35,634 [screen.py:set_screenblanking_timeout()] - Using DPMS
2025-04-07 15:11:35,656 [screen.py:initial_connection()] - Default printer: None
2025-04-07 15:11:35,766 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 15:11:35,769 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 15:11:35,889 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:11:35,921 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 15:11:35,922 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:11:35,968 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/access/oneshot_token
2025-04-07 15:11:35,992 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 15:11:36,018 [_logging.py:info()] - Websocket connected
2025-04-07 15:11:36,018 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 15:11:36,366 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:11:36,399 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 15:11:36,421 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:11:36,422 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:11:36,423 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 15:11:36,457 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-07 15:11:39,361 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/info
2025-04-07 15:11:39,386 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/webcams/list
2025-04-07 15:11:39,405 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:11:39,406 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:11:39,406 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/info
2025-04-07 15:11:39,430 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?configfile
2025-04-07 15:11:39,628 [screen.py:init_klipper()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '200'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu CB1': {'serial': '/tmp/klipper_host_mcu'}, 'printer': {'kinematics': 'hybrid_corexy', 'max_velocity': '1000', 'max_accel': '5000', 'max_z_velocity': '30', 'max_z_accel': '100', 'square_corner_velocity': '5.0'}, 'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0'}, 'board_pins CB1': {'mcu': 'CB1', 'aliases': '\n\nPIN_7=gpio270,\nPIN_11=gpio271,\nPIN_12=gpio263,\nPIN_13=gpio262,\nPIN_15=gpio260,\nPIN_16=gpio261,\nPIN_18=gpio259,\nPIN_26=gpio267,\nPIN_28=gpio266,\n\n\nPI_FAN=gpio269'}, 'board_pins Manta_M8P_V2': {'aliases': '\n\nM1_DIR=PE5, M1_STEP=PE6, M1_ENABLE=PC14, M1_ENDSTOP=PF4,\nM2_DIR=PE1, M2_STEP=PE2, M2_ENABLE=PE4, M2_ENDSTOP=PF3,\nM3_DIR=PB7, M3_STEP=PB8, M3_ENABLE=PE0, M3_ENDSTOP=PF2,\nM4_DIR=PB3, M4_STEP=PB4, M4_ENABLE=PB6, M4_ENDSTOP=PF1,\nM5_DIR=PG12, M5_STEP=PG13, M5_ENABLE=PG15,\nM6_DIR=PD7, M6_STEP=PG9, M6_ENABLE=PG11,\nM7_DIR=PD3, M7_STEP=PD4, M7_ENABLE=PD6,\nM8_DIR=PC8, M8_STEP=PC7, M8_ENABLE=PD2,\n\n\nTHB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7,\n\n\nFAN0=PF7, FAN1=PF9, FAN2=PF6, FAN3=PF8, FAN4=PA4, FAN5=PA6, FAN6=PA2,\n\n\nTAC_FAN5=PC2, TAC_FAN6=PC1,\n\n\nBED_OUT=PF5, HE0=PA0, HE1=PA1, HE2=PA3, HE4=PA5,\n\n\nM5_ENDSTOP=PF0,\n\n\nM6_ENDSTOP=PC15'}, 'stepper_x': {'dir_pin': 'M8_DIR', 'step_pin': 'M8_STEP', 'enable_pin': 'M8_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'full_steps_per_rotation': '200', 'rotation_distance': '32', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': '-55', 'position_max': '1120', 'position_min': '-65', 'homing_speed': '150'}, 'dual_carriage': {'axis': 'x', 'dir_pin': 'M7_DIR', 'step_pin': 'M7_STEP', 'enable_pin': 'M7_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': '1180', 'position_max': '1185', 'homing_speed': '150', 'safe_distance': '55'}, 'stepper_y': {'dir_pin': 'M6_DIR', 'step_pin': 'M6_STEP', 'enable_pin': 'M6_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': '728', 'position_max': '728', 'position_min': '-2', 'homing_speed': '70', 'second_homing_speed': '10'}, 'stepper_y1': {'dir_pin': 'M5_DIR', 'step_pin': 'M5_STEP', 'enable_pin': 'M5_ENABLE', 'step_pulse_duration': '0.000002', 'microsteps': '32', 'rotation_distance': '32', 'full_steps_per_rotation': '200', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'dir_pin': 'M4_DIR', 'step_pin': 'M4_STEP', 'enable_pin': 'M4_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200', 'endstop_pin': 'PC15', 'position_endstop': '0', 'position_max': '625', 'position_min': '-2.0', 'homing_speed': '10', 'second_homing_speed': '3', 'homing_retract_dist': '7', 'homing_retract_speed': '30'}, 'stepper_z1': {'dir_pin': 'M3_DIR', 'step_pin': 'M3_STEP', 'enable_pin': 'M3_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z2': {'dir_pin': 'M2_DIR', 'step_pin': 'M2_STEP', 'enable_pin': 'M2_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'stepper_z3': {'dir_pin': 'M1_DIR', 'step_pin': 'M1_STEP', 'enable_pin': 'M1_ENABLE', 'step_pulse_duration': '0.000002', 'rotation_distance': '2.5', 'microsteps': '32', 'full_steps_per_rotation': '200'}, 'heater_bed': {'heater_pin': 'BED_OUT', 'pwm_cycle_time': '0.3', 'sensor_pin': 'TH2', 'sensor_type': 'ATC Semitec 104GT-2', 'smooth_time': '0.5', 'control': 'watermark', 'max_delta': '0.005', 'min_temp': '0', 'max_temp': '110'}, 'extruder': {'step_pin': 'PF7', 'dir_pin': 'PF9', 'enable_pin': 'PF6', 'microsteps': '32', 'rotation_distance': '7.356', 'full_steps_per_rotation': '200', 'nozzle_diameter': '2.5', 'filament_diameter': '2.85', 'max_extrude_cross_section': '30', 'instantaneous_corner_velocity': '1.000', 'max_extrude_only_distance': '100.0', 'max_extrude_only_velocity': '100', 'max_extrude_only_accel': '2000', 'pressure_advance': '0.04', 'pressure_advance_smooth_time': '0.040', 'heater_pin': 'HE1', 'sensor_type': 'ATC Semitec 104GT-2', 'sensor_pin': 'TH1', 'smooth_time': '2', 'min_temp': '0', 'max_temp': '400', 'min_extrude_temp': '160', 'control': 'watermark'}, 'gcode_macro TEST_X_Acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'gcode_macro TEST_Y_Aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state'}, 'exclude_object': {}, 'firmware_retraction': {'retract_length': '0.8', 'retract_speed': '40', 'unretract_extra_length': '0', 'unretract_speed': '40'}, 'gcode_arcs': {'resolution': '0.01'}, 'force_move': {'enable_force_move': 'true'}, 'gcode_macro MOVIMIENTO_MANUAL': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}'}, 'gcode_macro ONLY_MOTOR_MOVEMENT': {'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3', 'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}'}, 'gcode_macro MOVER_UN_SOLO_MOTOR': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}'}, 'gcode_macro SELECT_X_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Y_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}, 'gcode_macro SELECT_Z_AXIS_MOTOR': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"'}}, 'settings': {'mcu': {'canbus_uuid': '78ffb60c1fd5', 'canbus_interface': 'can0', 'max_stepper_error': 2.5e-05}, 'mcu cb1': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 200.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n{% set prompt_txt = [] %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% set _d = prompt_txt.append("\\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% set _d = prompt_txt.append("\\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}\n{% endif %}\n\n{% if not (runout_resume and do_resume) %}\nRESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"\n{% for element in prompt_txt %}\nRESPOND TYPE=command MSG=\'{"action:prompt_text %s" % element}\'\n{% endfor %}\nRESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'board_pins cb1': {'mcu': ['CB1'], 'aliases': [['PIN_7', 'gpio270'], ['PIN_11', 'gpio271'], ['PIN_12', 'gpio263'], ['PIN_13', 'gpio262'], ['PIN_15', 'gpio260'], ['PIN_16', 'gpio261'], ['PIN_18', 'gpio259'], ['PIN_26', 'gpio267'], ['PIN_28', 'gpio266'], ['PI_FAN', 'gpio269']]}, 'board_pins manta_m8p_v2': {'mcu': ['mcu'], 'aliases': [['M1_DIR', 'PE5'], ['M1_STEP', 'PE6'], ['M1_ENABLE', 'PC14'], ['M1_ENDSTOP', 'PF4'], ['M2_DIR', 'PE1'], ['M2_STEP', 'PE2'], ['M2_ENABLE', 'PE4'], ['M2_ENDSTOP', 'PF3'], ['M3_DIR', 'PB7'], ['M3_STEP', 'PB8'], ['M3_ENABLE', 'PE0'], ['M3_ENDSTOP', 'PF2'], ['M4_DIR', 'PB3'], ['M4_STEP', 'PB4'], ['M4_ENABLE', 'PB6'], ['M4_ENDSTOP', 'PF1'], ['M5_DIR', 'PG12'], ['M5_STEP', 'PG13'], ['M5_ENABLE', 'PG15'], ['M6_DIR', 'PD7'], ['M6_STEP', 'PG9'], ['M6_ENABLE', 'PG11'], ['M7_DIR', 'PD3'], ['M7_STEP', 'PD4'], ['M7_ENABLE', 'PD6'], ['M8_DIR', 'PC8'], ['M8_STEP', 'PC7'], ['M8_ENABLE', 'PD2'], ['THB', 'PB1'], ['TH0', 'PB0'], ['TH1', 'PC5'], ['TH2', 'PC4'], ['TH3', 'PA7'], ['FAN0', 'PF7'], ['FAN1', 'PF9'], ['FAN2', 'PF6'], ['FAN3', 'PF8'], ['FAN4', 'PA4'], ['FAN5', 'PA6'], ['FAN6', 'PA2'], ['TAC_FAN5', 'PC2'], ['TAC_FAN6', 'PC1'], ['BED_OUT', 'PF5'], ['HE0', 'PA0'], ['HE1', 'PA1'], ['HE2', 'PA3'], ['HE4', 'PA5'], ['M5_ENDSTOP', 'PF0'], ['M6_ENDSTOP', 'PC15']]}, 'heater_bed': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH2', 'min_temp': 0.0, 'max_temp': 110.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 0.5, 'control': 'watermark', 'max_delta': 0.005, 'heater_pin': 'BED_OUT', 'pwm_cycle_time': 0.3}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'gcode_macro test_x_acel': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\nSET_GCODE_OFFSET X=0 Y=0\n{% for _ in range(12) %}\nG1 X300 F20000\nG1 X420 F20000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'gcode_macro test_y_aceleracion': {'gcode': '\nSAVE_GCODE_STATE NAME=move_state\nM220 S100\n{% for _ in range(12) %}\nG1 Y400 F60000\nG1 Y450 F60000\n{% endfor %}\nRESTORE_GCODE_STATE NAME=move_state', 'description': 'G-Code macro'}, 'firmware_retraction': {'retract_length': 0.8, 'retract_speed': 40.0, 'unretract_extra_length': 0.0, 'unretract_speed': 40.0}, 'gcode_arcs': {'resolution': 0.01}, 'force_move': {'enable_force_move': True}, 'gcode_macro movimiento_manual': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set x = params.X|default(0)|float %}\n{% set y = params.Y|default(0)|float %}\n{% set z = params.Z|default(0)|float %}\n{% set f = params.F|default(10)|float %}\n\n{% if x > 50 or y > 50 or z > 50 %}\nRESPOND TYPE=error MSG="El movimiento manual esta limitado a 50 mm"\n{% else %}\n\nSET_KINEMATIC_POSITION X=560 Y=360 Z=310\n\n\nG91\nG0 X{x} Y{y} Z{z} F{(f*60)}\nG90\nM84\n\n{% endif %}\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro only_motor_movement': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\n\n{% set stepper_name = params.MOTOR %}\n{% set distance = params.DISTANCIA|default(1)|float %}\n\n{% if stepper_name %}\nFORCE_MOVE STEPPER={stepper_name} DISTANCE={distance} VELOCITY=5 ACCEL=500\n{% endif %}\n\n\n{% if stepper_name == "stepper_x" or stepper_name == "dual_carriage" %}\nSELECT_X_AXIS_MOTOR\n{% elif stepper_name == "stepper_y" or stepper_name == "stepper_y1" %}\nSELECT_Y_AXIS_MOTOR\n{% elif stepper_name == "stepper_z" or stepper_name == "stepper_z1" or stepper_name == "stepper_z2" or stepper_name == "stepper_z3" %}\nSELECT_Z_AXIS_MOTOR\n{% endif %}\n\n{% endif %}', 'description': 'Avaliable motors: stepper_x, dual_carriage, stepper_y, stepper_y1, stepper_z, stepper_z1, stepper_z2, stepper_z3'}, 'gcode_macro mover_un_solo_motor': {'gcode': '\n{% if printer.print_stats.state == "printing" %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_text No se puede realizar esta acción,  hay una impresión en curso"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% else %}\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el eje al que pertenece el motor que quiere mover."\nRESPOND TYPE=command MSG="action:prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"\n{% endif %}', 'description': 'G-Code macro'}, 'gcode_macro select_x_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button X0 ←| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X0 →| ONLY_MOTOR_MOVEMENT MOTOR=stepper_x DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button X1 ←| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button X1 →| ONLY_MOTOR_MOVEMENT MOTOR=dual_carriage DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_y_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Y0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Y1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_y1 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'gcode_macro select_z_axis_motor': {'gcode': '\nRESPOND TYPE=command MSG="action:prompt_end"\nRESPOND TYPE=command MSG="action:prompt_begin Mover un solo motor"\nRESPOND TYPE=command MSG="action:prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm."\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary"\nRESPOND TYPE=command MSG="action:prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_button_group_start"\nRESPOND TYPE=command MSG="action:prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info"\nRESPOND TYPE=command MSG="action:prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error"\nRESPOND TYPE=command MSG="action:prompt_button_group_end"\nRESPOND TYPE=command MSG="action:prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info"\nRESPOND TYPE=command MSG="action:prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG=\\"action:prompt_end\\"|error"\nRESPOND TYPE=command MSG="action:prompt_show"', 'description': 'G-Code macro'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 5000.0, 'square_corner_velocity': 5.0, 'kinematics': 'hybrid_corexy', 'max_z_velocity': 30.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'M8_STEP', 'dir_pin': 'M8_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M8_ENABLE', 'endstop_pin': '^M1_ENDSTOP', 'position_endstop': -55.0, 'position_min': -65.0, 'position_max': 1120.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_y': {'step_pin': 'M6_STEP', 'dir_pin': 'M6_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M6_ENABLE', 'endstop_pin': '^M3_ENDSTOP', 'position_endstop': 728.0, 'position_min': -2.0, 'position_max': 728.0, 'homing_speed': 70.0, 'second_homing_speed': 10.0, 'homing_retract_speed': 70.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True}, 'stepper_y1': {'step_pin': 'M5_STEP', 'dir_pin': 'M5_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M5_ENABLE', 'endstop_pin': '^M4_ENDSTOP'}, 'stepper_z': {'step_pin': 'M4_STEP', 'dir_pin': 'M4_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M4_ENABLE', 'endstop_pin': 'PC15', 'position_endstop': 0.0, 'position_min': -2.0, 'position_max': 625.0, 'homing_speed': 10.0, 'second_homing_speed': 3.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 7.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'M3_STEP', 'dir_pin': 'M3_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M3_ENABLE'}, 'stepper_z2': {'step_pin': 'M2_STEP', 'dir_pin': 'M2_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M2_ENABLE'}, 'stepper_z3': {'step_pin': 'M1_STEP', 'dir_pin': 'M1_DIR', 'rotation_distance': 2.5, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M1_ENABLE'}, 'dual_carriage': {'axis': 'x', 'step_pin': 'M7_STEP', 'dir_pin': 'M7_DIR', 'rotation_distance': 32.0, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'step_pulse_duration': 2e-06, 'enable_pin': 'M7_ENABLE', 'endstop_pin': '^M2_ENDSTOP', 'position_endstop': 1180.0, 'position_min': 0.0, 'position_max': 1185.0, 'homing_speed': 150.0, 'second_homing_speed': 75.0, 'homing_retract_speed': 150.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': True, 'safe_distance': 55.0}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'ATC Semitec 104GT-2', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'TH1', 'min_temp': 0.0, 'max_temp': 400.0, 'min_extrude_temp': 160.0, 'max_power': 1.0, 'smooth_time': 2.0, 'control': 'watermark', 'max_delta': 2.0, 'heater_pin': 'HE1', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 2.5, 'filament_diameter': 2.85, 'max_extrude_cross_section': 30.0, 'max_extrude_only_velocity': 100.0, 'max_extrude_only_accel': 2000.0, 'max_extrude_only_distance': 100.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'PF7', 'pressure_advance': 0.04, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'PF9', 'rotation_distance': 7.356, 'microsteps': 32, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': 'PF6'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2025-04-07 15:11:39,632 [printer.py:stop_tempstore_updates()] - Stopping tempstore
2025-04-07 15:11:39,633 [printer.py:reinit()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:11:39,633 [printer.py:reinit()] - # Extruders: 1
2025-04-07 15:11:39,634 [printer.py:reinit()] - # Temperature devices: 1
2025-04-07 15:11:39,634 [printer.py:reinit()] - # Fans: 0
2025-04-07 15:11:39,634 [printer.py:reinit()] - # Output pins: 0
2025-04-07 15:11:39,635 [printer.py:reinit()] - # Leds: 0
2025-04-07 15:11:39,635 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/gcode/help
2025-04-07 15:11:39,665 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:11:39,667 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed
2025-04-07 15:11:39,955 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:11:39,955 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:11:39,956 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-07 15:11:39,956 [printer.py:change_state()] - Adding callback for state: ready
2025-04-07 15:11:39,959 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-07 15:11:39,965 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-07 15:11:40,107 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-07 15:11:40,122 [main_menu.py:add_device()] - Adding device: extruder
2025-04-07 15:11:40,133 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-07 15:11:40,186 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:11:40,189 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-07 15:11:40,208 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2025-04-07 15:11:40,210 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2025-04-07 15:11:45,357 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/temperature_store
2025-04-07 15:11:45,395 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:11:45,401 [KlippyRest.py:_do_request()] - Sending get to http://127.0.0.1:7125/server/config
2025-04-07 15:11:45,424 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:18:26,722 [heatergraph.py:event_cb()] - Graph area: 270.9022216796875 83.77420043945312
2025-04-07 15:18:27,842 [heatergraph.py:event_cb()] - Graph area: 272.9017028808594 156.8509521484375
2025-04-07 15:21:03,233 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=1024, height=600)
2025-04-07 15:27:32,016 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 15:27:32,016 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-07 15:27:32,017 [functions.py:log_start()] - Python version: 3.9
2025-04-07 15:27:32,175 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 15:27:32,176 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 15:27:32,180 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-07 15:27:32,208 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-07 15:27:32,214 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-07 15:27:32,225 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-07 15:27:32,240 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-07 15:27:32,243 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-07 15:27:32,244 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 15:27:32,407 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-07 15:27:32,408 [config.py:install_language()] - Using lang en
2025-04-07 15:27:32,432 [screen.py:__init__()] - Display for xset: :0
2025-04-07 15:27:32,435 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-07 15:27:32,435 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 15:27:32,436 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 15:27:32,440 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 15:27:32,679 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-07 15:27:32,897 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-07 15:27:33,125 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-07 15:27:33,127 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-07 15:27:33,128 [screen.py:initial_connection()] - Default printer: None
2025-04-07 15:27:33,217 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 15:27:33,219 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-07 15:27:33,296 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 15:27:33,381 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:27:33,423 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 15:27:33,424 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 15:27:33,439 [_logging.py:info()] - Websocket connected
2025-04-07 15:27:33,440 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 15:27:33,683 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-07 15:27:33,736 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-07 15:27:33,766 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:27:33,784 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:27:34,009 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:27:34,009 [printer.py:log_counts()] - # Extruders: 1
2025-04-07 15:27:34,010 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-07 15:27:34,010 [printer.py:log_counts()] - # Fans: 0
2025-04-07 15:27:34,010 [printer.py:log_counts()] - # Output pins: 0
2025-04-07 15:27:34,011 [printer.py:log_counts()] - # PWM tools: 0
2025-04-07 15:27:34,011 [printer.py:log_counts()] - # Leds: 0
2025-04-07 15:27:34,259 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:27:34,261 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:27:34,262 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:27:34,263 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-07 15:27:34,264 [printer.py:change_state()] - Adding callback for state: ready
2025-04-07 15:27:34,306 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-07 15:27:34,306 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-07 15:27:34,307 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-07 15:27:34,311 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-07 15:27:34,396 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-07 15:27:34,673 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-07 15:27:34,684 [main_menu.py:add_device()] - Adding device: extruder
2025-04-07 15:27:34,695 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-07 15:27:34,735 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-07 15:27:34,759 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:27:34,799 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:27:34,822 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:28:45,711 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 15:28:45,712 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-07 15:28:45,713 [functions.py:log_start()] - Python version: 3.9
2025-04-07 15:28:45,973 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 15:28:45,980 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 15:28:45,985 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-07 15:28:46,029 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-07 15:28:46,042 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-07 15:28:46,060 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-07 15:28:46,088 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-07 15:28:46,093 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-07 15:28:46,097 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 15:28:46,317 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-07 15:28:46,318 [config.py:install_language()] - Using lang en
2025-04-07 15:28:46,364 [screen.py:__init__()] - Display for xset: :0
2025-04-07 15:28:46,372 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-07 15:28:46,373 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 15:28:46,376 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 15:28:46,387 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 15:28:46,702 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-07 15:28:47,039 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-07 15:28:47,421 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-07 15:28:47,423 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-07 15:28:47,424 [screen.py:initial_connection()] - Default printer: None
2025-04-07 15:28:47,550 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 15:28:47,551 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-07 15:28:47,639 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 15:28:47,734 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:28:47,796 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 15:28:47,798 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 15:28:47,821 [_logging.py:info()] - Websocket connected
2025-04-07 15:28:47,821 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 15:28:48,159 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-07 15:28:48,225 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-07 15:28:48,254 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:28:48,278 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:28:48,310 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-07 15:28:51,113 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:28:51,343 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:28:51,343 [printer.py:log_counts()] - # Extruders: 1
2025-04-07 15:28:51,343 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-07 15:28:51,344 [printer.py:log_counts()] - # Fans: 0
2025-04-07 15:28:51,344 [printer.py:log_counts()] - # Output pins: 0
2025-04-07 15:28:51,344 [printer.py:log_counts()] - # PWM tools: 0
2025-04-07 15:28:51,344 [printer.py:log_counts()] - # Leds: 0
2025-04-07 15:28:51,602 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:28:51,604 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:28:51,604 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:28:51,605 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-07 15:28:51,606 [printer.py:change_state()] - Adding callback for state: ready
2025-04-07 15:28:51,655 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-07 15:28:51,657 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-07 15:28:51,657 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-07 15:28:51,668 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-07 15:28:51,773 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-07 15:28:51,966 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-07 15:28:51,988 [main_menu.py:add_device()] - Adding device: extruder
2025-04-07 15:28:52,005 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-07 15:28:52,073 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-07 15:28:52,196 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:28:52,241 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:28:52,266 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:28:52,313 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:28:52,602 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:28:52,602 [printer.py:log_counts()] - # Extruders: 1
2025-04-07 15:28:52,603 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-07 15:28:52,603 [printer.py:log_counts()] - # Fans: 0
2025-04-07 15:28:52,603 [printer.py:log_counts()] - # Output pins: 0
2025-04-07 15:28:52,604 [printer.py:log_counts()] - # PWM tools: 0
2025-04-07 15:28:52,604 [printer.py:log_counts()] - # Leds: 0
2025-04-07 15:28:52,852 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:28:52,854 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:28:52,855 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:28:52,899 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-07 15:28:52,935 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:28:52,962 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:28:56,986 [screen.py:_load_panel()] - Loading panel: move
2025-04-07 15:28:57,147 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-07 15:28:58,013 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-07 15:28:58,044 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:28:44,134 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-07 15:28:44,135 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-07 15:28:44,136 [functions.py:log_start()] - Python version: 3.9
2025-04-07 15:28:44,387 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-07 15:28:44,397 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-07 15:28:44,403 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-07 15:28:44,450 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-07 15:28:44,461 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-07 15:28:44,477 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-07 15:28:44,502 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-07 15:28:44,524 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-07 15:28:44,526 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-07 15:28:44,910 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-07 15:28:44,911 [config.py:install_language()] - Using lang en
2025-04-07 15:28:44,960 [screen.py:__init__()] - Display for xset: :0
2025-04-07 15:28:44,965 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-07 15:28:44,966 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-07 15:28:44,969 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-07 15:28:44,976 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-07 15:28:45,317 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-07 15:28:45,777 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-07 15:28:46,249 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-07 15:28:46,251 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-07 15:28:46,252 [screen.py:initial_connection()] - Default printer: None
2025-04-07 15:28:46,384 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-07 15:28:46,385 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-07 15:28:46,510 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-07 15:28:46,628 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-07 15:28:46,705 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-07 15:28:46,708 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-07 15:28:46,744 [_logging.py:info()] - Websocket connected
2025-04-07 15:28:46,745 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-07 15:28:47,117 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-07 15:28:47,178 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-07 15:28:47,207 [printer.py:configure_cameras()] - Cameras: []
2025-04-07 15:28:47,232 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:28:47,265 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-07 15:28:49,285 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:28:49,487 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:28:49,488 [printer.py:log_counts()] - # Extruders: 1
2025-04-07 15:28:49,488 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-07 15:28:49,489 [printer.py:log_counts()] - # Fans: 0
2025-04-07 15:28:49,489 [printer.py:log_counts()] - # Output pins: 0
2025-04-07 15:28:49,490 [printer.py:log_counts()] - # PWM tools: 0
2025-04-07 15:28:49,490 [printer.py:log_counts()] - # Leds: 0
2025-04-07 15:28:49,747 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:28:49,749 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:28:49,750 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:28:49,751 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-07 15:28:49,751 [printer.py:change_state()] - Adding callback for state: ready
2025-04-07 15:28:49,791 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-07 15:28:49,792 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-07 15:28:49,792 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-07 15:28:49,796 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-07 15:28:49,881 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-07 15:28:50,047 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-07 15:28:50,058 [main_menu.py:add_device()] - Adding device: extruder
2025-04-07 15:28:50,069 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-07 15:28:50,108 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-07 15:28:50,127 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-07 15:28:50,162 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:28:50,184 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:28:51,924 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-07 15:28:52,339 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-07 15:28:52,340 [printer.py:log_counts()] - # Extruders: 1
2025-04-07 15:28:52,340 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-07 15:28:52,341 [printer.py:log_counts()] - # Fans: 0
2025-04-07 15:28:52,341 [printer.py:log_counts()] - # Output pins: 0
2025-04-07 15:28:52,342 [printer.py:log_counts()] - # PWM tools: 0
2025-04-07 15:28:52,342 [printer.py:log_counts()] - # Leds: 0
2025-04-07 15:28:52,495 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-07 15:28:52,497 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-07 15:28:52,498 [screen.py:init_klipper()] - Printer initialized
2025-04-07 15:28:55,891 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-07 15:28:55,925 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-07 15:28:55,947 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-07 15:29:15,796 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-04-07 15:29:15,797 [screen.py:_go_to_submenu()] - #### Menu __main
2025-04-07 15:29:15,807 [screen.py:_load_panel()] - Loading panel: menu
2025-04-07 15:29:15,882 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-07 15:29:16,197 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-04-07 15:29:16,207 [menu.py:arrangeMenuItems()] - X > more bedlevel
2025-04-07 15:29:16,212 [menu.py:arrangeMenuItems()] - X > more bedmesh
2025-04-07 15:29:16,224 [menu.py:arrangeMenuItems()] - X > more fan
2025-04-07 15:29:16,229 [menu.py:arrangeMenuItems()] - X > more led
2025-04-07 15:29:16,244 [menu.py:arrangeMenuItems()] - X > more pins
2025-04-07 15:29:16,249 [menu.py:arrangeMenuItems()] - X > more power
2025-04-07 15:29:16,256 [menu.py:arrangeMenuItems()] - X > more camera
2025-04-07 15:29:16,273 [menu.py:arrangeMenuItems()] - X > more input_shaper
2025-04-07 15:29:16,288 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-04-07 15:29:16,289 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-07 15:29:16,314 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-04-07 15:29:17,486 [screen.py:_load_panel()] - Loading panel: gcode_macros
2025-04-07 15:29:17,555 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > gcode_macros
2025-04-07 15:29:27,313 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=10
2025-04-07 15:29:27,329 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=10'}
2025-04-07 15:29:35,764 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=50
2025-04-07 15:29:35,775 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=50'}
2025-04-07 15:29:46,889 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-08 11:09:55,454 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=50
2025-04-08 11:09:55,473 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=50'}
2025-04-08 11:10:06,435 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=50
2025-04-08 11:10:06,451 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=50'}
2025-04-08 11:10:13,919 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=50
2025-04-08 11:10:13,929 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=50'}
2025-04-08 11:10:20,845 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=50
2025-04-08 11:10:20,855 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=50'}
2025-04-08 11:17:14,360 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-08 11:17:14,361 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-08 11:17:14,362 [functions.py:log_start()] - Python version: 3.9
2025-04-08 11:17:14,583 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-08 11:17:14,584 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-08 11:17:14,590 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-08 11:17:14,633 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-08 11:17:14,642 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-08 11:17:14,658 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-08 11:17:14,677 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-08 11:17:14,681 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-08 11:17:14,683 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-08 11:17:14,881 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-08 11:17:14,882 [config.py:install_language()] - Using lang en
2025-04-08 11:17:14,918 [screen.py:__init__()] - Display for xset: :0
2025-04-08 11:17:14,923 [screen.py:__init__()] - Screen 0: 1024x768
2025-04-08 11:17:14,924 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-08 11:17:14,929 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-08 11:17:14,936 [screen.py:__init__()] - Screen resolution: 1024x768
2025-04-08 11:17:15,291 [KlippyGtk.py:__init__()] - Font size: 25.6 (medium)
2025-04-08 11:17:15,679 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-08 11:17:16,035 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-08 11:17:16,036 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-08 11:17:16,038 [screen.py:initial_connection()] - Default printer: None
2025-04-08 11:17:16,143 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-08 11:17:16,144 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-08 11:17:16,251 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-08 11:17:16,350 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-08 11:17:16,405 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-08 11:17:16,407 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-08 11:17:16,430 [_logging.py:info()] - Websocket connected
2025-04-08 11:17:16,430 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-08 11:17:16,435 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-08 11:17:16,493 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-08 11:17:16,520 [printer.py:configure_cameras()] - Cameras: []
2025-04-08 11:17:16,542 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-08 11:17:16,575 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-08 11:17:19,921 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-08 11:17:20,151 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-08 11:17:20,151 [printer.py:log_counts()] - # Extruders: 1
2025-04-08 11:17:20,152 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-08 11:17:20,152 [printer.py:log_counts()] - # Fans: 0
2025-04-08 11:17:20,152 [printer.py:log_counts()] - # Output pins: 0
2025-04-08 11:17:20,152 [printer.py:log_counts()] - # PWM tools: 0
2025-04-08 11:17:20,153 [printer.py:log_counts()] - # Leds: 0
2025-04-08 11:17:20,409 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-08 11:17:20,411 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-08 11:17:20,412 [screen.py:init_klipper()] - Printer initialized
2025-04-08 11:17:20,413 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-08 11:17:20,413 [printer.py:change_state()] - Adding callback for state: ready
2025-04-08 11:17:20,456 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-08 11:17:20,456 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-08 11:17:20,457 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-08 11:17:20,460 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-08 11:17:20,545 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-08 11:17:20,706 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-08 11:17:20,718 [main_menu.py:add_device()] - Adding device: extruder
2025-04-08 11:17:20,728 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-08 11:17:20,767 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-08 11:17:20,796 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-08 11:17:20,852 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-08 11:17:20,882 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-08 11:17:21,170 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-08 11:17:21,409 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-08 11:17:21,410 [printer.py:log_counts()] - # Extruders: 1
2025-04-08 11:17:21,410 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-08 11:17:21,411 [printer.py:log_counts()] - # Fans: 0
2025-04-08 11:17:21,411 [printer.py:log_counts()] - # Output pins: 0
2025-04-08 11:17:21,412 [printer.py:log_counts()] - # PWM tools: 0
2025-04-08 11:17:21,412 [printer.py:log_counts()] - # Leds: 0
2025-04-08 11:17:21,669 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-08 11:17:21,671 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-08 11:17:21,672 [screen.py:init_klipper()] - Printer initialized
2025-04-08 11:17:21,673 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-08 11:17:21,674 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-08 11:17:21,739 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-08 11:17:21,740 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-08 11:17:21,740 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-08 11:17:21,836 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-08 11:17:21,992 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-08 11:18:15,940 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-08 11:17:13,294 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-08 11:17:13,295 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-08 11:17:13,296 [functions.py:log_start()] - Python version: 3.9
2025-04-08 11:17:13,532 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-08 11:17:13,537 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-08 11:17:13,543 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-08 11:17:13,607 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-08 11:17:13,618 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-08 11:17:13,649 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-08 11:17:13,678 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-08 11:17:13,682 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-08 11:17:13,683 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-08 11:17:14,087 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-08 11:17:14,088 [config.py:install_language()] - Using lang en
2025-04-08 11:17:14,136 [screen.py:__init__()] - Display for xset: :0
2025-04-08 11:17:14,142 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-08 11:17:14,143 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-08 11:17:14,149 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-08 11:17:14,157 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-08 11:17:14,580 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-08 11:17:15,030 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-08 11:17:15,518 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-08 11:17:15,519 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-08 11:17:15,521 [screen.py:initial_connection()] - Default printer: None
2025-04-08 11:17:15,653 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-08 11:17:15,654 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-08 11:17:15,760 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-08 11:17:15,883 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-08 11:17:15,964 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-08 11:17:15,969 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-08 11:17:16,022 [_logging.py:info()] - Websocket connected
2025-04-08 11:17:16,022 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-08 11:17:16,345 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-08 11:17:16,421 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-08 11:17:16,454 [printer.py:configure_cameras()] - Cameras: []
2025-04-08 11:17:16,495 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-08 11:17:16,568 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-08 11:17:16,569 [printer.py:log_counts()] - # Extruders: 1
2025-04-08 11:17:16,570 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-08 11:17:16,570 [printer.py:log_counts()] - # Fans: 0
2025-04-08 11:17:16,571 [printer.py:log_counts()] - # Output pins: 0
2025-04-08 11:17:16,571 [printer.py:log_counts()] - # PWM tools: 0
2025-04-08 11:17:16,572 [printer.py:log_counts()] - # Leds: 0
2025-04-08 11:17:16,814 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-08 11:17:16,817 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-08 11:17:16,817 [screen.py:init_klipper()] - Printer initialized
2025-04-08 11:17:16,818 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-08 11:17:16,819 [printer.py:change_state()] - Adding callback for state: startup
2025-04-08 11:17:16,865 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-08 11:17:16,866 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-08 11:17:17,811 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-08 11:17:17,812 [printer.py:change_state()] - Adding callback for state: ready
2025-04-08 11:17:17,859 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-08 11:17:17,860 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-08 11:17:17,860 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-08 11:17:17,865 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-08 11:17:17,954 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-08 11:17:18,138 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-08 11:17:18,150 [main_menu.py:add_device()] - Adding device: extruder
2025-04-08 11:17:18,161 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-08 11:17:18,200 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-08 11:17:18,219 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-08 11:17:18,239 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-04-08 11:17:18,285 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-08 11:17:18,303 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-04-08 11:17:19,560 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-08 11:17:19,561 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-08 11:17:19,607 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-08 11:17:19,607 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-08 11:17:19,608 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-08 11:17:19,694 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-08 11:17:19,767 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-08 11:17:23,881 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-08 11:17:23,904 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-08 11:18:15,846 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 07:22:21,254 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-09 07:22:21,255 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 07:22:21,293 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 07:22:21,294 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 07:22:21,294 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 07:22:21,295 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 07:22:24,901 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 07:22:25,138 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 07:22:25,138 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 07:22:25,139 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 07:22:25,139 [printer.py:log_counts()] - # Fans: 0
2025-04-09 07:22:25,139 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 07:22:25,139 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 07:22:25,139 [printer.py:log_counts()] - # Leds: 0
2025-04-09 07:22:25,404 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 07:22:25,407 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 07:22:25,408 [screen.py:init_klipper()] - Printer initialized
2025-04-09 07:22:25,410 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 07:22:25,410 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 07:22:25,473 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 07:22:25,474 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 07:22:25,474 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 07:22:25,481 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 07:22:25,584 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 07:22:25,749 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 07:22:25,760 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 07:22:25,770 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 07:22:25,808 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 07:22:25,827 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 07:22:25,863 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 07:22:25,922 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 07:22:25,986 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 07:22:26,125 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 07:22:26,125 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 07:22:26,126 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 07:22:26,126 [printer.py:log_counts()] - # Fans: 0
2025-04-09 07:22:26,126 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 07:22:26,126 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 07:22:26,126 [printer.py:log_counts()] - # Leds: 0
2025-04-09 07:22:26,377 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 07:22:26,379 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 07:22:26,380 [screen.py:init_klipper()] - Printer initialized
2025-04-09 07:22:26,406 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 07:22:26,440 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 07:22:26,461 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 07:22:52,876 [screen.py:_load_panel()] - Loading panel: move
2025-04-09 07:22:53,011 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 07:22:53,717 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 07:22:53,749 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 07:22:54,374 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-04-09 07:22:54,375 [screen.py:_go_to_submenu()] - #### Menu __main
2025-04-09 07:22:54,383 [screen.py:_load_panel()] - Loading panel: menu
2025-04-09 07:22:54,463 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-09 07:22:54,777 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-04-09 07:22:54,788 [menu.py:arrangeMenuItems()] - X > more bedlevel
2025-04-09 07:22:54,794 [menu.py:arrangeMenuItems()] - X > more bedmesh
2025-04-09 07:22:54,806 [menu.py:arrangeMenuItems()] - X > more fan
2025-04-09 07:22:54,815 [menu.py:arrangeMenuItems()] - X > more led
2025-04-09 07:22:54,829 [menu.py:arrangeMenuItems()] - X > more pins
2025-04-09 07:22:54,835 [menu.py:arrangeMenuItems()] - X > more power
2025-04-09 07:22:54,841 [menu.py:arrangeMenuItems()] - X > more camera
2025-04-09 07:22:54,852 [menu.py:arrangeMenuItems()] - X > more input_shaper
2025-04-09 07:22:54,868 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-04-09 07:22:54,868 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-09 07:22:54,892 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-04-09 07:22:55,567 [screen.py:_load_panel()] - Loading panel: gcode_macros
2025-04-09 07:22:55,618 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > gcode_macros
2025-04-09 07:23:13,233 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100
2025-04-09 07:23:13,248 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100'}
2025-04-09 07:23:38,281 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100 F=900
2025-04-09 07:23:38,291 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100 F=900'}
2025-04-09 07:23:43,840 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100 F=900
2025-04-09 07:23:43,850 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100 F=900'}
2025-04-09 07:23:49,013 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100 F=900
2025-04-09 07:23:49,030 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100 F=900'}
2025-04-09 07:23:54,184 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100 F=900
2025-04-09 07:23:54,194 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100 F=900'}
2025-04-09 07:23:59,872 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100 F=900
2025-04-09 07:23:59,885 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100 F=900'}
2025-04-09 07:24:05,202 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100 F=900
2025-04-09 07:24:05,212 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100 F=900'}
2025-04-09 07:24:10,831 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-100 F=900
2025-04-09 07:24:10,847 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-100 F=900'}
2025-04-09 07:24:25,947 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-20 F=300
2025-04-09 07:24:25,958 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-20 F=300'}
2025-04-09 07:42:14,922 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-10 Z=0 F=300
2025-04-09 07:42:14,932 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-10 Z=0 F=300'}
2025-04-09 07:42:29,922 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-10 Z=0 F=10
2025-04-09 07:42:29,932 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-10 Z=0 F=10'}
2025-04-09 07:42:57,336 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-10 Z=0 F=50
2025-04-09 07:42:57,347 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-10 Z=0 F=50'}
2025-04-09 07:43:03,190 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-10 Z=0 F=30
2025-04-09 07:43:03,200 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-10 Z=0 F=30'}
2025-04-09 07:43:08,947 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-10 Z=0 F=30
2025-04-09 07:43:08,958 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-10 Z=0 F=30'}
2025-04-09 07:43:18,986 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-10 Z=0 F=60
2025-04-09 07:43:18,997 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-10 Z=0 F=60'}
2025-04-09 07:43:27,020 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:27,037 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:43:32,098 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:32,109 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:43:35,762 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:35,773 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:43:38,994 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:39,004 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:43:42,194 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:42,205 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:43:45,440 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:45,450 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:43:48,665 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:48,683 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:43:52,280 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-100 Z=0 F=60
2025-04-09 07:43:52,291 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-100 Z=0 F=60'}
2025-04-09 07:44:00,832 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-30 Z=0 F=60
2025-04-09 07:44:00,843 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-30 Z=0 F=60'}
2025-04-09 07:44:03,283 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-30 Z=0 F=60
2025-04-09 07:44:03,293 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-30 Z=0 F=60'}
2025-04-09 07:44:05,010 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=-30 Z=0 F=60
2025-04-09 07:44:05,021 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=-30 Z=0 F=60'}
2025-04-09 07:53:04,131 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=10 F=60
2025-04-09 07:53:04,158 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=10 F=60'}
2025-04-09 07:53:11,597 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=10 F=10
2025-04-09 07:53:11,608 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=10 F=10'}
2025-04-09 07:53:19,807 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=100 F=10
2025-04-09 07:53:19,818 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=100 F=10'}
2025-04-09 07:53:19,917 [screen.py:show_popup_message()] - error: El movimiento manual esta limitado a 50 mm
2025-04-09 07:53:28,901 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:53:28,912 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:53:36,239 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:53:36,251 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:53:42,674 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:53:42,691 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:53:50,335 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:53:50,346 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:53:57,119 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:53:57,130 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:02,327 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:02,338 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:07,391 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:07,402 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:14,471 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:14,482 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:20,831 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:20,843 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:27,167 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:27,178 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:33,864 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:33,875 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:39,782 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:39,794 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:45,959 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:45,970 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:51,653 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:51,664 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:54:56,765 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:54:56,784 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 07:55:04,039 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=50 F=10
2025-04-09 07:55:04,051 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=50 F=10'}
2025-04-09 08:17:51,385 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=100 Z=0 F=10
2025-04-09 08:17:51,403 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=100 Z=0 F=10'}
2025-04-09 08:17:51,516 [screen.py:show_popup_message()] - error: El movimiento manual esta limitado a 50 mm
2025-04-09 08:17:58,570 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=10
2025-04-09 08:17:58,581 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=10'}
2025-04-09 08:18:06,898 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=20
2025-04-09 08:18:06,909 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=20'}
2025-04-09 08:18:13,591 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:13,603 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:15,577 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:15,588 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:16,185 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:16,196 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:17,179 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:17,190 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:17,835 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:17,846 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:18,997 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:19,008 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:20,365 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:20,377 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:21,697 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:21,708 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:23,129 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:23,141 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:25,512 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:25,530 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:27,313 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:27,325 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:29,839 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:29,860 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:33,041 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:33,052 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:35,257 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:35,268 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:37,825 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:37,837 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:40,152 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:40,165 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:18:43,113 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=50 Z=0 F=50
2025-04-09 08:18:43,124 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=50 Z=0 F=50'}
2025-04-09 08:22:34,354 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Y=0 Z=20 F=50
2025-04-09 08:22:34,371 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Y=0 Z=20 F=50'}
2025-04-09 08:24:02,682 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 08:24:02,733 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-04-09 08:24:02,745 [menu.py:arrangeMenuItems()] - X > more bedlevel
2025-04-09 08:24:02,750 [menu.py:arrangeMenuItems()] - X > more bedmesh
2025-04-09 08:24:02,761 [menu.py:arrangeMenuItems()] - X > more fan
2025-04-09 08:24:02,768 [menu.py:arrangeMenuItems()] - X > more led
2025-04-09 08:24:02,782 [menu.py:arrangeMenuItems()] - X > more pins
2025-04-09 08:24:02,788 [menu.py:arrangeMenuItems()] - X > more power
2025-04-09 08:24:02,795 [menu.py:arrangeMenuItems()] - X > more camera
2025-04-09 08:24:02,805 [menu.py:arrangeMenuItems()] - X > more input_shaper
2025-04-09 08:24:02,821 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-04-09 08:24:02,821 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-09 08:24:04,267 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > gcode_macros
2025-04-09 08:24:13,503 [screen.py:show_popup_message()] - echo: MOVER_UN_SOLO_MOTOR 
2025-04-09 08:24:13,514 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVER_UN_SOLO_MOTOR'}
2025-04-09 08:24:13,616 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:13,618 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-09 08:24:13,619 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-09 08:24:13,623 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-09 08:24:13,625 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-09 08:24:13,628 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:13,629 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:13,630 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Cerrar esta pestaña', 'response': 1, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:13,691 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:14,485 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SELECT_Z_AXIS_MOTOR'}
2025-04-09 08:24:14,507 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:14,521 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:14,524 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:14,536 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:14,538 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:14,543 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:14,554 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:14,564 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:14,567 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:14,570 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:14,577 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:14,584 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:14,588 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:14,590 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:14,595 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:14,598 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:14,599 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:14,601 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:14,604 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:14,607 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:14,609 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:14,611 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:14,612 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:14,612 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:14,695 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:20,343 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:20,377 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:20,390 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:20,397 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:20,399 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:20,402 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:20,412 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:20,419 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:20,428 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:20,430 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:20,434 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:20,444 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:20,450 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:20,452 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:20,454 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:20,460 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:20,463 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:20,464 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:20,466 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:20,470 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:20,473 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:20,474 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:20,475 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:20,476 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:20,477 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:20,545 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:27,526 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:27,577 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:27,600 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:27,615 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:27,617 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:27,622 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:27,623 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:27,643 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:27,655 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:27,660 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:27,665 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:27,675 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:27,685 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:27,687 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:27,690 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:27,695 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:27,700 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:27,702 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:27,704 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:27,709 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:27,714 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:27,716 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:27,718 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:27,720 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:27,721 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:27,807 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:29,357 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:29,416 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:29,428 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:29,443 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:29,445 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:29,447 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:29,449 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:29,457 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:29,461 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:29,463 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:29,464 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:29,468 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:29,471 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:29,472 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:29,474 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:29,478 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:29,481 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:29,482 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:29,484 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:29,487 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:29,490 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:29,492 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:29,493 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:29,495 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:29,496 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:29,566 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:31,102 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:31,147 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:31,169 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:31,183 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:31,186 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:31,189 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:31,194 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:31,207 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:31,217 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:31,224 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:31,226 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:31,240 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:31,245 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:31,248 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:31,250 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:31,258 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:31,262 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:31,264 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:31,266 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:31,273 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:31,276 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:31,277 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:31,279 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:31,279 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:31,280 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:31,352 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:32,821 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:32,843 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:32,856 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:32,871 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:32,873 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:32,875 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:32,879 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:32,890 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:32,897 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:32,900 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:32,901 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:32,911 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:32,918 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:32,921 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:32,922 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:32,927 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:32,930 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:32,931 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:32,933 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:32,936 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:32,939 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:32,941 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:32,942 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:32,943 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:32,943 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:33,016 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:34,454 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:34,524 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:34,543 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:34,570 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:34,575 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:34,579 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:34,581 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:34,595 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:34,602 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:34,604 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:34,607 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:34,612 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:34,617 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:34,618 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:34,621 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:34,626 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:34,631 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:34,633 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:34,635 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:34,641 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:34,645 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:34,647 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:34,649 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:34,653 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:34,653 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:34,727 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:35,829 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:35,855 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:35,868 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:35,880 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:35,881 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:35,883 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:35,885 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:35,896 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:35,905 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:35,907 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:35,909 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:35,915 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:35,923 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:35,925 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:35,927 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:35,934 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:35,938 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:35,940 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:35,941 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:35,945 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:35,948 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:35,949 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:35,950 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:35,951 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:35,952 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:36,026 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:37,198 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:37,287 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:37,304 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:37,318 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:37,321 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:37,324 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:37,327 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:37,339 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:37,348 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:37,351 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:37,354 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:37,365 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:37,369 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:37,371 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:37,373 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:37,377 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:37,381 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:37,383 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:37,385 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:37,390 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:37,393 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:37,395 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:37,397 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:37,398 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:37,398 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:37,491 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:39,181 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:39,203 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:39,216 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:39,224 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:39,226 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:39,227 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:39,232 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:39,238 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:39,245 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:39,249 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:39,251 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:39,260 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:39,268 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:39,270 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:39,273 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:39,281 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:39,289 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:39,291 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:39,293 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:39,301 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:39,304 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:39,305 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:39,306 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:39,309 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:39,309 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:39,383 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:40,878 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:40,916 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:40,929 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:40,935 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:40,938 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:40,940 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:40,944 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:40,954 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:40,963 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:40,966 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:40,968 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:40,977 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:40,984 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:40,986 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:40,988 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:40,995 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:41,000 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:41,001 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:41,003 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:41,007 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:41,010 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:41,011 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:41,012 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:41,013 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:41,014 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:41,085 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:42,549 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:42,572 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:42,584 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:42,593 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:42,596 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:42,598 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:42,602 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:42,607 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:42,614 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:42,618 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:42,619 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:42,629 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:42,637 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:42,640 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:42,641 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:42,649 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:42,654 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:42,655 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:42,656 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:42,660 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:42,663 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:42,664 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:42,666 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:42,666 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:42,667 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:42,738 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:44,365 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:44,409 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:44,428 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:44,440 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:44,442 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:44,445 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:44,447 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:44,459 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:44,470 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:44,477 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:44,479 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:44,489 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:44,500 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:44,502 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:44,504 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:44,511 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:44,515 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:44,517 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:44,519 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:44,523 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:44,527 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:44,529 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:44,531 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:44,532 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:44,533 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:44,611 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:45,965 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:45,987 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:46,000 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:46,008 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:46,010 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:46,011 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:46,043 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:46,053 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:46,060 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:46,063 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:46,065 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:46,072 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:46,078 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:46,079 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:46,081 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:46,084 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:46,087 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:46,089 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:46,090 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:46,094 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:46,097 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:46,099 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:46,100 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:46,101 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:46,102 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:46,173 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:24:47,630 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:24:47,674 [prompts.py:decode()] - prompt_end
2025-04-09 08:24:47,697 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:24:47,708 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:24:47,712 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:24:47,716 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:47,718 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:24:47,730 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:24:47,740 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:47,748 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:47,751 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:24:47,762 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:24:47,769 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:47,772 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:47,775 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:24:47,781 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:24:47,785 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:47,786 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:24:47,787 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:24:47,791 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:24:47,794 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:24:47,795 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:24:47,797 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:24:47,797 [prompts.py:decode()] - prompt_show
2025-04-09 08:24:47,798 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:24:47,870 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:25:03,038 [screen.py:_send_action()] - printer.gcode.script: {'script': ' ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 '}
2025-04-09 08:25:03,091 [prompts.py:decode()] - prompt_end
2025-04-09 08:25:03,115 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:25:03,126 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:25:03,130 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:25:03,132 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:25:03,135 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:25:03,150 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:25:03,160 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:25:03,167 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:25:03,170 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:25:03,177 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:25:03,183 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:25:03,186 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:25:03,187 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:25:03,192 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:25:03,195 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:25:03,197 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:25:03,198 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:25:03,202 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:25:03,205 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:25:03,206 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:25:03,207 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:25:03,208 [prompts.py:decode()] - prompt_show
2025-04-09 08:25:03,209 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:25:03,280 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:25:15,201 [screen.py:_send_action()] - printer.gcode.script: {'script': 'RESPOND TYPE=command MSG="action:prompt_end"'}
2025-04-09 08:25:15,219 [prompts.py:decode()] - prompt_end
2025-04-09 08:25:15,235 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:25:25,566 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:25,577 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:34,999 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:35,011 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:39,167 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:39,179 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:41,335 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:41,347 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:43,287 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:43,299 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:45,044 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:45,060 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:46,711 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:46,723 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:50,118 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:50,136 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:52,710 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:52,729 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:55,879 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:55,891 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:25:58,503 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:25:58,515 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:01,919 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:01,931 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:03,671 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:03,683 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:05,432 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:05,444 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:07,263 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:07,275 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:10,199 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:10,211 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:12,391 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:12,403 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:14,159 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:14,171 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:15,935 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:15,947 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:18,071 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:18,083 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:19,855 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:19,868 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:21,864 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:21,877 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:23,207 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:23,219 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:24,823 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:24,835 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:26,432 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:26,449 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:27,855 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:27,868 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:29,295 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:29,307 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:30,767 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:30,779 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:32,271 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:32,283 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:33,815 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:33,827 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:35,271 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:35,283 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:36,879 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:36,892 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:38,479 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:38,491 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:40,239 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:40,251 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:41,915 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:41,932 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:44,083 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:44,100 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:45,815 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:45,827 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:47,703 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:47,717 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:49,647 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:49,659 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:51,520 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:51,537 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:53,423 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:53,435 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:26:56,060 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:26:56,073 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:27:02,761 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:27:02,772 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:27:04,799 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:27:04,811 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:27:06,583 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:27:06,595 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:27:08,415 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:27:08,427 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:27:10,159 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=2 F=5
2025-04-09 08:27:10,171 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=2 F=5'}
2025-04-09 08:17:14,738 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 08:17:14,739 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-09 08:17:14,740 [functions.py:log_start()] - Python version: 3.9
2025-04-09 08:17:14,964 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 08:17:14,966 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 08:17:14,985 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 08:17:15,030 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 08:17:15,042 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 08:17:15,057 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 08:17:15,077 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-09 08:17:15,081 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-09 08:17:15,082 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 08:17:15,330 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-09 08:17:15,331 [config.py:install_language()] - Using lang en
2025-04-09 08:17:15,373 [screen.py:__init__()] - Display for xset: :0
2025-04-09 08:17:15,380 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 08:17:15,380 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 08:17:15,385 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 08:17:15,393 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 08:17:15,726 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-09 08:17:16,106 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 08:17:16,483 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 08:17:16,485 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 08:17:16,486 [screen.py:initial_connection()] - Default printer: None
2025-04-09 08:17:16,591 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 08:17:16,592 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 08:17:16,679 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 08:17:16,774 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 08:17:16,833 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 08:17:16,834 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 08:17:16,859 [_logging.py:info()] - Websocket connected
2025-04-09 08:17:16,860 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 08:17:17,197 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 08:17:17,259 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 08:17:17,292 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 08:17:17,315 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 08:17:17,354 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-09 08:17:19,959 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 08:17:20,189 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 08:17:20,189 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 08:17:20,190 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 08:17:20,190 [printer.py:log_counts()] - # Fans: 0
2025-04-09 08:17:20,190 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 08:17:20,190 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 08:17:20,190 [printer.py:log_counts()] - # Leds: 0
2025-04-09 08:17:20,448 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 08:17:20,450 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 08:17:20,450 [screen.py:init_klipper()] - Printer initialized
2025-04-09 08:17:20,451 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 08:17:20,452 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 08:17:20,490 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 08:17:20,491 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 08:17:20,491 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 08:17:20,495 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 08:17:20,579 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-09 08:17:20,741 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 08:17:20,753 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 08:17:20,764 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 08:17:20,802 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 08:17:20,821 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 08:17:20,856 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 08:17:20,882 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 08:17:21,937 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 08:17:22,198 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 08:17:22,199 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 08:17:22,199 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 08:17:22,200 [printer.py:log_counts()] - # Fans: 0
2025-04-09 08:17:22,200 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 08:17:22,200 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 08:17:22,201 [printer.py:log_counts()] - # Leds: 0
2025-04-09 08:17:22,454 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 08:17:22,456 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 08:17:22,457 [screen.py:init_klipper()] - Printer initialized
2025-04-09 08:17:25,919 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 08:17:26,015 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 08:17:26,057 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 08:18:16,912 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 08:49:03,136 [screen.py:_go_to_submenu()] - #### Go to submenu more
2025-04-09 08:49:03,137 [screen.py:_go_to_submenu()] - #### Menu __main
2025-04-09 08:49:03,156 [screen.py:_load_panel()] - Loading panel: menu
2025-04-09 08:49:03,316 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-09 08:49:03,624 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-04-09 08:49:03,635 [menu.py:arrangeMenuItems()] - X > more bedlevel
2025-04-09 08:49:03,640 [menu.py:arrangeMenuItems()] - X > more bedmesh
2025-04-09 08:49:03,652 [menu.py:arrangeMenuItems()] - X > more fan
2025-04-09 08:49:03,658 [menu.py:arrangeMenuItems()] - X > more led
2025-04-09 08:49:03,672 [menu.py:arrangeMenuItems()] - X > more pins
2025-04-09 08:49:03,678 [menu.py:arrangeMenuItems()] - X > more power
2025-04-09 08:49:03,684 [menu.py:arrangeMenuItems()] - X > more camera
2025-04-09 08:49:03,695 [menu.py:arrangeMenuItems()] - X > more input_shaper
2025-04-09 08:49:03,710 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-04-09 08:49:03,711 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-09 08:49:03,736 [screen.py:_go_to_submenu()] - menu, {{ gettext('More') }}, panel_name=more, items=[{'more bedlevel': {'name': "{{ gettext('Bed Level') }}", 'icon': 'bed-level', 'panel': 'bed_level', 'method': None, 'confirm': None, 'enable': "{{ 'bed_screws' in printer.config_sections or 'screws_tilt_adjust' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more bedmesh': {'name': "{{ gettext('Bed Mesh') }}", 'icon': 'bed-mesh', 'panel': 'bed_mesh', 'method': None, 'confirm': None, 'enable': "{{ 'bed_mesh' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more zoffset': {'name': "{{ gettext('Z Calibrate') }}", 'icon': 'z-farther', 'panel': 'zcalibrate', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more limits': {'name': "{{ gettext('Limits') }}", 'icon': 'fine-tune', 'panel': 'limits', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more fan': {'name': "{{ gettext('Fan') }}", 'icon': 'fan', 'panel': 'fan', 'method': None, 'confirm': None, 'enable': '{{ printer.fans.count > 0 }}', 'params': '{}', 'style': None}}, {'more led': {'name': "{{ gettext('Leds') }}", 'icon': 'light', 'panel': 'led', 'method': None, 'confirm': None, 'enable': '{{ printer.leds.count > 0 }}', 'params': '{}', 'style': None}}, {'more macros': {'name': "{{ gettext('Macros') }}", 'icon': 'custom-script', 'panel': 'gcode_macros', 'method': None, 'confirm': None, 'enable': '{{ printer.gcode_macros.count > 0 }}', 'params': '{}', 'style': None}}, {'more pins': {'name': "{{ gettext('Pins') }}", 'icon': 'hashtag', 'panel': 'pins', 'method': None, 'confirm': None, 'enable': '{{ printer.output_pins.count > 0 or printer.pwm_tools.count > 0 }}', 'params': '{}', 'style': None}}, {'more power': {'name': "{{ gettext('Power') }}", 'icon': 'shutdown', 'panel': 'power', 'method': None, 'confirm': None, 'enable': '{{ moonraker.power_devices.count > 0 }}', 'params': '{}', 'style': None}}, {'more camera': {'name': "{{ gettext('Camera') }}", 'icon': 'camera', 'panel': 'camera', 'method': None, 'confirm': None, 'enable': '{{ moonraker.cameras.count > 0 }}', 'params': '{}', 'style': None}}, {'more console': {'name': "{{ gettext('Console') }}", 'icon': 'console', 'panel': 'console', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more updater': {'name': "{{ gettext('Update') }}", 'icon': 'refresh', 'panel': 'updater', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more input_shaper': {'name': "{{ gettext('Input Shaper') }}", 'icon': 'move', 'panel': 'input_shaper', 'method': None, 'confirm': None, 'enable': "{{ 'input_shaper' in printer.config_sections }}", 'params': '{}', 'style': None}}, {'more save': {'name': "{{ gettext('Save Config') }}", 'icon': 'complete', 'panel': None, 'method': 'ks_confirm_save', 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more settings': {'name': 'KlipperScreen', 'icon': 'settings', 'panel': 'settings', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more network': {'name': "{{ gettext('Network') }}", 'icon': 'network', 'panel': 'network', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more notifications': {'name': "{{ gettext('Notifications') }}", 'icon': 'notifications', 'panel': 'notifications', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}, {'more spoolman': {'name': 'Spoolman', 'icon': 'spoolman', 'panel': 'spoolman', 'method': None, 'confirm': None, 'enable': '{{ moonraker.spoolman }}', 'params': '{}', 'style': None}}, {'more system': {'name': "{{ gettext('System') }}", 'icon': 'info', 'panel': 'system', 'method': None, 'confirm': None, 'enable': '{{ moonraker_connected }}', 'params': '{}', 'style': None}}, {'more fine_tune': {'name': "{{ gettext('Fine Tuning') }}", 'icon': 'fine-tune', 'panel': 'fine_tune', 'method': None, 'confirm': None, 'enable': 'True', 'params': '{}', 'style': None}}]
2025-04-09 08:49:04,630 [screen.py:_load_panel()] - Loading panel: gcode_macros
2025-04-09 08:49:04,682 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > gcode_macros
2025-04-09 08:49:13,369 [screen.py:show_popup_message()] - echo: MOVIMIENTO_MANUAL  Z=-10
2025-04-09 08:49:13,382 [screen.py:_send_action()] - printer.gcode.script: {'script': 'MOVIMIENTO_MANUAL Z=-10'}
2025-04-09 08:51:56,558 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:51:56,560 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-09 08:51:56,565 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-09 08:51:56,576 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-09 08:51:56,582 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-09 08:51:56,586 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:51:56,588 [prompts.py:decode()] - prompt_show
2025-04-09 08:51:56,589 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Cerrar esta pestaña', 'response': 1, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:51:56,687 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:51:58,030 [prompts.py:decode()] - prompt_end
2025-04-09 08:51:58,041 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:51:58,045 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:51:58,046 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:51:58,078 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:51:58,087 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:51:58,098 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:51:58,105 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:51:58,107 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:51:58,109 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:51:58,115 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:51:58,118 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:51:58,120 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:51:58,123 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:51:58,126 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:51:58,129 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:51:58,131 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:51:58,132 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:51:58,136 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:51:58,139 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:51:58,140 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:51:58,141 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:51:58,142 [prompts.py:decode()] - prompt_show
2025-04-09 08:51:58,143 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:51:58,227 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:52:04,961 [prompts.py:decode()] - prompt_end
2025-04-09 08:52:04,981 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:52:04,995 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:52:04,998 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:52:04,999 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:52:05,005 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:52:05,017 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:52:05,032 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:52:05,036 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:52:05,038 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:52:05,047 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:52:05,056 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:52:05,057 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:52:05,060 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:52:05,064 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:52:05,067 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:52:05,068 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:52:05,070 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:52:05,074 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:52:05,077 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:52:05,078 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:52:05,079 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:52:05,080 [prompts.py:decode()] - prompt_show
2025-04-09 08:52:05,081 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:52:05,151 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:53:00,158 [prompts.py:decode()] - prompt_end
2025-04-09 08:53:00,177 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:53:00,191 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:53:00,193 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:53:00,194 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:00,197 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:53:00,213 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:53:00,227 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:00,232 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:00,235 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:53:00,246 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:53:00,258 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:00,262 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:00,265 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:53:00,276 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:53:00,283 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:00,285 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:00,288 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:53:00,293 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:53:00,297 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:00,299 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:53:00,301 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:53:00,302 [prompts.py:decode()] - prompt_show
2025-04-09 08:53:00,303 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:53:00,384 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:53:02,942 [prompts.py:decode()] - prompt_end
2025-04-09 08:53:02,960 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:53:02,974 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:53:02,976 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:53:02,978 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:02,981 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:53:02,999 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:53:03,007 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:03,012 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:03,016 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:53:03,031 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:53:03,043 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:03,047 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:03,050 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:53:03,062 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:53:03,069 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:03,071 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:03,074 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:53:03,079 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:53:03,083 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:03,085 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:53:03,087 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:53:03,088 [prompts.py:decode()] - prompt_show
2025-04-09 08:53:03,089 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:53:03,180 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:53:09,619 [prompts.py:decode()] - prompt_end
2025-04-09 08:53:09,636 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:53:09,652 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:53:09,656 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:53:09,658 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:09,660 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:53:09,670 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:53:09,678 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:09,682 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:09,684 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:53:09,693 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:53:09,702 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:09,705 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:09,707 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:53:09,714 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:53:09,717 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:09,719 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:09,720 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:53:09,724 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:53:09,727 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:09,728 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:53:09,729 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:53:09,730 [prompts.py:decode()] - prompt_show
2025-04-09 08:53:09,731 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:53:09,805 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:53:12,584 [prompts.py:decode()] - prompt_end
2025-04-09 08:53:12,604 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:53:12,624 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:53:12,627 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:53:12,630 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:12,633 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:53:12,648 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:53:12,660 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:12,663 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:12,673 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:53:12,684 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:53:12,694 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:12,699 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:12,702 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:53:12,712 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:53:12,718 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:12,720 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:12,723 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:53:12,727 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:53:12,731 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:12,732 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:53:12,733 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:53:12,734 [prompts.py:decode()] - prompt_show
2025-04-09 08:53:12,735 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:53:12,809 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:53:17,593 [prompts.py:decode()] - prompt_end
2025-04-09 08:53:17,614 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:53:17,635 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:53:17,640 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:53:17,642 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:17,671 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:53:17,680 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:53:17,687 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:17,688 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:17,690 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:53:17,694 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:53:17,697 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:17,698 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:17,700 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:53:17,703 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:53:17,706 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:17,708 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:17,709 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:53:17,713 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:53:17,716 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:17,717 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:53:17,718 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:53:17,719 [prompts.py:decode()] - prompt_show
2025-04-09 08:53:17,720 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:53:17,790 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:53:20,483 [prompts.py:decode()] - prompt_end
2025-04-09 08:53:20,503 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:53:20,519 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:53:20,521 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:53:20,527 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:20,530 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:53:20,541 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:53:20,576 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:20,579 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:20,583 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:53:20,593 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:53:20,605 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:20,609 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:20,612 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:53:20,625 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:53:20,630 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:20,632 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:20,634 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:53:20,640 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:53:20,644 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:20,646 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:53:20,648 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:53:20,650 [prompts.py:decode()] - prompt_show
2025-04-09 08:53:20,651 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:53:20,730 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:53:28,531 [prompts.py:decode()] - prompt_end
2025-04-09 08:53:28,548 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:53:28,563 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:53:28,566 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:53:28,573 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:28,575 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:53:28,588 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:53:28,599 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:28,601 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:28,604 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:53:28,619 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:53:28,630 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:28,635 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:28,638 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:53:28,651 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:53:28,660 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:28,665 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:53:28,667 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:53:28,681 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:53:28,685 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:53:28,688 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:53:28,690 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:53:28,692 [prompts.py:decode()] - prompt_show
2025-04-09 08:53:28,693 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:53:28,784 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:54:42,937 [prompts.py:decode()] - prompt_end
2025-04-09 08:54:42,956 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:54:42,968 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:54:42,973 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:54:42,975 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:42,978 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:54:42,994 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:54:43,006 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:43,009 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:43,013 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:54:43,026 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:54:43,040 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:43,042 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:43,045 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:54:43,050 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:54:43,054 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:43,055 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:43,056 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:54:43,060 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:54:43,063 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:43,065 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:54:43,066 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:54:43,067 [prompts.py:decode()] - prompt_show
2025-04-09 08:54:43,068 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:54:43,140 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:54:47,628 [prompts.py:decode()] - prompt_end
2025-04-09 08:54:47,647 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:54:47,658 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:54:47,661 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:54:47,662 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:47,666 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:54:47,680 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:54:47,691 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:47,701 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:47,705 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:54:47,716 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:54:47,726 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:47,729 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:47,731 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:54:47,741 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:54:47,744 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:47,745 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:47,747 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:54:47,750 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:54:47,753 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:47,755 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:54:47,756 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:54:47,757 [prompts.py:decode()] - prompt_show
2025-04-09 08:54:47,757 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:54:47,828 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:54:55,306 [prompts.py:decode()] - prompt_end
2025-04-09 08:54:55,327 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:54:55,342 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:54:55,345 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:54:55,346 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:55,349 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:54:55,366 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:54:55,379 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:55,381 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:55,386 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:54:55,397 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:54:55,408 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:55,412 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:55,414 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:54:55,424 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:54:55,433 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:55,435 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:54:55,438 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:54:55,443 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:54:55,448 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:54:55,450 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:54:55,451 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:54:55,454 [prompts.py:decode()] - prompt_show
2025-04-09 08:54:55,455 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:54:55,562 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:55:21,349 [prompts.py:decode()] - prompt_end
2025-04-09 08:55:21,372 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:55:21,390 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:55:21,393 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:55:21,396 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:21,398 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:55:21,406 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:55:21,418 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:21,420 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:21,422 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:55:21,430 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:55:21,437 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:21,441 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:21,442 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:55:21,448 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:55:21,452 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:21,453 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:21,454 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:55:21,458 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:55:21,461 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:21,463 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:55:21,464 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:55:21,465 [prompts.py:decode()] - prompt_show
2025-04-09 08:55:21,465 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:55:21,536 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:55:34,627 [prompts.py:decode()] - prompt_end
2025-04-09 08:55:34,644 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:55:34,658 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:55:34,661 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:55:34,663 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:34,665 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:55:34,681 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:55:34,690 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:34,695 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:34,698 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:55:34,710 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:55:34,723 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:34,727 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:34,730 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:55:34,740 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:55:34,752 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:34,755 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:34,760 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:55:34,764 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:55:34,771 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:34,773 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:55:34,774 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:55:34,776 [prompts.py:decode()] - prompt_show
2025-04-09 08:55:34,777 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:55:34,855 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:55:39,780 [prompts.py:decode()] - prompt_end
2025-04-09 08:55:39,798 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:55:39,810 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:55:39,812 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:55:39,816 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:39,824 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:55:39,832 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:55:39,838 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:39,868 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:39,870 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:55:39,880 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:55:39,884 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:39,885 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:39,887 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:55:39,890 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:55:39,893 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:39,895 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:39,896 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:55:39,900 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:55:39,903 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:39,904 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:55:39,905 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:55:39,906 [prompts.py:decode()] - prompt_show
2025-04-09 08:55:39,907 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:55:39,977 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:55:44,808 [prompts.py:decode()] - prompt_end
2025-04-09 08:55:44,826 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:55:44,840 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:55:44,845 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:55:44,848 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:44,851 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:55:44,864 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:55:44,884 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:44,896 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:44,899 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:55:44,912 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:55:44,921 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:44,925 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:44,928 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:55:44,944 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:55:44,950 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:44,952 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:55:44,954 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:55:44,957 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:55:44,961 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:55:44,962 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:55:44,963 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:55:44,964 [prompts.py:decode()] - prompt_show
2025-04-09 08:55:44,964 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:55:45,039 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:56:26,034 [prompts.py:decode()] - prompt_end
2025-04-09 08:56:26,053 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 08:56:26,061 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 08:56:26,063 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 08:56:26,066 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:56:26,068 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 08:56:26,078 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 08:56:26,086 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:56:26,089 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:56:26,092 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 08:56:26,100 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 08:56:26,107 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:56:26,108 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:56:26,111 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 08:56:26,117 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 08:56:26,123 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:56:26,125 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 08:56:26,126 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 08:56:26,130 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 08:56:26,133 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 08:56:26,134 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 08:56:26,136 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 08:56:26,137 [prompts.py:decode()] - prompt_show
2025-04-09 08:56:26,137 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 08:56:26,216 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 08:56:34,205 [prompts.py:decode()] - prompt_end
2025-04-09 08:56:34,220 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 09:00:43,571 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 09:00:43,577 [prompts.py:decode()] - prompt_text Elija el eje al que pertenece el motor que quiere mover.
2025-04-09 09:00:43,582 [prompts.py:decode()] - prompt_button Eje X|SELECT_X_AXIS_MOTOR|primary
2025-04-09 09:00:43,590 [prompts.py:decode()] - prompt_button Eje Y|SELECT_Y_AXIS_MOTOR|primary
2025-04-09 09:00:43,601 [prompts.py:decode()] - prompt_button Eje Z|SELECT_Z_AXIS_MOTOR|primary
2025-04-09 09:00:43,605 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 09:00:43,606 [prompts.py:decode()] - prompt_show
2025-04-09 09:00:43,607 [prompts.py:show()] - Prompt  Mover un solo motor Elija el eje al que pertenece el motor que quiere mover. [{'name': 'Cerrar esta pestaña', 'response': 1, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 09:00:43,675 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 09:00:46,167 [prompts.py:decode()] - prompt_end
2025-04-09 09:00:46,183 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 09:00:46,189 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 09:00:46,191 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 09:00:46,192 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:46,205 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 09:00:46,215 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 09:00:46,224 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:46,226 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:46,229 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 09:00:46,242 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 09:00:46,253 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:46,257 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:46,260 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 09:00:46,273 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 09:00:46,283 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:46,286 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:46,289 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 09:00:46,299 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 09:00:46,304 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:46,307 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 09:00:46,309 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 09:00:46,320 [prompts.py:decode()] - prompt_show
2025-04-09 09:00:46,321 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 09:00:46,392 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 09:00:51,693 [prompts.py:decode()] - prompt_end
2025-04-09 09:00:51,710 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 09:00:51,725 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 09:00:51,727 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 09:00:51,729 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:51,731 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 09:00:51,747 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 09:00:51,755 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:51,758 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:51,764 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 09:00:51,776 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 09:00:51,788 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:51,791 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:51,792 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 09:00:51,803 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 09:00:51,813 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:51,817 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:51,819 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 09:00:51,827 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 09:00:51,830 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:51,832 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 09:00:51,833 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 09:00:51,834 [prompts.py:decode()] - prompt_show
2025-04-09 09:00:51,834 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 09:00:51,906 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 09:00:55,763 [prompts.py:decode()] - prompt_end
2025-04-09 09:00:55,779 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 09:00:55,794 [prompts.py:decode()] - prompt_begin Mover un solo motor
2025-04-09 09:00:55,797 [prompts.py:decode()] - prompt_text Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm.
2025-04-09 09:00:55,802 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:55,805 [prompts.py:decode()] - prompt_button Z1 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=1 |primary
2025-04-09 09:00:55,819 [prompts.py:decode()] - prompt_button Z2 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=1 |secondary
2025-04-09 09:00:55,831 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:55,835 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:55,839 [prompts.py:decode()] - prompt_button Z1 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z1 DISTANCIA=-1 |primary
2025-04-09 09:00:55,851 [prompts.py:decode()] - prompt_button Z2 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z2 DISTANCIA=-1 |secondary
2025-04-09 09:00:55,862 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:55,866 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:55,869 [prompts.py:decode()] - prompt_button Z0 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=1 |info
2025-04-09 09:00:55,878 [prompts.py:decode()] - prompt_button Z3 ↑| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=1 |error
2025-04-09 09:00:55,888 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:55,890 [prompts.py:decode()] - prompt_button_group_start
2025-04-09 09:00:55,894 [prompts.py:decode()] - prompt_button Z0 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z DISTANCIA=-1 |info
2025-04-09 09:00:55,899 [prompts.py:decode()] - prompt_button Z3 ↓| ONLY_MOTOR_MOVEMENT MOTOR=stepper_z3 DISTANCIA=-1 |error
2025-04-09 09:00:55,904 [prompts.py:decode()] - prompt_button_group_end
2025-04-09 09:00:55,906 [prompts.py:decode()] - prompt_footer_button Atras|MOVER_UN_SOLO_MOTOR|info
2025-04-09 09:00:55,909 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 09:00:55,910 [prompts.py:decode()] - prompt_show
2025-04-09 09:00:55,911 [prompts.py:show()] - Prompt  Mover un solo motor Elija el motor y la dirección en la que quiere mover. Se moverá 1 mm. [{'name': 'Atras', 'response': 1, 'gcode': 'MOVER_UN_SOLO_MOTOR', 'style': 'dialog-info'}, {'name': 'Cerrar esta pestaña', 'response': 2, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 09:00:55,995 [KlippyGtk.py:Dialog()] - Showing dialog  Mover un solo motor (width=1024, height=600)
2025-04-09 09:01:00,683 [prompts.py:decode()] - prompt_end
2025-04-09 09:01:00,693 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 09:08:22,379 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 09:08:22,424 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2025-04-09 09:08:22,453 [menu.py:arrangeMenuItems()] - X > more bedlevel
2025-04-09 09:08:22,464 [menu.py:arrangeMenuItems()] - X > more bedmesh
2025-04-09 09:08:22,487 [menu.py:arrangeMenuItems()] - X > more fan
2025-04-09 09:08:22,498 [menu.py:arrangeMenuItems()] - X > more led
2025-04-09 09:08:22,527 [menu.py:arrangeMenuItems()] - X > more pins
2025-04-09 09:08:22,538 [menu.py:arrangeMenuItems()] - X > more power
2025-04-09 09:08:22,550 [menu.py:arrangeMenuItems()] - X > more camera
2025-04-09 09:08:22,571 [menu.py:arrangeMenuItems()] - X > more input_shaper
2025-04-09 09:08:22,598 [menu.py:arrangeMenuItems()] - X > more spoolman
2025-04-09 09:08:22,598 [menu.py:evaluate_enable()] - moonraker connected True
2025-04-09 09:08:34,451 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 09:08:34,502 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 09:08:35,151 [screen.py:_load_panel()] - Loading panel: move
2025-04-09 09:08:35,278 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 09:08:36,309 [screen.py:_load_panel()] - Loading panel: menu
2025-04-09 09:08:36,471 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 09:08:36,494 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-04-09 09:08:36,499 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 09:08:37,719 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 09:08:50,885 [screen.py:show_popup_message()] - error: No trigger on dual_carriage after full movement
2025-04-09 09:26:45,876 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 09:26:58,104 [screen.py:show_popup_message()] - error: No trigger on x after full movement
2025-04-09 09:17:14,994 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 09:17:14,995 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-09 09:17:14,995 [functions.py:log_start()] - Python version: 3.9
2025-04-09 09:17:15,250 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 09:17:15,251 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 09:17:15,256 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 09:17:15,295 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 09:17:15,304 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 09:17:15,322 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 09:17:15,346 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-09 09:17:15,350 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-09 09:17:15,354 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 09:17:15,573 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-09 09:17:15,574 [config.py:install_language()] - Using lang en
2025-04-09 09:17:15,613 [screen.py:__init__()] - Display for xset: :0
2025-04-09 09:17:15,620 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 09:17:15,620 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 09:17:15,625 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 09:17:15,633 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 09:17:15,957 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-09 09:17:16,320 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 09:17:16,697 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 09:17:16,699 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 09:17:16,700 [screen.py:initial_connection()] - Default printer: None
2025-04-09 09:17:16,803 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 09:17:16,804 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 09:17:16,893 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 09:17:16,986 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 09:17:17,046 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 09:17:17,047 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 09:17:17,072 [_logging.py:info()] - Websocket connected
2025-04-09 09:17:17,073 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 09:17:17,413 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 09:17:17,475 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 09:17:17,512 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 09:17:17,540 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 09:17:17,573 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-09 09:17:20,187 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 09:17:20,416 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 09:17:20,417 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 09:17:20,417 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 09:17:20,418 [printer.py:log_counts()] - # Fans: 0
2025-04-09 09:17:20,418 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 09:17:20,418 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 09:17:20,419 [printer.py:log_counts()] - # Leds: 0
2025-04-09 09:17:20,674 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 09:17:20,676 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 09:17:20,677 [screen.py:init_klipper()] - Printer initialized
2025-04-09 09:17:20,678 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 09:17:20,678 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 09:17:20,718 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 09:17:20,719 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 09:17:20,719 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 09:17:20,723 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 09:17:20,807 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-09 09:17:20,968 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 09:17:20,979 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 09:17:20,991 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 09:17:21,029 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 09:17:21,058 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 09:17:21,114 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 09:17:21,144 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 09:17:22,124 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 09:17:22,424 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 09:17:22,425 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 09:17:22,425 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 09:17:22,426 [printer.py:log_counts()] - # Fans: 0
2025-04-09 09:17:22,426 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 09:17:22,426 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 09:17:22,427 [printer.py:log_counts()] - # Leds: 0
2025-04-09 09:17:22,679 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 09:17:22,681 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 09:17:22,682 [screen.py:init_klipper()] - Printer initialized
2025-04-09 09:17:26,107 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 09:17:26,176 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 09:17:26,215 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 09:18:03,100 [screen.py:_load_panel()] - Loading panel: move
2025-04-09 09:18:03,249 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 09:18:04,076 [screen.py:_load_panel()] - Loading panel: menu
2025-04-09 09:18:04,238 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 09:18:04,259 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-04-09 09:18:04,265 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 09:18:05,369 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 09:18:08,569 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 09:18:12,859 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 09:18:12,915 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 09:18:14,265 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-25 F3000'}
2025-04-09 09:18:14,271 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 09:18:15,226 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-25 F3000'}
2025-04-09 09:18:15,234 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 09:18:15,617 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-25 F3000'}
2025-04-09 09:18:15,622 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 09:18:16,121 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-25 F3000'}
2025-04-09 09:18:16,125 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 09:18:17,101 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 10:40:19,563 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-25 F3000'}
2025-04-09 10:40:19,571 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:19,972 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-25 F3000'}
2025-04-09 10:40:19,976 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:20,826 [move.py:change_distance()] - ### Distance 50
2025-04-09 10:40:21,332 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 10:40:21,337 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:21,812 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 10:40:21,819 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:22,179 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 10:40:22,184 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:22,559 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 10:40:22,563 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:22,891 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 10:40:22,900 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:24,131 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 10:40:24,136 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:40:24,443 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 10:40:24,447 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 10:54:34,118 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 10:54:34,119 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 10:54:34,184 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 10:54:34,185 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 10:54:34,185 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 10:54:34,187 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 10:54:34,326 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 10:54:34,423 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 10:54:37,756 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 10:54:37,995 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 10:54:37,996 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 10:54:37,996 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 10:54:37,996 [printer.py:log_counts()] - # Fans: 0
2025-04-09 10:54:37,997 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 10:54:37,997 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 10:54:37,997 [printer.py:log_counts()] - # Leds: 0
2025-04-09 10:54:38,242 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 10:54:38,244 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 10:54:38,245 [screen.py:init_klipper()] - Printer initialized
2025-04-09 10:54:38,246 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 10:54:38,246 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 10:54:38,285 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 10:54:38,286 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 10:54:38,286 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 10:54:38,291 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 10:54:38,391 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 10:54:38,608 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 10:54:38,619 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 10:54:38,629 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 10:54:38,667 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 10:54:38,685 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 10:54:38,727 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 10:54:38,800 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 10:54:38,844 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 10:54:38,985 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 10:54:38,986 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 10:54:38,986 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 10:54:38,986 [printer.py:log_counts()] - # Fans: 0
2025-04-09 10:54:38,986 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 10:54:38,987 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 10:54:38,987 [printer.py:log_counts()] - # Leds: 0
2025-04-09 10:54:39,236 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 10:54:39,238 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 10:54:39,239 [screen.py:init_klipper()] - Printer initialized
2025-04-09 10:54:39,266 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 10:54:39,304 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 10:54:39,329 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 11:10:32,081 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-09 11:10:32,081 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-09 11:10:32,133 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 11:10:32,134 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 11:10:32,136 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 11:10:32,226 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 11:10:32,296 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 11:11:19,682 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2025-04-09 11:11:19,756 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-09 11:11:19,757 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 11:11:19,824 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 11:11:19,826 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 11:11:19,826 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 11:11:19,827 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 11:11:23,393 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 11:11:23,624 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 11:11:23,624 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 11:11:23,625 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 11:11:23,625 [printer.py:log_counts()] - # Fans: 0
2025-04-09 11:11:23,626 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 11:11:23,626 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 11:11:23,626 [printer.py:log_counts()] - # Leds: 0
2025-04-09 11:11:23,885 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 11:11:23,887 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 11:11:23,888 [screen.py:init_klipper()] - Printer initialized
2025-04-09 11:11:23,889 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 11:11:23,889 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 11:11:23,932 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 11:11:23,933 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 11:11:23,934 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 11:11:23,941 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 11:11:24,060 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 11:11:24,234 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 11:11:24,245 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 11:11:24,255 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 11:11:24,292 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 11:11:24,311 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 11:11:24,350 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 11:11:24,382 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 11:11:24,467 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 11:11:24,625 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 11:11:24,626 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 11:11:24,626 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 11:11:24,626 [printer.py:log_counts()] - # Fans: 0
2025-04-09 11:11:24,627 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 11:11:24,627 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 11:11:24,627 [printer.py:log_counts()] - # Leds: 0
2025-04-09 11:11:24,877 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 11:11:24,879 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 11:11:24,880 [screen.py:init_klipper()] - Printer initialized
2025-04-09 11:11:24,907 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 11:11:24,944 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 11:11:24,965 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 11:13:06,590 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 11:13:06,591 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 11:13:06,668 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 11:13:06,669 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 11:13:06,670 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 11:13:06,674 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 11:13:06,778 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 11:13:06,867 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 11:13:10,243 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 11:13:10,471 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 11:13:10,472 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 11:13:10,472 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 11:13:10,473 [printer.py:log_counts()] - # Fans: 0
2025-04-09 11:13:10,473 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 11:13:10,473 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 11:13:10,474 [printer.py:log_counts()] - # Leds: 0
2025-04-09 11:13:10,747 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 11:13:10,750 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 11:13:10,751 [screen.py:init_klipper()] - Printer initialized
2025-04-09 11:13:10,752 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 11:13:10,753 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 11:13:10,824 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 11:13:10,826 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 11:13:10,826 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 11:13:10,834 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 11:13:10,947 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 11:13:11,091 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 11:13:11,103 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 11:13:11,113 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 11:13:11,151 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 11:13:11,169 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 11:13:11,209 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 11:13:11,269 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 11:13:11,409 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 11:13:11,476 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 11:13:11,477 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 11:13:11,477 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 11:13:11,477 [printer.py:log_counts()] - # Fans: 0
2025-04-09 11:13:11,477 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 11:13:11,477 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 11:13:11,477 [printer.py:log_counts()] - # Leds: 0
2025-04-09 11:13:11,727 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 11:13:11,729 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 11:13:11,730 [screen.py:init_klipper()] - Printer initialized
2025-04-09 11:13:16,317 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 11:13:16,382 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 11:13:16,412 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 11:17:14,890 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 11:17:14,891 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-09 11:17:14,892 [functions.py:log_start()] - Python version: 3.9
2025-04-09 11:17:15,163 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 11:17:15,164 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 11:17:15,168 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 11:17:15,226 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 11:17:15,239 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 11:17:15,261 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 11:17:15,296 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-09 11:17:15,301 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-09 11:17:15,303 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 11:17:15,531 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-09 11:17:15,532 [config.py:install_language()] - Using lang en
2025-04-09 11:17:15,573 [screen.py:__init__()] - Display for xset: :0
2025-04-09 11:17:15,580 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 11:17:15,581 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 11:17:15,587 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 11:17:15,596 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 11:17:15,905 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-09 11:17:16,245 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 11:17:16,634 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 11:17:16,636 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 11:17:16,637 [screen.py:initial_connection()] - Default printer: None
2025-04-09 11:17:16,740 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 11:17:16,741 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 11:17:16,829 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 11:17:16,924 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 11:17:16,983 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 11:17:16,984 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 11:17:17,010 [_logging.py:info()] - Websocket connected
2025-04-09 11:17:17,011 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 11:17:17,356 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 11:17:17,419 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 11:17:17,448 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 11:17:17,472 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 11:17:17,509 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-09 11:17:20,232 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 11:17:20,462 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 11:17:20,462 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 11:17:20,462 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 11:17:20,463 [printer.py:log_counts()] - # Fans: 0
2025-04-09 11:17:20,463 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 11:17:20,463 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 11:17:20,463 [printer.py:log_counts()] - # Leds: 0
2025-04-09 11:17:20,720 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 11:17:20,722 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 11:17:20,723 [screen.py:init_klipper()] - Printer initialized
2025-04-09 11:17:20,724 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 11:17:20,724 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 11:17:20,763 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 11:17:20,764 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 11:17:20,765 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 11:17:20,768 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 11:17:20,853 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-09 11:17:21,043 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 11:17:21,058 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 11:17:21,070 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 11:17:21,116 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 11:17:21,139 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 11:17:21,198 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 11:17:21,264 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 11:17:22,061 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 11:17:22,221 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 11:17:22,222 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 11:17:22,222 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 11:17:22,223 [printer.py:log_counts()] - # Fans: 0
2025-04-09 11:17:22,223 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 11:17:22,223 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 11:17:22,224 [printer.py:log_counts()] - # Leds: 0
2025-04-09 11:17:22,471 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 11:17:22,474 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 11:17:22,475 [screen.py:init_klipper()] - Printer initialized
2025-04-09 11:17:26,046 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 11:17:26,115 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 11:17:26,151 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 11:46:52,003 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 12:05:29,234 [screen.py:_load_panel()] - Loading panel: move
2025-04-09 12:05:29,430 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 12:05:39,795 [move.py:change_distance()] - ### Distance 10
2025-04-09 12:05:40,188 [move.py:change_distance()] - ### Distance 5
2025-04-09 12:05:41,931 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-5 F600'}
2025-04-09 12:05:41,938 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:05:42,238 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 -5.000 [0.000]
2025-04-09 12:05:46,659 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 12:05:46,690 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 12:08:30,779 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 12:08:31,542 [screen.py:_load_panel()] - Loading panel: menu
2025-04-09 12:08:31,703 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 12:08:31,726 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-04-09 12:08:31,731 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 12:08:33,025 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 12:08:34,064 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 12:08:45,938 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 12:08:45,971 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 12:08:47,138 [move.py:change_distance()] - ### Distance 50
2025-04-09 12:08:48,621 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:48,627 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:49,307 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:49,311 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:49,739 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:49,745 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:50,133 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:50,138 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:50,596 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:50,601 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:51,008 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:51,013 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:52,354 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:52,359 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:52,739 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:52,744 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:53,426 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:53,431 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:54,289 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:54,293 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:55,455 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:55,460 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:56,963 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:56,968 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:57,389 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:57,394 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:08:59,011 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F3000'}
2025-04-09 12:08:59,016 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:40,116 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:40,123 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:40,478 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:40,485 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:40,804 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:40,808 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:41,236 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:41,243 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:41,633 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:41,637 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:42,916 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:42,922 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:43,246 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:43,252 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:43,765 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:43,770 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:44,965 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:44,970 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:45,829 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:45,833 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:46,872 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:46,877 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:47,909 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:47,914 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:48,935 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:48,940 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:49,871 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:49,876 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:51,330 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:51,336 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:09:52,072 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F3000'}
2025-04-09 12:09:52,077 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:23,802 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:23,809 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:24,275 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:24,280 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:28,510 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:28,519 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:28,819 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:28,824 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:29,169 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:29,174 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:29,604 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:29,610 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:29,927 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:29,931 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:31,239 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:31,244 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:31,561 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:31,566 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:40,562 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:40,568 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:40,909 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:40,914 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:41,226 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:41,231 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:41,538 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:41,547 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:41,854 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:41,859 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:10:42,329 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F3000'}
2025-04-09 12:10:42,334 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 12:47:28,482 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-09 12:47:28,483 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-09 12:47:28,561 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 12:47:28,562 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 12:47:28,563 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 12:47:28,650 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 12:47:28,717 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 12:59:41,992 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2025-04-09 12:59:42,064 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-09 12:59:42,065 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 12:59:42,144 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 12:59:42,145 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 12:59:42,145 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 12:59:42,146 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 12:59:45,707 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 12:59:45,941 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 12:59:45,941 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 12:59:45,942 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 12:59:45,942 [printer.py:log_counts()] - # Fans: 0
2025-04-09 12:59:45,942 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 12:59:45,943 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 12:59:45,943 [printer.py:log_counts()] - # Leds: 0
2025-04-09 12:59:46,198 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 12:59:46,201 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 12:59:46,202 [screen.py:init_klipper()] - Printer initialized
2025-04-09 12:59:46,204 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 12:59:46,204 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 12:59:46,240 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 12:59:46,433 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 12:59:46,434 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 12:59:46,434 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 12:59:46,435 [printer.py:log_counts()] - # Fans: 0
2025-04-09 12:59:46,435 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 12:59:46,435 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 12:59:46,435 [printer.py:log_counts()] - # Leds: 0
2025-04-09 12:59:46,750 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 12:59:46,756 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 12:59:46,756 [screen.py:init_klipper()] - Printer initialized
2025-04-09 12:59:46,797 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 12:59:46,798 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 12:59:46,798 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 12:59:46,802 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 12:59:46,890 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 12:59:47,096 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 12:59:47,107 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 12:59:47,117 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 12:59:47,155 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 12:59:47,175 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 12:59:47,214 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 12:59:47,238 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 12:59:52,467 [screen.py:show_panel()] - Reinitializing panel move
2025-04-09 12:59:52,589 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 12:59:53,148 [screen.py:show_panel()] - Reinitializing panel menu
2025-04-09 12:59:53,317 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 12:59:53,339 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2025-04-09 12:59:53,344 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 12:59:54,072 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 12:59:54,498 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 13:14:37,335 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 13:14:37,336 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 13:14:37,406 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 13:14:37,407 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 13:14:37,407 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 13:14:37,412 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 13:14:37,515 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 13:14:37,610 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 13:14:42,027 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 13:14:45,049 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 13:14:48,048 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 13:14:51,045 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 13:14:54,049 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 13:14:57,016 [screen.py:init_klipper()] - Stopping Retries
2025-04-09 15:18:29,013 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 15:18:29,014 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-g2916c9f3
2025-04-09 15:18:29,014 [functions.py:log_start()] - Python version: 3.9
2025-04-09 15:18:29,303 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 15:18:29,312 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 15:18:29,317 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 15:18:29,353 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 15:18:29,362 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 15:18:29,377 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 15:18:29,401 [config.py:log_config()] - ===== Config File =====

=======================
2025-04-09 15:18:29,404 [config.py:__init__()] - ====== Saved Def ======

[graph Printer]
heater_bed = False

=======================
2025-04-09 15:18:29,407 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 15:18:29,609 [config.py:create_translations()] - Selected lang: system_lang OS lang: en_US
2025-04-09 15:18:29,611 [config.py:install_language()] - Using lang en
2025-04-09 15:18:29,650 [screen.py:__init__()] - Display for xset: :0
2025-04-09 15:18:29,659 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 15:18:29,660 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 15:18:29,661 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 15:18:29,671 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 15:18:29,986 [KlippyGtk.py:__init__()] - Font size: 22.2 (medium)
2025-04-09 15:18:30,344 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 15:18:30,696 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 15:18:30,698 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 15:18:30,699 [screen.py:initial_connection()] - Default printer: None
2025-04-09 15:18:30,802 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 15:18:30,803 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 15:18:30,892 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 15:18:30,989 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 15:18:31,048 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 15:18:31,049 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 15:18:31,073 [_logging.py:info()] - Websocket connected
2025-04-09 15:18:31,074 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 15:18:31,439 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 15:18:31,498 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 15:18:31,526 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 15:18:31,548 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:18:31,578 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-09 15:18:34,828 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:18:35,058 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:18:35,058 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 15:18:35,059 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 15:18:35,059 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:18:35,059 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:18:35,060 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:18:35,060 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:18:35,316 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:18:35,318 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 15:18:35,319 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:18:35,320 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2025-04-09 15:18:35,320 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 15:18:35,376 [screen.py:set_dpms_timeout()] - DPMS on :0 set to: 3600
2025-04-09 15:18:35,377 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:True
2025-04-09 15:18:35,378 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 15:18:35,383 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 15:18:35,487 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-09 15:18:35,684 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 15:18:35,698 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 15:18:35,711 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 15:18:35,775 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 15:18:35,835 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 15:18:35,965 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 15:18:35,991 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 15:18:36,249 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:18:36,316 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:18:36,317 [printer.py:log_counts()] - # Extruders: 1
2025-04-09 15:18:36,317 [printer.py:log_counts()] - # Temperature devices: 1
2025-04-09 15:18:36,317 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:18:36,318 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:18:36,318 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:18:36,318 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:18:36,566 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:18:36,568 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 15:18:36,569 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:18:41,233 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 15:18:41,316 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2025-04-09 15:18:41,346 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 15:19:48,174 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 15:28:30,267 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 15:28:30,268 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-2916c9f3-dirty
2025-04-09 15:28:30,268 [functions.py:log_start()] - Python version: 3.9
2025-04-09 15:28:30,500 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 15:28:30,502 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 15:28:30,507 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 15:28:30,549 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 15:28:30,559 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 15:28:30,578 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 15:28:30,607 [config.py:log_config()] - ===== Config File =====
[menu __main more pins]
name = Alarmas
icon = notification_important
panel = pins

[menu __main more zoffset]
name = {{ gettext('Z Calibrate') }}
icon = z-farther
panel = zcalibrate
enable = false

[menu __main more led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __main more power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __main more updater]
name = {{ gettext('Update') }}
icon = refresh
panel = updater
enable = false

[menu __main more save]
name = {{ gettext('Save Config') }}
enable = false

[menu __main more notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __print notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __main more spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __main more system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false

[menu __print print_options]
name = Opciones de Impresion
icon = printer
panel = variable_panel_printing

[menu __print power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __print led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __print network]
name = {{ gettext('Network') }}
icon = network
panel = network
enable = false

[menu __print spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __print system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false
=======================
2025-04-09 15:28:30,671 [config.py:__init__()] - ====== Saved Def ======

[main]
theme = material-dark
side_macro_shortcut = False
font_size = large
confirm_estop = True
use_dpms = False
show_scroll_steppers = True
auto_open_extrude = False
move_speed_xy = 100
move_speed_z = 30
print_sort_dir = date_desc
language = es

[displayed_macros Printer]
door_closed = False
ilumination_sensor = False
door_opened_prompt = False
door_opened = False
motor_fault_prompt_m1 = False
motor_fault_prompt_m2 = False
motor_fault_prompt_m3 = False
motor_fault_prompt_m4 = False
motor_fault_prompt_m5 = False
motor_fault_prompt_m6 = False
motor_fault_prompt_m7 = False
motor_fault_prompt_m8 = False
end_print = False
set_fan_speeds = False
pause_m1 = False
pause_m2 = False
pause_m3 = False
pause_m4 = False
pause_m5 = False
test_y_20000 = False
test_y_30000 = False
test_y_40000 = False
pause_m6 = False
pause_m7 = False
pause_m8 = False
test_y_acel = False
verify_door = False
cama_magnetica_activada = False
cama_magnetica_activada_prompt = False
cama_magnetica_desactivada_prompt = False
cama_magnetica_desactivada = False
cancela_y_cierra_prompt = False
copy_end_print = False
copy_start_print = False
dual_end_print = False
no_movimiento_filamento = False
mirror_end_print = False
dual_start_print = False
pausa_fallo_xy = False
pausa_fallo_z = False
mirror_start_print = False
end_print_t1 = False
finalizar_impresion_t0 = False
reanudar_fallo_xy = False
abort_extruder_target = False
cancel_xy_fail = False
carriage_print_fan = False
confirm_hot_turn_off_prompt = False
confirm_turn_off_prompt = False
close_and_cancel_prompt = False
continue_no_cooling = False
continue_with_cooling = False
close_and_resume_prompt = False
check_clog_status = False
door_closed_prompt = False
end_change_filament = False
custom_cancel = False
end_noozle_change_prompt = False
discharged_bateries = False
end_removing_filament_prompt = False
custom_pause = False
custom_resume = False
fail_fans_printing_prompt = False
fail_fans_prompt = False
fail_fans_reset_printing_prompt = False
fail_fans_reset_prompt = False
end_change_filament_turn_off = False
fail_pump_reset_printing_prompt = False
fail_pump_reset_prompt = False
fail_pump_printing_prompt = False
get_timelapse_setup = False
fail_pump_prompt = False
fans_ok_reset_printing_prompt = False
fans_ok_reset_prompt = False
hyperlapse = False
fail_bateries = False
fail_xy_prompt = False
fail_z_prompt = False
filament_clogged_prompt = False
filament_options_prompt = False
obico_link_status = False
fail_ps1 = False
fail_ps2 = False
filament_sensors_status = False
filament_runout_prompt = False
filament_unclogged_prompt = False
fan_variable = False
noozle_size_select_t0 = False
noozle_size_select_t1 = False
reset_bomba_check = False
reset_ventiladores_check = False
resume_no_safety_control_fans = False
resume_no_safety_control_pump = False
resume_print_no_safety_control_fans = False
fail_xy_pause = False
resume_print_no_safety_control_pump = False
resume_print_yes_safety_control_fans = False
fail_z_cancel = False
resume_print_yes_safety_control_pump = False
remove_filament_prompt = False
test_stream_delay = False
filament_clogged = False
magnetic_bed_active_prompt = False
no_target_cooling_prompt = False
magnetic_bed_inactive_prompt = False
pump_ok_reset_printing_prompt = False
pump_ok_reset_prompt = False
timelapse_render = False
select_x_axis_motor = False
timelapse_take_frame = False
select_y_axis_motor = False
select_z_axis_motor = False
m106 = False
m107 = False
show_extruder_limits = False
filament_runout = False
turn_off_when_finish_prompt = False
only_motor_movement = False
magnetic_bed_activated = False
purge_filament = False
magnetic_bed_deactivated = False
procedimiento_cambio_filamento = False
procedimiento_cambio_boquilla = False
modes_variable = False
toggle_filament_sensors_prompt = False
test_x_acel = False
test_y_motores = False
test_y_velocidad_max = False
test_z_10000 = False
test_y_aceleracion = False
test_z_acel = False
resume_when_filament_fail = False
wait_and_turn_off = False
resume_xy_fail = False
unclog_filament = False
set_pause_at_layer = False
set_pause_next_layer = False
start_print = False
fail_xy__prompt = False
fail_xy_printing_prompt = False
fail_xy_homing = False
move_in_square_and_diagonals = False
adc_error_macro = False
clean_noozle_t0 = False
clean_noozle_t1 = False
home_eval_z = False
purge_in_box_t0 = False
purge_in_box_t1 = False
temperature_logger_variable = False
park_extruder = False
park_extruder1 = False

[graph Printer]
temperature_fan mcu_temperature = False

=======================
2025-04-09 15:28:30,673 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 15:28:30,886 [config.py:create_translations()] - Selected lang: es OS lang: en_US
2025-04-09 15:28:30,886 [config.py:install_language()] - Using lang es
2025-04-09 15:28:30,925 [screen.py:__init__()] - Display for xset: :0
2025-04-09 15:28:30,931 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 15:28:30,932 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 15:28:30,933 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 15:28:30,939 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 15:28:31,285 [KlippyGtk.py:__init__()] - Font size: 22.8 (large)
2025-04-09 15:28:31,582 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 15:28:31,975 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:28:31,976 [screen.py:initial_connection()] - Default printer: None
2025-04-09 15:28:32,073 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 15:28:32,074 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 15:28:32,159 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 15:28:32,246 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 15:28:32,293 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 15:28:32,294 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 15:28:32,314 [_logging.py:info()] - Websocket connected
2025-04-09 15:28:32,315 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 15:28:32,575 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 15:28:32,633 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 15:28:32,658 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 15:28:32,680 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:28:32,919 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:28:32,919 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:28:32,920 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:28:32,920 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:28:32,920 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:28:32,921 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:28:32,921 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:28:33,171 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:28:33,173 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:28:33,174 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:28:33,175 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:28:33,176 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:28:33,199 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:28:33,200 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:29:32,169 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 15:37:33,039 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 15:37:33,040 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 15:37:33,078 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:37:33,079 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 15:37:33,079 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:37:37,489 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:37:38,591 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:37:38,592 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:37:38,592 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:37:38,593 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:37:38,593 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:37:38,594 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:37:38,594 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:37:38,842 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:37:38,844 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:37:38,845 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:37:38,846 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:37:38,846 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:37:38,869 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:37:38,869 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:43:23,373 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 15:43:23,374 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 15:43:23,405 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:43:23,406 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 15:43:23,406 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:43:27,490 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:43:28,326 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:43:28,327 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:43:28,327 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:43:28,328 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:43:28,328 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:43:28,329 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:43:28,329 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:43:28,578 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:43:28,580 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:43:28,581 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:43:28,581 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:43:28,582 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:43:28,605 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:43:28,606 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:43:33,288 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 15:43:33,289 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 15:43:33,330 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:43:33,331 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 15:43:33,332 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:43:37,490 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:43:38,241 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:43:38,242 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:43:38,242 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:43:38,243 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:43:38,243 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:43:38,244 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:43:38,244 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:43:38,493 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:43:38,495 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:43:38,495 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:43:38,496 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:43:38,496 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:43:38,519 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:43:38,519 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:44:45,966 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 15:44:45,967 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 15:44:45,990 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:44:45,991 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 15:44:45,991 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:44:50,488 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:44:51,160 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:44:51,161 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:44:51,161 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:44:51,162 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:44:51,162 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:44:51,163 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:44:51,163 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:44:51,411 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:44:51,413 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:44:51,414 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:44:51,414 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:44:51,415 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:44:51,436 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:44:51,437 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:44:55,082 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 15:44:55,083 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 15:44:55,125 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:44:55,126 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 15:44:55,127 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:44:59,490 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:45:00,008 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:45:00,009 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:45:00,010 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:45:00,010 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:45:00,010 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:45:00,011 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:45:00,011 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:45:00,260 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:45:00,262 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:45:00,263 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:45:00,263 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:45:00,264 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:45:00,286 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:45:00,286 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:45:07,353 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 15:45:07,354 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 15:45:07,390 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:45:07,391 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 15:45:07,391 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:45:11,489 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:45:12,272 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:45:12,273 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:45:12,273 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:45:12,274 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:45:12,274 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:45:12,274 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:45:12,275 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:45:12,522 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:45:12,524 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:45:12,524 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:45:12,525 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:45:12,526 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:45:12,548 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:45:12,549 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:45:48,999 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 15:45:49,000 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-2916c9f3-dirty
2025-04-09 15:45:49,001 [functions.py:log_start()] - Python version: 3.9
2025-04-09 15:45:49,277 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 15:45:49,279 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 15:45:49,285 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 15:45:49,323 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 15:45:49,334 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 15:45:49,352 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 15:45:49,377 [config.py:log_config()] - ===== Config File =====
[menu __main more pins]
name = Alarmas
icon = notification_important
panel = pins

[menu __main more zoffset]
name = {{ gettext('Z Calibrate') }}
icon = z-farther
panel = zcalibrate
enable = false

[menu __main more led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __main more power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __main more updater]
name = {{ gettext('Update') }}
icon = refresh
panel = updater
enable = false

[menu __main more save]
name = {{ gettext('Save Config') }}
enable = false

[menu __main more notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __print notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __main more spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __main more system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false

[menu __print print_options]
name = Opciones de Impresion
icon = printer
panel = variable_panel_printing

[menu __print power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __print led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __print network]
name = {{ gettext('Network') }}
icon = network
panel = network
enable = false

[menu __print spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __print system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false
=======================
2025-04-09 15:45:49,423 [config.py:__init__()] - ====== Saved Def ======

[main]
theme = material-dark
side_macro_shortcut = False
font_size = large
confirm_estop = True
use_dpms = False
show_scroll_steppers = True
auto_open_extrude = False
move_speed_xy = 100
move_speed_z = 30
print_sort_dir = date_desc
language = es

[displayed_macros Printer]
door_closed = False
ilumination_sensor = False
door_opened_prompt = False
door_opened = False
motor_fault_prompt_m1 = False
motor_fault_prompt_m2 = False
motor_fault_prompt_m3 = False
motor_fault_prompt_m4 = False
motor_fault_prompt_m5 = False
motor_fault_prompt_m6 = False
motor_fault_prompt_m7 = False
motor_fault_prompt_m8 = False
end_print = False
set_fan_speeds = False
pause_m1 = False
pause_m2 = False
pause_m3 = False
pause_m4 = False
pause_m5 = False
test_y_20000 = False
test_y_30000 = False
test_y_40000 = False
pause_m6 = False
pause_m7 = False
pause_m8 = False
test_y_acel = False
verify_door = False
cama_magnetica_activada = False
cama_magnetica_activada_prompt = False
cama_magnetica_desactivada_prompt = False
cama_magnetica_desactivada = False
cancela_y_cierra_prompt = False
copy_end_print = False
copy_start_print = False
dual_end_print = False
no_movimiento_filamento = False
mirror_end_print = False
dual_start_print = False
pausa_fallo_xy = False
pausa_fallo_z = False
mirror_start_print = False
end_print_t1 = False
finalizar_impresion_t0 = False
reanudar_fallo_xy = False
abort_extruder_target = False
cancel_xy_fail = False
carriage_print_fan = False
confirm_hot_turn_off_prompt = False
confirm_turn_off_prompt = False
close_and_cancel_prompt = False
continue_no_cooling = False
continue_with_cooling = False
close_and_resume_prompt = False
check_clog_status = False
door_closed_prompt = False
end_change_filament = False
custom_cancel = False
end_noozle_change_prompt = False
discharged_bateries = False
end_removing_filament_prompt = False
custom_pause = False
custom_resume = False
fail_fans_printing_prompt = False
fail_fans_prompt = False
fail_fans_reset_printing_prompt = False
fail_fans_reset_prompt = False
end_change_filament_turn_off = False
fail_pump_reset_printing_prompt = False
fail_pump_reset_prompt = False
fail_pump_printing_prompt = False
get_timelapse_setup = False
fail_pump_prompt = False
fans_ok_reset_printing_prompt = False
fans_ok_reset_prompt = False
hyperlapse = False
fail_bateries = False
fail_xy_prompt = False
fail_z_prompt = False
filament_clogged_prompt = False
filament_options_prompt = False
obico_link_status = False
fail_ps1 = False
fail_ps2 = False
filament_sensors_status = False
filament_runout_prompt = False
filament_unclogged_prompt = False
fan_variable = False
noozle_size_select_t0 = False
noozle_size_select_t1 = False
reset_bomba_check = False
reset_ventiladores_check = False
resume_no_safety_control_fans = False
resume_no_safety_control_pump = False
resume_print_no_safety_control_fans = False
fail_xy_pause = False
resume_print_no_safety_control_pump = False
resume_print_yes_safety_control_fans = False
fail_z_cancel = False
resume_print_yes_safety_control_pump = False
remove_filament_prompt = False
test_stream_delay = False
filament_clogged = False
magnetic_bed_active_prompt = False
no_target_cooling_prompt = False
magnetic_bed_inactive_prompt = False
pump_ok_reset_printing_prompt = False
pump_ok_reset_prompt = False
timelapse_render = False
select_x_axis_motor = False
timelapse_take_frame = False
select_y_axis_motor = False
select_z_axis_motor = False
m106 = False
m107 = False
show_extruder_limits = False
filament_runout = False
turn_off_when_finish_prompt = False
only_motor_movement = False
magnetic_bed_activated = False
purge_filament = False
magnetic_bed_deactivated = False
procedimiento_cambio_filamento = False
procedimiento_cambio_boquilla = False
modes_variable = False
toggle_filament_sensors_prompt = False
test_x_acel = False
test_y_motores = False
test_y_velocidad_max = False
test_z_10000 = False
test_y_aceleracion = False
test_z_acel = False
resume_when_filament_fail = False
wait_and_turn_off = False
resume_xy_fail = False
unclog_filament = False
set_pause_at_layer = False
set_pause_next_layer = False
start_print = False
fail_xy__prompt = False
fail_xy_printing_prompt = False
fail_xy_homing = False
move_in_square_and_diagonals = False
adc_error_macro = False
clean_noozle_t0 = False
clean_noozle_t1 = False
home_eval_z = False
purge_in_box_t0 = False
purge_in_box_t1 = False
temperature_logger_variable = False
park_extruder = False
park_extruder1 = False

[graph Printer]
temperature_fan mcu_temperature = False

=======================
2025-04-09 15:45:49,425 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 15:45:49,667 [config.py:create_translations()] - Selected lang: es OS lang: en_US
2025-04-09 15:45:49,668 [config.py:install_language()] - Using lang es
2025-04-09 15:45:49,709 [screen.py:__init__()] - Display for xset: :0
2025-04-09 15:45:49,717 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 15:45:49,717 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 15:45:49,722 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 15:45:49,730 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 15:45:50,064 [KlippyGtk.py:__init__()] - Font size: 22.8 (large)
2025-04-09 15:45:50,376 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 15:45:50,778 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:45:50,780 [screen.py:initial_connection()] - Default printer: None
2025-04-09 15:45:50,886 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 15:45:50,887 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 15:45:50,977 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 15:45:51,063 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 15:45:51,134 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 15:45:51,135 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 15:45:51,163 [_logging.py:info()] - Websocket connected
2025-04-09 15:45:51,164 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 15:45:51,501 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 15:45:51,570 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 15:45:51,604 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 15:45:51,627 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:45:51,660 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-09 15:45:56,169 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:45:56,393 [printer.py:log_counts()] - Klipper version: v0.12.0-125-gbfb71bc2d-dirty
2025-04-09 15:45:56,394 [printer.py:log_counts()] - # Extruders: 0
2025-04-09 15:45:56,395 [printer.py:log_counts()] - # Temperature devices: 0
2025-04-09 15:45:56,395 [printer.py:log_counts()] - # Fans: 0
2025-04-09 15:45:56,395 [printer.py:log_counts()] - # Output pins: 0
2025-04-09 15:45:56,396 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 15:45:56,396 [printer.py:log_counts()] - # Leds: 0
2025-04-09 15:45:56,645 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 15:45:56,647 [files.py:set_gcodes_path()] - Gcodes path: None
2025-04-09 15:45:56,648 [screen.py:init_klipper()] - Printer initialized
2025-04-09 15:45:56,649 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 15:45:56,650 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 15:45:56,682 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:45:56,682 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:46:51,145 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 15:47:29,263 [KlippyGtk.py:Dialog()] - Showing dialog Actualizando (width=1024, height=600)
2025-04-09 15:47:48,923 [base_panel.py:process_update()] - Update complete
2025-04-09 15:47:48,926 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 15:47:48,927 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 15:47:49,080 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 15:47:49,081 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 15:47:49,081 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 15:47:53,464 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:47:56,461 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:47:59,460 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:48:02,462 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:48:05,468 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 15:48:08,508 [screen.py:init_klipper()] - Stopping Retries
2025-04-09 15:48:18,915 [base_panel.py:process_update()] - Update complete
2025-04-09 16:04:55,230 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 16:04:55,231 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-2916c9f3-dirty
2025-04-09 16:04:55,232 [functions.py:log_start()] - Python version: 3.9
2025-04-09 16:04:55,463 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 16:04:55,465 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 16:04:55,473 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 16:04:55,513 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 16:04:55,523 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 16:04:55,539 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 16:04:55,568 [config.py:log_config()] - ===== Config File =====
[menu __main more pins]
name = Alarmas
icon = notification_important
panel = pins

[menu __main more zoffset]
name = {{ gettext('Z Calibrate') }}
icon = z-farther
panel = zcalibrate
enable = false

[menu __main more led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __main more power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __main more updater]
name = {{ gettext('Update') }}
icon = refresh
panel = updater
enable = false

[menu __main more save]
name = {{ gettext('Save Config') }}
enable = false

[menu __main more notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __print notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __main more spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __main more system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false

[menu __print print_options]
name = Opciones de Impresion
icon = printer
panel = variable_panel_printing

[menu __print power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __print led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __print network]
name = {{ gettext('Network') }}
icon = network
panel = network
enable = false

[menu __print spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __print system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false
=======================
2025-04-09 16:04:55,603 [config.py:__init__()] - ====== Saved Def ======

[main]
theme = material-dark
side_macro_shortcut = False
font_size = large
confirm_estop = True
use_dpms = False
show_scroll_steppers = True
auto_open_extrude = False
move_speed_xy = 100
move_speed_z = 30
print_sort_dir = date_desc
language = es

[displayed_macros Printer]
door_closed = False
ilumination_sensor = False
door_opened_prompt = False
door_opened = False
motor_fault_prompt_m1 = False
motor_fault_prompt_m2 = False
motor_fault_prompt_m3 = False
motor_fault_prompt_m4 = False
motor_fault_prompt_m5 = False
motor_fault_prompt_m6 = False
motor_fault_prompt_m7 = False
motor_fault_prompt_m8 = False
end_print = False
set_fan_speeds = False
pause_m1 = False
pause_m2 = False
pause_m3 = False
pause_m4 = False
pause_m5 = False
test_y_20000 = False
test_y_30000 = False
test_y_40000 = False
pause_m6 = False
pause_m7 = False
pause_m8 = False
test_y_acel = False
verify_door = False
cama_magnetica_activada = False
cama_magnetica_activada_prompt = False
cama_magnetica_desactivada_prompt = False
cama_magnetica_desactivada = False
cancela_y_cierra_prompt = False
copy_end_print = False
copy_start_print = False
dual_end_print = False
no_movimiento_filamento = False
mirror_end_print = False
dual_start_print = False
pausa_fallo_xy = False
pausa_fallo_z = False
mirror_start_print = False
end_print_t1 = False
finalizar_impresion_t0 = False
reanudar_fallo_xy = False
abort_extruder_target = False
cancel_xy_fail = False
carriage_print_fan = False
confirm_hot_turn_off_prompt = False
confirm_turn_off_prompt = False
close_and_cancel_prompt = False
continue_no_cooling = False
continue_with_cooling = False
close_and_resume_prompt = False
check_clog_status = False
door_closed_prompt = False
end_change_filament = False
custom_cancel = False
end_noozle_change_prompt = False
discharged_bateries = False
end_removing_filament_prompt = False
custom_pause = False
custom_resume = False
fail_fans_printing_prompt = False
fail_fans_prompt = False
fail_fans_reset_printing_prompt = False
fail_fans_reset_prompt = False
end_change_filament_turn_off = False
fail_pump_reset_printing_prompt = False
fail_pump_reset_prompt = False
fail_pump_printing_prompt = False
get_timelapse_setup = False
fail_pump_prompt = False
fans_ok_reset_printing_prompt = False
fans_ok_reset_prompt = False
hyperlapse = False
fail_bateries = False
fail_xy_prompt = False
fail_z_prompt = False
filament_clogged_prompt = False
filament_options_prompt = False
obico_link_status = False
fail_ps1 = False
fail_ps2 = False
filament_sensors_status = False
filament_runout_prompt = False
filament_unclogged_prompt = False
fan_variable = False
noozle_size_select_t0 = False
noozle_size_select_t1 = False
reset_bomba_check = False
reset_ventiladores_check = False
resume_no_safety_control_fans = False
resume_no_safety_control_pump = False
resume_print_no_safety_control_fans = False
fail_xy_pause = False
resume_print_no_safety_control_pump = False
resume_print_yes_safety_control_fans = False
fail_z_cancel = False
resume_print_yes_safety_control_pump = False
remove_filament_prompt = False
test_stream_delay = False
filament_clogged = False
magnetic_bed_active_prompt = False
no_target_cooling_prompt = False
magnetic_bed_inactive_prompt = False
pump_ok_reset_printing_prompt = False
pump_ok_reset_prompt = False
timelapse_render = False
select_x_axis_motor = False
timelapse_take_frame = False
select_y_axis_motor = False
select_z_axis_motor = False
m106 = False
m107 = False
show_extruder_limits = False
filament_runout = False
turn_off_when_finish_prompt = False
only_motor_movement = False
magnetic_bed_activated = False
purge_filament = False
magnetic_bed_deactivated = False
procedimiento_cambio_filamento = False
procedimiento_cambio_boquilla = False
modes_variable = False
toggle_filament_sensors_prompt = False
test_x_acel = False
test_y_motores = False
test_y_velocidad_max = False
test_z_10000 = False
test_y_aceleracion = False
test_z_acel = False
resume_when_filament_fail = False
wait_and_turn_off = False
resume_xy_fail = False
unclog_filament = False
set_pause_at_layer = False
set_pause_next_layer = False
start_print = False
fail_xy__prompt = False
fail_xy_printing_prompt = False
fail_xy_homing = False
move_in_square_and_diagonals = False
adc_error_macro = False
clean_noozle_t0 = False
clean_noozle_t1 = False
home_eval_z = False
purge_in_box_t0 = False
purge_in_box_t1 = False
temperature_logger_variable = False
park_extruder = False
park_extruder1 = False

[graph Printer]
temperature_fan mcu_temperature = False

=======================
2025-04-09 16:04:55,614 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 16:04:55,843 [config.py:create_translations()] - Selected lang: es OS lang: en_US
2025-04-09 16:04:55,844 [config.py:install_language()] - Using lang es
2025-04-09 16:04:55,883 [screen.py:__init__()] - Display for xset: :0
2025-04-09 16:04:55,889 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 16:04:55,889 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 16:04:55,893 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 16:04:55,900 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 16:04:56,218 [KlippyGtk.py:__init__()] - Font size: 22.8 (large)
2025-04-09 16:04:56,522 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 16:04:56,947 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 16:04:56,948 [screen.py:initial_connection()] - Default printer: None
2025-04-09 16:04:57,066 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 16:04:57,067 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 16:04:57,159 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 16:04:57,247 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 16:04:57,307 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 16:04:57,308 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 16:04:57,333 [_logging.py:info()] - Websocket connected
2025-04-09 16:04:57,334 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 16:04:57,674 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 16:04:57,738 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 16:04:57,768 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 16:04:57,791 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 16:04:57,825 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2025-04-09 16:05:02,176 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 16:05:02,297 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 16:05:02,298 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 16:05:02,298 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 16:05:02,299 [printer.py:log_counts()] - # Fans: 2
2025-04-09 16:05:02,299 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 16:05:02,299 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 16:05:02,299 [printer.py:log_counts()] - # Leds: 0
2025-04-09 16:05:02,553 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 16:05:02,555 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 16:05:02,556 [screen.py:init_klipper()] - Printer initialized
2025-04-09 16:05:02,558 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 16:05:02,558 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 16:05:02,588 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 16:05:02,588 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 16:05:57,158 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 16:04:54,507 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2025-04-09 16:04:54,508 [functions.py:log_start()] - KlipperScreen Version: v0.4.5-57-2916c9f3-dirty
2025-04-09 16:04:54,509 [functions.py:log_start()] - Python version: 3.9
2025-04-09 16:04:54,738 [config.py:get_config_file_location()] - Passed config (-c): .
2025-04-09 16:04:54,741 [config.py:__init__()] - Config path location: /home/biqu/printer_data/config/KlipperScreen.conf
2025-04-09 16:04:54,750 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/main_menu.conf']
2025-04-09 16:04:54,800 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/splash_menu.conf']
2025-04-09 16:04:54,810 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/print_menu.conf']
2025-04-09 16:04:54,826 [config.py:_include_config()] - Parsing files: ['/home/biqu/KlipperScreen/config/move_menu.conf']
2025-04-09 16:04:54,864 [config.py:log_config()] - ===== Config File =====
[menu __main more pins]
name = Alarmas
icon = notification_important
panel = pins

[menu __main more zoffset]
name = {{ gettext('Z Calibrate') }}
icon = z-farther
panel = zcalibrate
enable = false

[menu __main more led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __main more power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __main more updater]
name = {{ gettext('Update') }}
icon = refresh
panel = updater
enable = false

[menu __main more save]
name = {{ gettext('Save Config') }}
enable = false

[menu __main more notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __print notifications]
name = {{ gettext('Notifications') }}
icon = notifications
panel = notifications
enable = false

[menu __main more spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __main more system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false

[menu __print print_options]
name = Opciones de Impresion
icon = printer
panel = variable_panel_printing

[menu __print power]
name = {{ gettext('Power') }}
icon = shutdown
panel = power
enable = false

[menu __print led]
name = {{ gettext('Leds') }}
icon = light
panel = led
enable = false

[menu __print network]
name = {{ gettext('Network') }}
icon = network
panel = network
enable = false

[menu __print spoolman]
name = Spoolman
icon = spoolman
panel = spoolman
enable = false

[menu __print system]
name = {{ gettext('System') }}
icon = info
panel = system
enable = false
=======================
2025-04-09 16:04:54,903 [config.py:__init__()] - ====== Saved Def ======

[main]
theme = material-dark
side_macro_shortcut = False
font_size = large
confirm_estop = True
use_dpms = False
show_scroll_steppers = True
auto_open_extrude = False
move_speed_xy = 100
move_speed_z = 30
print_sort_dir = date_desc
language = es

[displayed_macros Printer]
door_closed = False
ilumination_sensor = False
door_opened_prompt = False
door_opened = False
motor_fault_prompt_m1 = False
motor_fault_prompt_m2 = False
motor_fault_prompt_m3 = False
motor_fault_prompt_m4 = False
motor_fault_prompt_m5 = False
motor_fault_prompt_m6 = False
motor_fault_prompt_m7 = False
motor_fault_prompt_m8 = False
end_print = False
set_fan_speeds = False
pause_m1 = False
pause_m2 = False
pause_m3 = False
pause_m4 = False
pause_m5 = False
test_y_20000 = False
test_y_30000 = False
test_y_40000 = False
pause_m6 = False
pause_m7 = False
pause_m8 = False
test_y_acel = False
verify_door = False
cama_magnetica_activada = False
cama_magnetica_activada_prompt = False
cama_magnetica_desactivada_prompt = False
cama_magnetica_desactivada = False
cancela_y_cierra_prompt = False
copy_end_print = False
copy_start_print = False
dual_end_print = False
no_movimiento_filamento = False
mirror_end_print = False
dual_start_print = False
pausa_fallo_xy = False
pausa_fallo_z = False
mirror_start_print = False
end_print_t1 = False
finalizar_impresion_t0 = False
reanudar_fallo_xy = False
abort_extruder_target = False
cancel_xy_fail = False
carriage_print_fan = False
confirm_hot_turn_off_prompt = False
confirm_turn_off_prompt = False
close_and_cancel_prompt = False
continue_no_cooling = False
continue_with_cooling = False
close_and_resume_prompt = False
check_clog_status = False
door_closed_prompt = False
end_change_filament = False
custom_cancel = False
end_noozle_change_prompt = False
discharged_bateries = False
end_removing_filament_prompt = False
custom_pause = False
custom_resume = False
fail_fans_printing_prompt = False
fail_fans_prompt = False
fail_fans_reset_printing_prompt = False
fail_fans_reset_prompt = False
end_change_filament_turn_off = False
fail_pump_reset_printing_prompt = False
fail_pump_reset_prompt = False
fail_pump_printing_prompt = False
get_timelapse_setup = False
fail_pump_prompt = False
fans_ok_reset_printing_prompt = False
fans_ok_reset_prompt = False
hyperlapse = False
fail_bateries = False
fail_xy_prompt = False
fail_z_prompt = False
filament_clogged_prompt = False
filament_options_prompt = False
obico_link_status = False
fail_ps1 = False
fail_ps2 = False
filament_sensors_status = False
filament_runout_prompt = False
filament_unclogged_prompt = False
fan_variable = False
noozle_size_select_t0 = False
noozle_size_select_t1 = False
reset_bomba_check = False
reset_ventiladores_check = False
resume_no_safety_control_fans = False
resume_no_safety_control_pump = False
resume_print_no_safety_control_fans = False
fail_xy_pause = False
resume_print_no_safety_control_pump = False
resume_print_yes_safety_control_fans = False
fail_z_cancel = False
resume_print_yes_safety_control_pump = False
remove_filament_prompt = False
test_stream_delay = False
filament_clogged = False
magnetic_bed_active_prompt = False
no_target_cooling_prompt = False
magnetic_bed_inactive_prompt = False
pump_ok_reset_printing_prompt = False
pump_ok_reset_prompt = False
timelapse_render = False
select_x_axis_motor = False
timelapse_take_frame = False
select_y_axis_motor = False
select_z_axis_motor = False
m106 = False
m107 = False
show_extruder_limits = False
filament_runout = False
turn_off_when_finish_prompt = False
only_motor_movement = False
magnetic_bed_activated = False
purge_filament = False
magnetic_bed_deactivated = False
procedimiento_cambio_filamento = False
procedimiento_cambio_boquilla = False
modes_variable = False
toggle_filament_sensors_prompt = False
test_x_acel = False
test_y_motores = False
test_y_velocidad_max = False
test_z_10000 = False
test_y_aceleracion = False
test_z_acel = False
resume_when_filament_fail = False
wait_and_turn_off = False
resume_xy_fail = False
unclog_filament = False
set_pause_at_layer = False
set_pause_next_layer = False
start_print = False
fail_xy__prompt = False
fail_xy_printing_prompt = False
fail_xy_homing = False
move_in_square_and_diagonals = False
adc_error_macro = False
clean_noozle_t0 = False
clean_noozle_t1 = False
home_eval_z = False
purge_in_box_t0 = False
purge_in_box_t1 = False
temperature_logger_variable = False
park_extruder = False
park_extruder1 = False

[graph Printer]
temperature_fan mcu_temperature = False

=======================
2025-04-09 16:04:54,905 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_path": "",
      "moonraker_ssl": null,
      "moonraker_api_key": ""
    }
  }
]
2025-04-09 16:04:55,131 [config.py:create_translations()] - Selected lang: es OS lang: en_US
2025-04-09 16:04:55,131 [config.py:install_language()] - Using lang es
2025-04-09 16:04:55,170 [screen.py:__init__()] - Display for xset: :0
2025-04-09 16:04:55,174 [screen.py:__init__()] - Screen 0: 1024x600
2025-04-09 16:04:55,175 [screen.py:__init__()] - Monitors: 1 using number: 0
2025-04-09 16:04:55,177 [screen.py:__init__()] - Wayland: False Display name: :0
2025-04-09 16:04:55,183 [screen.py:__init__()] - Screen resolution: 1024x600
2025-04-09 16:04:55,495 [KlippyGtk.py:__init__()] - Font size: 22.8 (large)
2025-04-09 16:04:55,807 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 16:04:56,238 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 16:04:56,239 [screen.py:initial_connection()] - Default printer: None
2025-04-09 16:04:56,344 [screen.py:connect_printer()] - Connecting to printer: Printer
2025-04-09 16:04:56,345 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 16:04:56,427 [screen.py:_load_panel()] - Loading panel: splash_screen
2025-04-09 16:04:56,500 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 16:04:56,559 [KlippyWebsocket.py:connect()] - Attempting to connect
2025-04-09 16:04:56,560 [KlippyWebsocket.py:connect()] - Starting websocket thread
2025-04-09 16:04:56,583 [_logging.py:info()] - Websocket connected
2025-04-09 16:04:56,584 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2025-04-09 16:04:56,865 [screen.py:websocket_connected()] - ### websocket_connected
2025-04-09 16:04:56,920 [KlippyWebsocket.py:identify_client()] - Sending server.connection.identify
2025-04-09 16:04:56,944 [printer.py:configure_cameras()] - Cameras: []
2025-04-09 16:04:56,964 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 16:04:57,144 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 16:04:57,145 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 16:04:57,145 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 16:04:57,146 [printer.py:log_counts()] - # Fans: 2
2025-04-09 16:04:57,146 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 16:04:57,146 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 16:04:57,146 [printer.py:log_counts()] - # Leds: 0
2025-04-09 16:04:57,397 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 16:04:57,399 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 16:04:57,400 [screen.py:init_klipper()] - Printer initialized
2025-04-09 16:04:57,401 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 16:04:57,402 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 16:04:57,426 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 16:04:57,427 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 16:05:55,927 [base_panel.py:battery_percentage()] - Battery information not available.
2025-04-09 19:46:50,250 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 19:46:50,250 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 19:46:50,273 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:46:50,274 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 19:46:50,274 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:46:54,782 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 19:46:54,853 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 19:46:54,853 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 19:46:54,853 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 19:46:54,854 [printer.py:log_counts()] - # Fans: 2
2025-04-09 19:46:54,854 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 19:46:54,854 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 19:46:54,854 [printer.py:log_counts()] - # Leds: 0
2025-04-09 19:46:55,105 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 19:46:55,107 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 19:46:55,108 [screen.py:init_klipper()] - Printer initialized
2025-04-09 19:46:55,109 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 19:46:55,110 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 19:46:55,132 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:46:55,132 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:47:02,566 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 19:47:02,567 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 19:47:02,590 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:47:02,590 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 19:47:02,591 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:47:06,782 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 19:47:06,913 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 19:47:06,914 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 19:47:06,915 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 19:47:06,915 [printer.py:log_counts()] - # Fans: 2
2025-04-09 19:47:06,915 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 19:47:06,916 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 19:47:06,916 [printer.py:log_counts()] - # Leds: 0
2025-04-09 19:47:07,158 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 19:47:07,161 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 19:47:07,161 [screen.py:init_klipper()] - Printer initialized
2025-04-09 19:47:07,162 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2025-04-09 19:47:07,163 [printer.py:change_state()] - Adding callback for state: error
2025-04-09 19:47:07,185 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:47:07,185 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:47:22,311 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2025-04-09 19:47:22,312 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 19:47:22,337 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:47:22,337 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 19:47:22,338 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:47:26,783 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 19:47:28,497 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 19:47:28,498 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 19:47:28,498 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 19:47:28,498 [printer.py:log_counts()] - # Fans: 2
2025-04-09 19:47:28,498 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 19:47:28,498 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 19:47:28,499 [printer.py:log_counts()] - # Leds: 0
2025-04-09 19:47:28,749 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 19:47:28,751 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 19:47:28,752 [screen.py:init_klipper()] - Printer initialized
2025-04-09 19:47:28,754 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 19:47:28,754 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 19:47:28,778 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:47:31,282 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 19:47:31,283 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 19:47:31,304 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:47:31,304 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 19:47:31,308 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:47:31,392 [screen.py:_load_panel()] - Loading panel: main_menu
2025-04-09 19:47:31,625 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 19:47:31,692 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 19:47:31,692 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 19:47:31,702 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 19:47:31,703 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 19:47:31,712 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 19:47:31,713 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 19:47:31,722 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 19:47:31,731 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 19:47:31,740 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 19:47:31,748 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 19:47:31,757 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 19:47:31,766 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 19:47:31,778 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 19:47:31,778 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:47:31,779 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 19:47:31,780 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:47:31,826 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 19:47:31,870 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 19:47:31,892 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-04-09 19:47:31,979 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 19:47:31,997 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-04-09 19:47:32,119 [screen.py:show_popup_message()] - error: COMBINED SENSOR temperature -94.5 below minimum temperature of -10.0.
2025-04-09 19:47:32,195 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 19:47:32,212 [screen.py:init_tempstore()] - Tempstore not ready: {} Retrying in 5 seconds
2025-04-09 19:47:32,330 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-09 19:47:32,330 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-09 19:47:32,339 [heatergraph.py:draw_graph()] - Tempstore not initialized!
2025-04-09 19:47:32,415 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 19:47:32,438 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 19:47:33,293 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:47:33,294 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:47:33,380 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 19:47:33,440 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 19:48:59,217 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-09 19:48:59,218 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 19:48:59,240 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:48:59,241 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 19:48:59,241 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:49:03,783 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 19:49:04,419 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 19:49:04,419 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 19:49:04,420 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 19:49:04,420 [printer.py:log_counts()] - # Fans: 2
2025-04-09 19:49:04,420 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 19:49:04,420 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 19:49:04,420 [printer.py:log_counts()] - # Leds: 0
2025-04-09 19:49:04,671 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 19:49:04,673 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 19:49:04,674 [screen.py:init_klipper()] - Printer initialized
2025-04-09 19:49:04,676 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 19:49:04,676 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 19:49:04,704 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:49:07,018 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 19:49:07,019 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 19:49:07,041 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:49:07,041 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 19:49:07,044 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:49:07,128 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 19:49:07,434 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 19:49:07,500 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 19:49:07,500 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 19:49:07,510 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 19:49:07,510 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 19:49:07,521 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 19:49:07,521 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 19:49:07,533 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 19:49:07,544 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 19:49:07,554 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 19:49:07,564 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 19:49:07,581 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 19:49:07,594 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 19:49:07,604 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 19:49:07,605 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:49:07,605 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 19:49:07,605 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:49:07,642 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 19:49:07,688 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 19:49:07,773 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 19:49:07,810 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 19:49:08,087 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-09 19:49:08,088 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-09 19:49:08,127 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:49:08,128 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:49:08,215 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 19:49:08,278 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 19:50:55,143 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2025-04-09 19:50:55,257 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-09 19:50:55,258 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 19:50:55,280 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:50:55,280 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 19:50:55,280 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:50:59,783 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 19:51:00,457 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 19:51:00,457 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 19:51:00,458 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 19:51:00,458 [printer.py:log_counts()] - # Fans: 2
2025-04-09 19:51:00,458 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 19:51:00,458 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 19:51:00,458 [printer.py:log_counts()] - # Leds: 0
2025-04-09 19:51:00,702 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 19:51:00,704 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 19:51:00,705 [screen.py:init_klipper()] - Printer initialized
2025-04-09 19:51:00,707 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 19:51:00,707 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 19:51:00,736 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:51:03,060 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 19:51:03,061 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 19:51:03,083 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:51:03,083 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 19:51:03,087 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:51:03,170 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 19:51:03,412 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 19:51:03,508 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 19:51:03,509 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 19:51:03,518 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 19:51:03,519 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 19:51:03,528 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 19:51:03,528 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 19:51:03,537 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 19:51:03,546 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 19:51:03,555 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 19:51:03,564 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 19:51:03,573 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 19:51:03,582 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 19:51:03,591 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 19:51:03,591 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:51:03,592 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 19:51:03,592 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:51:03,624 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 19:51:03,670 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 19:51:03,771 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 19:51:03,819 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 19:51:04,286 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2025-04-09 19:51:04,287 [printer.py:change_state()] - Adding callback for state: shutdown
2025-04-09 19:51:04,692 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:51:04,693 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:51:04,778 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 19:51:04,838 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 19:52:00,895 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2025-04-09 19:52:00,997 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2025-04-09 19:52:00,997 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 19:52:01,016 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:52:01,017 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 19:52:01,017 [screen.py:show_panel()] - Panel is already is in view
2025-04-09 19:52:05,783 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 19:52:06,196 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 19:52:06,197 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 19:52:06,197 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 19:52:06,197 [printer.py:log_counts()] - # Fans: 2
2025-04-09 19:52:06,197 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 19:52:06,198 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 19:52:06,198 [printer.py:log_counts()] - # Leds: 0
2025-04-09 19:52:06,449 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 19:52:06,451 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 19:52:06,452 [screen.py:init_klipper()] - Printer initialized
2025-04-09 19:52:06,454 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 19:52:06,454 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 19:52:06,489 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:52:08,952 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 19:52:08,953 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 19:52:08,994 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:52:08,995 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 19:52:09,001 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:52:09,119 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 19:52:09,326 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 19:52:09,395 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 19:52:09,396 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 19:52:09,406 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 19:52:09,407 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 19:52:09,417 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 19:52:09,417 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 19:52:09,429 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 19:52:09,439 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 19:52:09,450 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 19:52:09,463 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 19:52:09,474 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 19:52:09,485 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 19:52:09,495 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 19:52:09,495 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:52:09,496 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 19:52:09,496 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:52:09,554 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 19:52:09,607 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 19:52:09,698 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 19:52:09,747 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 19:52:21,644 [screen.py:_load_panel()] - Loading panel: move
2025-04-09 19:52:21,802 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 19:52:24,700 [screen.py:_load_panel()] - Loading panel: menu
2025-04-09 19:52:24,937 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 19:52:25,023 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 19:52:26,735 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 19:52:37,947 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 19:52:59,937 [screen.py:show_popup_message()] - error: No trigger on y after full movement
2025-04-09 19:53:00,019 [prompts.py:decode()] - prompt_begin Falla de Motor Detectada en Carro XY
2025-04-09 19:53:00,020 [prompts.py:decode()] - prompt_text Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes
2025-04-09 19:53:00,021 [prompts.py:decode()] - prompt_footer_button Reset Alarma|RESETEAR_ALARMA_MOTORES|primary
2025-04-09 19:53:00,023 [prompts.py:decode()] - prompt_footer_button HOMING XY|FAIL_XY_AND_HOME|primary
2025-04-09 19:53:00,024 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 19:53:00,025 [prompts.py:decode()] - prompt_show
2025-04-09 19:53:00,025 [prompts.py:show()] - Prompt  Falla de Motor Detectada en Carro XY Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes [{'name': 'Reset Alarma', 'response': 1, 'gcode': 'RESETEAR_ALARMA_MOTORES', 'style': 'dialog-primary'}, {'name': 'HOMING XY', 'response': 2, 'gcode': 'FAIL_XY_AND_HOME', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 3, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 19:53:00,097 [KlippyGtk.py:Dialog()] - Showing dialog  Falla de Motor Detectada en Carro XY (width=1024, height=600)
2025-04-09 19:53:03,225 [prompts.py:decode()] - prompt_end
2025-04-09 19:53:03,236 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 19:54:23,429 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 19:54:23,430 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 19:54:23,463 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:54:23,464 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 19:54:23,465 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:54:23,581 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 19:54:23,656 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 19:54:27,784 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 19:54:28,752 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 19:54:28,752 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 19:54:28,752 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 19:54:28,753 [printer.py:log_counts()] - # Fans: 2
2025-04-09 19:54:28,753 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 19:54:28,753 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 19:54:28,753 [printer.py:log_counts()] - # Leds: 0
2025-04-09 19:54:28,992 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 19:54:28,994 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 19:54:28,995 [screen.py:init_klipper()] - Printer initialized
2025-04-09 19:54:28,997 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 19:54:28,998 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 19:54:29,035 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:54:31,358 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 19:54:31,359 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 19:54:31,383 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 19:54:31,383 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 19:54:31,386 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 19:54:31,470 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 19:54:31,686 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 19:54:31,814 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 19:54:31,815 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 19:54:31,824 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 19:54:31,825 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 19:54:31,834 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 19:54:31,834 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 19:54:31,843 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 19:54:31,852 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 19:54:31,862 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 19:54:31,874 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 19:54:31,884 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 19:54:31,894 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 19:54:31,904 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 19:54:31,905 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:54:31,905 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 19:54:31,906 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 19:54:31,951 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 19:54:32,000 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 19:54:32,095 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 19:54:32,120 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 19:54:36,746 [screen.py:show_panel()] - Reinitializing panel move
2025-04-09 19:54:36,888 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 19:54:39,315 [screen.py:show_panel()] - Reinitializing panel menu
2025-04-09 19:54:39,557 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 19:54:39,639 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 19:54:41,091 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 19:54:52,035 [screen.py:show_popup_message()] - error: No trigger on dual_carriage after full movement
2025-04-09 19:54:52,119 [prompts.py:decode()] - prompt_begin Falla de Motor Detectada en Carro XY
2025-04-09 19:54:52,120 [prompts.py:decode()] - prompt_text Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes
2025-04-09 19:54:52,121 [prompts.py:decode()] - prompt_footer_button Reset Alarma|RESETEAR_ALARMA_MOTORES|primary
2025-04-09 19:54:52,123 [prompts.py:decode()] - prompt_footer_button HOMING XY|FAIL_XY_AND_HOME|primary
2025-04-09 19:54:52,123 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 19:54:52,125 [prompts.py:decode()] - prompt_show
2025-04-09 19:54:52,125 [prompts.py:show()] - Prompt  Falla de Motor Detectada en Carro XY Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes [{'name': 'Reset Alarma', 'response': 1, 'gcode': 'RESETEAR_ALARMA_MOTORES', 'style': 'dialog-primary'}, {'name': 'HOMING XY', 'response': 2, 'gcode': 'FAIL_XY_AND_HOME', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 3, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 19:54:52,192 [KlippyGtk.py:Dialog()] - Showing dialog  Falla de Motor Detectada en Carro XY (width=1024, height=600)
2025-04-09 19:54:55,149 [screen.py:_send_action()] - printer.gcode.script: {'script': 'RESETEAR_ALARMA_MOTORES'}
2025-04-09 19:54:56,481 [screen.py:_send_action()] - printer.gcode.script: {'script': 'RESPOND TYPE=command MSG="action:prompt_end"'}
2025-04-09 19:54:56,494 [prompts.py:decode()] - prompt_end
2025-04-09 19:54:56,502 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 19:57:50,746 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 19:57:50,808 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 19:57:52,284 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 19:57:52,353 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 19:57:53,618 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 19:57:57,076 [move.py:change_distance()] - ### Distance 1
2025-04-09 19:57:58,539 [move.py:change_distance()] - ### Distance 5
2025-04-09 19:58:00,356 [move.py:change_distance()] - ### Distance 1
2025-04-09 19:58:01,066 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-1 F1800'}
2025-04-09 19:58:01,072 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:03,304 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-1 F1800'}
2025-04-09 19:58:03,309 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:04,090 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-1 F1800'}
2025-04-09 19:58:04,095 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:04,957 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-1 F1800'}
2025-04-09 19:58:04,962 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:06,282 [move.py:change_distance()] - ### Distance 5
2025-04-09 19:58:06,684 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-5 F1800'}
2025-04-09 19:58:06,689 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:08,325 [move.py:change_distance()] - ### Distance 10
2025-04-09 19:58:08,671 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:08,676 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:10,482 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:10,489 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:11,684 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:11,689 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:12,810 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:12,816 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:13,760 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:13,764 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:14,639 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:14,644 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:15,063 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:15,068 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:15,566 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:15,571 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:16,058 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:16,063 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:16,444 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:16,449 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:17,033 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-10 F1800'}
2025-04-09 19:58:17,038 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:17,505 [move.py:change_distance()] - ### Distance 25
2025-04-09 19:58:17,755 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-25 F1800'}
2025-04-09 19:58:17,762 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:20,220 [move.py:change_distance()] - ### Distance 50
2025-04-09 19:58:20,582 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 z-50 F1800'}
2025-04-09 19:58:20,588 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:25,039 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 19:58:25,117 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 19:58:26,236 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 19:58:28,631 [move.py:change_distance()] - ### Distance 5
2025-04-09 19:58:29,525 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 19:58:29,531 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:33,594 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-5 F6000'}
2025-04-09 19:58:33,601 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:34,546 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-5 F6000'}
2025-04-09 19:58:34,551 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 19:58:34,611 [screen.py:show_popup_message()] - error: Move out of range: -5.000 0.000 806.000 [0.000]
2025-04-09 20:00:19,769 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:00:19,775 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:00:19,837 [screen.py:show_popup_message()] - error: Move out of range: -50.010 0.000 806.000 [0.000]
2025-04-09 20:00:22,387 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-5 F6000'}
2025-04-09 20:00:22,392 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:00:23,945 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:00:23,951 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:00:27,084 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y+5 F6000'}
2025-04-09 20:00:27,091 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:00:27,591 [prompts.py:decode()] - prompt_begin Falla de Motor Detectada en Carro XY
2025-04-09 20:00:27,592 [prompts.py:decode()] - prompt_text Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes
2025-04-09 20:00:27,593 [prompts.py:decode()] - prompt_footer_button Reset Alarma|RESETEAR_ALARMA_MOTORES|primary
2025-04-09 20:00:27,594 [prompts.py:decode()] - prompt_footer_button HOMING XY|FAIL_XY_AND_HOME|primary
2025-04-09 20:00:27,595 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 20:00:27,597 [prompts.py:decode()] - prompt_show
2025-04-09 20:00:27,597 [prompts.py:show()] - Prompt  Falla de Motor Detectada en Carro XY Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes [{'name': 'Reset Alarma', 'response': 1, 'gcode': 'RESETEAR_ALARMA_MOTORES', 'style': 'dialog-primary'}, {'name': 'HOMING XY', 'response': 2, 'gcode': 'FAIL_XY_AND_HOME', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 3, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 20:00:27,664 [KlippyGtk.py:Dialog()] - Showing dialog  Falla de Motor Detectada en Carro XY (width=1024, height=600)
2025-04-09 20:00:31,199 [screen.py:_send_action()] - printer.gcode.script: {'script': 'RESETEAR_ALARMA_MOTORES'}
2025-04-09 20:00:33,779 [screen.py:_send_action()] - printer.gcode.script: {'script': 'RESPOND TYPE=command MSG="action:prompt_end"'}
2025-04-09 20:00:33,792 [prompts.py:decode()] - prompt_end
2025-04-09 20:00:33,800 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 20:00:48,346 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 20:00:48,453 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 20:00:49,321 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 20:00:54,272 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 20:01:16,252 [screen.py:show_popup_message()] - error: No trigger on y after full movement
2025-04-09 20:01:16,338 [prompts.py:decode()] - prompt_begin Falla de Motor Detectada en Carro XY
2025-04-09 20:01:16,340 [prompts.py:decode()] - prompt_text Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes
2025-04-09 20:01:16,341 [prompts.py:decode()] - prompt_footer_button Reset Alarma|RESETEAR_ALARMA_MOTORES|primary
2025-04-09 20:01:16,342 [prompts.py:decode()] - prompt_footer_button HOMING XY|FAIL_XY_AND_HOME|primary
2025-04-09 20:01:16,343 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 20:01:16,344 [prompts.py:decode()] - prompt_show
2025-04-09 20:01:16,344 [prompts.py:show()] - Prompt  Falla de Motor Detectada en Carro XY Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes [{'name': 'Reset Alarma', 'response': 1, 'gcode': 'RESETEAR_ALARMA_MOTORES', 'style': 'dialog-primary'}, {'name': 'HOMING XY', 'response': 2, 'gcode': 'FAIL_XY_AND_HOME', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 3, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 20:01:16,407 [KlippyGtk.py:Dialog()] - Showing dialog  Falla de Motor Detectada en Carro XY (width=1024, height=600)
2025-04-09 20:01:27,140 [prompts.py:decode()] - prompt_end
2025-04-09 20:01:27,153 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 20:01:51,603 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 20:01:51,666 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 20:01:53,843 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:01:53,849 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:54,716 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:01:54,721 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:55,303 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:01:55,309 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:55,719 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:01:55,724 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:56,067 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:01:56,072 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:56,451 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:01:56,456 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:56,817 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+5 F6000'}
2025-04-09 20:01:56,822 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:58,201 [move.py:change_distance()] - ### Distance 50
2025-04-09 20:01:58,570 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:01:58,575 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:01:59,510 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:01:59,516 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:02:00,381 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:02:00,387 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:02:01,304 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:02:01,309 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:02:02,105 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:02:02,110 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:02:02,887 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:02:02,892 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:02:08,270 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 20:02:08,399 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:02:09,874 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 20:02:10,751 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 20:02:10,825 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:02:11,885 [screen.py:_load_panel()] - Loading panel: extrude
2025-04-09 20:02:12,035 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > extrude
2025-04-09 20:02:12,747 [extrude.py:change_extruder()] - Changing extruder to extruder1
2025-04-09 20:02:12,749 [screen.py:_send_action()] - printer.gcode.script: {'script': 'T1'}
2025-04-09 20:02:13,171 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 20:02:13,241 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:02:14,131 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 20:02:14,776 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:02:14,783 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:02:14,845 [screen.py:show_popup_message()] - error: Move out of range: 1894.990 1000.000 5.000 [0.000]
2025-04-09 20:04:14,995 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 20:04:14,996 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 20:04:15,014 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:04:15,015 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 20:04:15,016 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:04:15,102 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 20:04:15,177 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 20:04:19,782 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 20:04:20,177 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 20:04:20,178 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 20:04:20,178 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 20:04:20,178 [printer.py:log_counts()] - # Fans: 2
2025-04-09 20:04:20,178 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 20:04:20,179 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 20:04:20,179 [printer.py:log_counts()] - # Leds: 0
2025-04-09 20:04:20,431 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 20:04:20,433 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 20:04:20,433 [screen.py:init_klipper()] - Printer initialized
2025-04-09 20:04:20,435 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 20:04:20,436 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 20:04:20,471 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:04:22,779 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 20:04:22,779 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 20:04:22,804 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:04:22,804 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 20:04:22,807 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:04:22,895 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 20:04:23,164 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 20:04:23,229 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 20:04:23,230 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 20:04:23,240 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 20:04:23,240 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 20:04:23,249 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 20:04:23,250 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 20:04:23,259 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 20:04:23,268 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 20:04:23,278 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 20:04:23,288 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 20:04:23,301 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 20:04:23,311 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 20:04:23,321 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 20:04:23,322 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:04:23,322 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 20:04:23,323 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:04:23,368 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 20:04:23,423 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:04:23,526 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 20:04:23,553 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 20:17:45,383 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 20:17:45,383 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 20:17:45,409 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:17:45,410 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 20:17:45,411 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:17:45,512 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 20:17:45,587 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 20:17:49,783 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 20:17:51,578 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 20:17:51,579 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 20:17:51,579 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 20:17:51,579 [printer.py:log_counts()] - # Fans: 2
2025-04-09 20:17:51,579 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 20:17:51,580 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 20:17:51,580 [printer.py:log_counts()] - # Leds: 0
2025-04-09 20:17:51,827 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 20:17:51,830 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 20:17:51,830 [screen.py:init_klipper()] - Printer initialized
2025-04-09 20:17:51,833 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 20:17:51,833 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 20:17:51,862 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:17:54,344 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 20:17:54,344 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 20:17:54,366 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:17:54,366 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 20:17:54,370 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:17:54,453 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 20:17:54,643 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 20:17:54,708 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 20:17:54,708 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 20:17:54,718 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 20:17:54,718 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 20:17:54,727 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 20:17:54,728 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 20:17:54,738 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 20:17:54,749 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 20:17:54,758 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 20:17:54,766 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 20:17:54,775 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 20:17:54,784 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 20:17:54,793 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 20:17:54,793 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:17:54,794 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 20:17:54,794 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:17:54,825 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 20:17:54,875 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:17:54,976 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 20:17:54,999 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 20:18:26,240 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 20:18:26,241 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 20:18:26,265 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:18:26,266 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 20:18:26,267 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:18:26,378 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 20:18:26,459 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 20:18:30,784 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 20:18:32,428 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 20:18:32,429 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 20:18:32,429 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 20:18:32,429 [printer.py:log_counts()] - # Fans: 2
2025-04-09 20:18:32,430 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 20:18:32,430 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 20:18:32,430 [printer.py:log_counts()] - # Leds: 0
2025-04-09 20:18:32,674 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 20:18:32,676 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 20:18:32,677 [screen.py:init_klipper()] - Printer initialized
2025-04-09 20:18:32,680 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 20:18:32,680 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 20:18:32,708 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:18:35,206 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 20:18:35,207 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 20:18:35,243 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:18:35,244 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 20:18:35,250 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:18:35,364 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 20:18:35,555 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 20:18:35,620 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 20:18:35,620 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 20:18:35,629 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 20:18:35,630 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 20:18:35,639 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 20:18:35,639 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 20:18:35,648 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 20:18:35,657 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 20:18:35,666 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 20:18:35,675 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 20:18:35,685 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 20:18:35,695 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 20:18:35,707 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 20:18:35,708 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:18:35,708 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 20:18:35,708 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:18:35,740 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 20:18:35,787 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:18:35,891 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 20:18:35,913 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 20:18:59,914 [screen.py:show_panel()] - Reinitializing panel move
2025-04-09 20:19:00,059 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 20:19:00,733 [screen.py:show_panel()] - Reinitializing panel menu
2025-04-09 20:19:00,980 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 20:19:01,063 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 20:19:07,164 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 20:19:29,132 [screen.py:show_popup_message()] - error: No trigger on y after full movement
2025-04-09 20:19:29,218 [prompts.py:decode()] - prompt_begin Falla de Motor Detectada en Carro XY
2025-04-09 20:19:29,220 [prompts.py:decode()] - prompt_text Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes
2025-04-09 20:19:29,221 [prompts.py:decode()] - prompt_footer_button Reset Alarma|RESETEAR_ALARMA_MOTORES|primary
2025-04-09 20:19:29,222 [prompts.py:decode()] - prompt_footer_button HOMING XY|FAIL_XY_AND_HOME|primary
2025-04-09 20:19:29,223 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 20:19:29,224 [prompts.py:decode()] - prompt_show
2025-04-09 20:19:29,225 [prompts.py:show()] - Prompt  Falla de Motor Detectada en Carro XY Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes [{'name': 'Reset Alarma', 'response': 1, 'gcode': 'RESETEAR_ALARMA_MOTORES', 'style': 'dialog-primary'}, {'name': 'HOMING XY', 'response': 2, 'gcode': 'FAIL_XY_AND_HOME', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 3, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 20:19:29,292 [KlippyGtk.py:Dialog()] - Showing dialog  Falla de Motor Detectada en Carro XY (width=1024, height=600)
2025-04-09 20:19:47,552 [screen.py:_send_action()] - printer.gcode.script: {'script': 'RESETEAR_ALARMA_MOTORES'}
2025-04-09 20:19:48,420 [screen.py:_send_action()] - printer.gcode.script: {'script': 'RESPOND TYPE=command MSG="action:prompt_end"'}
2025-04-09 20:19:48,432 [prompts.py:decode()] - prompt_end
2025-04-09 20:19:48,439 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 20:19:49,841 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 20:20:12,525 [screen.py:show_popup_message()] - error: No trigger on y after full movement
2025-04-09 20:20:12,605 [prompts.py:decode()] - prompt_begin Falla de Motor Detectada en Carro XY
2025-04-09 20:20:12,607 [prompts.py:decode()] - prompt_text Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes
2025-04-09 20:20:12,608 [prompts.py:decode()] - prompt_footer_button Reset Alarma|RESETEAR_ALARMA_MOTORES|primary
2025-04-09 20:20:12,609 [prompts.py:decode()] - prompt_footer_button HOMING XY|FAIL_XY_AND_HOME|primary
2025-04-09 20:20:12,610 [prompts.py:decode()] - prompt_footer_button Cerrar esta pestaña|RESPOND TYPE=command MSG="action:prompt_end"|error
2025-04-09 20:20:12,611 [prompts.py:decode()] - prompt_show
2025-04-09 20:20:12,611 [prompts.py:show()] - Prompt  Falla de Motor Detectada en Carro XY Se ha detectado una falla en algún motor de los carros X o Y. Se requerirá un homing de los ejes [{'name': 'Reset Alarma', 'response': 1, 'gcode': 'RESETEAR_ALARMA_MOTORES', 'style': 'dialog-primary'}, {'name': 'HOMING XY', 'response': 2, 'gcode': 'FAIL_XY_AND_HOME', 'style': 'dialog-primary'}, {'name': 'Cerrar esta pestaña', 'response': 3, 'gcode': 'RESPOND TYPE=command MSG="action:prompt_end"', 'style': 'dialog-error'}]
2025-04-09 20:20:12,673 [KlippyGtk.py:Dialog()] - Showing dialog  Falla de Motor Detectada en Carro XY (width=1024, height=600)
2025-04-09 20:20:58,835 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2025-04-09 20:20:58,836 [printer.py:change_state()] - Adding callback for state: disconnected
2025-04-09 20:20:58,860 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:20:58,861 [screen.py:state_disconnected()] - ### Going to disconnected
2025-04-09 20:20:58,862 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:20:58,968 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2025-04-09 20:20:58,968 [screen.py:show_panel()] - Reinitializing panel splash_screen
2025-04-09 20:20:59,046 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2025-04-09 20:21:03,786 [screen.py:init_klipper()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['secrets', 'template', 'klippy_connection', 'jsonrpc', 'internal_transport', 'application', 'websockets', 'dbus_manager', 'database', 'file_manager', 'authorization', 'klippy_apis', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-324-ga3e4dac', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2025-04-09 20:21:05,085 [printer.py:log_counts()] - Klipper version: v0.12.0-490-g5493bdfb-dirty
2025-04-09 20:21:05,086 [printer.py:log_counts()] - # Extruders: 2
2025-04-09 20:21:05,086 [printer.py:log_counts()] - # Temperature devices: 7
2025-04-09 20:21:05,086 [printer.py:log_counts()] - # Fans: 2
2025-04-09 20:21:05,087 [printer.py:log_counts()] - # Output pins: 3
2025-04-09 20:21:05,087 [printer.py:log_counts()] - # PWM tools: 0
2025-04-09 20:21:05,087 [printer.py:log_counts()] - # Leds: 0
2025-04-09 20:21:05,334 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2025-04-09 20:21:05,336 [files.py:set_gcodes_path()] - Gcodes path: /home/biqu/printer_data/gcodes
2025-04-09 20:21:05,337 [screen.py:init_klipper()] - Printer initialized
2025-04-09 20:21:05,339 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2025-04-09 20:21:05,340 [printer.py:change_state()] - Adding callback for state: startup
2025-04-09 20:21:05,370 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:21:07,828 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2025-04-09 20:21:07,829 [printer.py:change_state()] - Adding callback for state: ready
2025-04-09 20:21:07,853 [screen.py:set_screenblanking_timeout()] - Blanking timeout: 3600 DPMS:False
2025-04-09 20:21:07,854 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2025-04-09 20:21:07,857 [screen.py:_remove_all_panels()] - Removing all panels
2025-04-09 20:21:07,941 [screen.py:show_panel()] - Reinitializing panel main_menu
2025-04-09 20:21:08,134 [main_menu.py:__init__()] - ### Making MainMenu
2025-04-09 20:21:08,200 [main_menu.py:add_device()] - Adding device: extruder
2025-04-09 20:21:08,201 [main_menu.py:add_device()] - Device 'extruder' translated to 'Extrusor0'
2025-04-09 20:21:08,210 [main_menu.py:add_device()] - Adding device: extruder1
2025-04-09 20:21:08,211 [main_menu.py:add_device()] - Device 'extruder1' translated to 'Extrusor1'
2025-04-09 20:21:08,220 [main_menu.py:add_device()] - Adding device: heater_bed
2025-04-09 20:21:08,221 [main_menu.py:add_device()] - Device 'heater_bed' translated to 'Cama'
2025-04-09 20:21:08,230 [main_menu.py:add_device()] - Adding device: heater_generic auxiliar_T0_heater
2025-04-09 20:21:08,239 [main_menu.py:add_device()] - Adding device: temperature_sensor Silicona
2025-04-09 20:21:08,248 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_MANTA_M8P
2025-04-09 20:21:08,257 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_CB1
2025-04-09 20:21:08,266 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_0
2025-04-09 20:21:08,275 [main_menu.py:add_device()] - Adding device: temperature_sensor MCU_EBBCan_1
2025-04-09 20:21:08,284 [main_menu.py:add_device()] - Adding device: temperature_fan _bomba_refrigeracion
2025-04-09 20:21:08,285 [main_menu.py:add_device()] - Device 'temperature_fan _bomba_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:21:08,285 [main_menu.py:add_device()] - Adding device: temperature_fan _ventiladores_refrigeracion
2025-04-09 20:21:08,285 [main_menu.py:add_device()] - Device 'temperature_fan _ventiladores_refrigeracion' suppressed because it starts with '_'
2025-04-09 20:21:08,318 [menu.py:arrangeMenuItems()] - X > gcodes
2025-04-09 20:21:08,370 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:21:08,480 [printer.py:init_temp_store()] - Temp store: ['temperature_sensor Silicona', 'heater_bed', 'temperature_fan _bomba_refrigeracion', 'temperature_fan _ventiladores_refrigeracion', 'temperature_sensor MCU_MANTA_M8P', 'temperature_sensor MCU_CB1', 'heater_generic auxiliar_T0_heater', 'temperature_sensor MCU_EBBCan_0', 'temperature_sensor MCU_EBBCan_1', 'extruder', 'extruder1']
2025-04-09 20:21:08,506 [screen.py:init_tempstore()] - Temperature store size: 1200
2025-04-09 20:21:11,283 [screen.py:show_panel()] - Reinitializing panel move
2025-04-09 20:21:11,444 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 20:21:12,275 [screen.py:show_panel()] - Reinitializing panel menu
2025-04-09 20:21:12,524 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 20:21:12,607 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 20:21:13,693 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2025-04-09 20:21:20,148 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2025-04-09 20:21:29,886 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 20:21:29,976 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 20:21:31,878 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:31,888 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:32,427 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:32,432 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:32,814 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:32,819 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:33,377 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:33,383 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:33,770 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:33,775 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:34,678 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:34,683 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:35,113 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:35,118 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:35,444 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:35,450 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:35,754 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:35,759 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:36,279 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:36,283 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:36,582 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:36,588 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:36,957 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 y-50 F6000'}
2025-04-09 20:21:36,962 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:39,340 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:21:39,346 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:40,211 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:21:40,216 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:40,578 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:21:40,583 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:40,938 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:21:40,943 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:41,357 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x+50 F6000'}
2025-04-09 20:21:41,362 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:42,362 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 20:21:42,449 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:21:43,842 [screen.py:show_panel()] - Reinitializing panel extrude
2025-04-09 20:21:43,982 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > extrude
2025-04-09 20:21:44,591 [extrude.py:change_extruder()] - Changing extruder to extruder1
2025-04-09 20:21:44,592 [screen.py:_send_action()] - printer.gcode.script: {'script': 'T1'}
2025-04-09 20:21:45,127 [screen.py:_menu_go_back()] - #### Menu go back
2025-04-09 20:21:45,197 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2025-04-09 20:21:46,144 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2025-04-09 20:21:47,979 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:21:47,985 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:48,819 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:21:48,823 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:49,240 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:21:49,246 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:49,541 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:21:49,547 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:49,920 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:21:49,926 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:50,240 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:21:50,245 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:21:50,550 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 x-50 F6000'}
2025-04-09 20:21:50,555 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2025-04-09 20:22:02,238 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2025-04-09 20:22:02,320 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2025-04-09 20:22:04,298 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Z'}
2025-04-09 20:22:08,489 [screen.py:show_popup_message()] - error: Endstop z still triggered after retract
2025-04-09 20:22:30,462 [prompts.py:decode()] - prompt_end
2025-04-09 20:22:30,464 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0xffffb08f6340 (GtkDialog at 0x2374e310)>
